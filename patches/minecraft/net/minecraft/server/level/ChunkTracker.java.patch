--- a/net/minecraft/server/level/ChunkTracker.java
+++ b/net/minecraft/server/level/ChunkTracker.java
@@ -3,26 +_,32 @@
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.lighting.DynamicGraphMinFixedPoint;
 
-public abstract class ChunkTracker extends DynamicGraphMinFixedPoint {
+public abstract class ChunkTracker extends DynamicGraphMinFixedPoint<net.minecraft.world.level.ChunkPos> {
    protected ChunkTracker(int p_140701_, int p_140702_, int p_140703_) {
       super(p_140701_, p_140702_, p_140703_);
    }
 
-   protected boolean m_6163_(long p_140705_) {
-      return p_140705_ == ChunkPos.f_45577_;
-   }
-
-   protected void m_7900_(long p_140707_, int p_140708_, boolean p_140709_) {
-      if (!p_140709_ || p_140708_ < this.f_75537_ - 2) {
-         ChunkPos chunkpos = new ChunkPos(p_140707_);
-         int i = chunkpos.f_45578_;
-         int j = chunkpos.f_45579_;
+   protected boolean isSource(net.minecraft.world.level.ChunkPos pPos) {
+      return pPos.equals(ChunkPos.f_45577_);
+   }
+
+   @Override
+   protected ChunkPos createPosFromBlockPos(net.minecraft.core.BlockPos blockPos) {
+      return new ChunkPos(blockPos);
+   }
+
+   @Override
+   protected void checkNeighborsAfterUpdate(ChunkPos pPos, int pLevel, boolean pIsDecreasing) {
+      if (!pIsDecreasing || pLevel < this.f_75537_ - 2) {
+         ChunkPos chunkpos = pPos;
+         me.alphamode.mclong.math.BigInteger i = chunkpos.getX();
+         me.alphamode.mclong.math.BigInteger j = chunkpos.getZ();
 
          for(int k = -1; k <= 1; ++k) {
             for(int l = -1; l <= 1; ++l) {
-               long i1 = ChunkPos.m_45589_(i + k, j + l);
-               if (i1 != p_140707_) {
-                  this.m_75593_(p_140707_, i1, p_140708_, p_140709_);
+               ChunkPos i1 = new ChunkPos(i.add(k), j.add(l));
+               if (!i1.equals(chunkpos)) {
+                  this.checkNeighbor(pPos, i1, pLevel, pIsDecreasing);
                }
             }
          }
@@ -30,21 +_,21 @@
       }
    }
 
-   protected int m_6357_(long p_140711_, long p_140712_, int p_140713_) {
-      int i = p_140713_;
-      ChunkPos chunkpos = new ChunkPos(p_140711_);
-      int j = chunkpos.f_45578_;
-      int k = chunkpos.f_45579_;
+   protected int getComputedLevel(ChunkPos pPos, ChunkPos pExcludedSourcePos, int pLevel) {
+      int i = pLevel;
+      ChunkPos chunkpos = pPos;
+      me.alphamode.mclong.math.BigInteger j = chunkpos.getX();
+      me.alphamode.mclong.math.BigInteger k = chunkpos.getZ();
 
       for(int l = -1; l <= 1; ++l) {
          for(int i1 = -1; i1 <= 1; ++i1) {
-            long j1 = ChunkPos.m_45589_(j + l, k + i1);
-            if (j1 == p_140711_) {
+            ChunkPos j1 = new ChunkPos(j.add(l), k.add(i1));
+            if (j1.equals(chunkpos)) {
                j1 = ChunkPos.f_45577_;
             }
 
-            if (j1 != p_140712_) {
-               int k1 = this.m_6359_(j1, p_140711_, this.m_6172_(j1));
+            if (!j1.equals(pExcludedSourcePos)) {
+               int k1 = this.computeLevelFromNeighbor(j1, pPos, this.getLevel(j1));
                if (i > k1) {
                   i = k1;
                }
@@ -59,13 +_,13 @@
       return i;
    }
 
-   protected int m_6359_(long p_140720_, long p_140721_, int p_140722_) {
-      return p_140720_ == ChunkPos.f_45577_ ? this.m_7031_(p_140721_) : p_140722_ + 1;
+   protected int computeLevelFromNeighbor(ChunkPos pStartPos, ChunkPos pEndPos, int pStartLevel) {
+      return pStartPos.equals(ChunkPos.f_45577_) ? this.getLevelFromSource(pEndPos) : pStartLevel + 1;
    }
 
-   protected abstract int m_7031_(long p_140714_);
+   protected abstract int getLevelFromSource(net.minecraft.world.level.ChunkPos pPos);
 
-   public void m_140715_(long p_140716_, int p_140717_, boolean p_140718_) {
-      this.m_75576_(ChunkPos.f_45577_, p_140716_, p_140717_, p_140718_);
+   public void update(net.minecraft.world.level.ChunkPos pPos, int pLevel, boolean pIsDecreasing) {
+      this.checkEdge(ChunkPos.f_45577_, pPos, pLevel, pIsDecreasing);
    }
 }
