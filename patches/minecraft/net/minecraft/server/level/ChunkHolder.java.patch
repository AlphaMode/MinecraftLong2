--- a/net/minecraft/server/level/ChunkHolder.java
+++ b/net/minecraft/server/level/ChunkHolder.java
@@ -75,7 +_,7 @@
       this.f_140007_ = this.f_140006_;
       this.f_140008_ = this.f_140006_;
       this.m_140027_(p_142987_);
-      this.f_140011_ = new ShortSet[p_142988_.m_151559_()];
+      this.f_140011_ = new ShortSet[(int) p_142988_.m_151559_()]; // TODO: long support
    }
 
    public CompletableFuture<Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>> m_140047_(ChunkStatus p_140048_) {
@@ -149,17 +_,17 @@
    public void m_140056_(BlockPos p_140057_) {
       LevelChunk levelchunk = this.m_140085_();
       if (levelchunk != null) {
-         int i = this.f_142983_.m_151564_(p_140057_.m_123342_());
-         if (this.f_140011_[i] == null) {
+         long i = this.f_142983_.getSectionIndex(p_140057_.getY());
+         if (this.f_140011_[(int) i] == null) { // TODO: long support
             this.f_140010_ = true;
-            this.f_140011_[i] = new ShortOpenHashSet();
+            this.f_140011_[(int) i] = new ShortOpenHashSet();
          }
 
-         this.f_140011_[i].add(SectionPos.m_123218_(p_140057_));
+         this.f_140011_[(int) i].add(SectionPos.m_123218_(p_140057_));
       }
    }
 
-   public void m_140036_(LightLayer p_140037_, int p_140038_) {
+   public void sectionLightChanged(LightLayer p_140037_, long p_140038_) {
       Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure> either = this.m_140080_(ChunkStatus.f_279614_).getNow((Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>)null);
       if (either != null) {
          ChunkAccess chunkaccess = either.left().orElse((ChunkAccess)null);
@@ -167,14 +_,14 @@
             chunkaccess.m_8092_(true);
             LevelChunk levelchunk = this.m_140085_();
             if (levelchunk != null) {
-               int i = this.f_140014_.m_164447_();
-               int j = this.f_140014_.m_164448_();
+               long i = this.f_140014_.getMinLightSection();
+               long j = this.f_140014_.getMaxLightSection();
                if (p_140038_ >= i && p_140038_ <= j) {
-                  int k = p_140038_ - i;
+                  long k = p_140038_ - i;
                   if (p_140037_ == LightLayer.SKY) {
-                     this.f_140013_.set(k);
+                     this.f_140013_.set((int) k);
                   } else {
-                     this.f_140012_.set(k);
+                     this.f_140012_.set((int) k);
                   }
 
                }
@@ -205,8 +_,8 @@
                if (shortset != null) {
                   this.f_140011_[j] = null;
                   if (!list1.isEmpty()) {
-                     int i = this.f_142983_.m_151568_(j);
-                     SectionPos sectionpos = SectionPos.m_123196_(p_140055_.m_7697_(), i);
+                     long i = this.f_142983_.getSectionYFromSectionIndex(j);
+                     SectionPos sectionpos = SectionPos.of(p_140055_.m_7697_(), i);
                      if (shortset.size() == 1) {
                         BlockPos blockpos = sectionpos.m_123245_(shortset.iterator().nextShort());
                         BlockState blockstate = level.m_8055_(blockpos);
@@ -270,6 +_,7 @@
 
       if (ChunkLevel.m_287158_(this.f_140007_).m_62427_(p_140050_)) {
          CompletableFuture<Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>> completablefuture1 = p_140051_.m_140292_(this, p_140050_);
+         this.m_143017_(completablefuture1, "schedule " + p_140050_);
          this.m_143017_(completablefuture1, "schedule " + p_140050_);
          this.f_140001_.set(i, completablefuture1);
          return completablefuture1;
