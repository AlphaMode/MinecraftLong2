--- a/net/minecraft/server/commands/ForceLoadCommand.java
+++ b/net/minecraft/server/commands/ForceLoadCommand.java
@@ -53,7 +_,7 @@
       ChunkPos chunkpos = p_137684_.m_143196_();
       ServerLevel serverlevel = p_137683_.m_81372_();
       ResourceKey<Level> resourcekey = serverlevel.m_46472_();
-      boolean flag = serverlevel.m_8902_().contains(chunkpos.m_45588_());
+      boolean flag = serverlevel.getForcedChunks().contains(chunkpos);
       if (flag) {
          p_137683_.m_288197_(() -> {
             return Component.m_237110_("commands.forceload.query.success", chunkpos, resourcekey.m_135782_());
@@ -67,10 +_,10 @@
    private static int m_137680_(CommandSourceStack p_137681_) {
       ServerLevel serverlevel = p_137681_.m_81372_();
       ResourceKey<Level> resourcekey = serverlevel.m_46472_();
-      LongSet longset = serverlevel.m_8902_();
+      it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos> longset = serverlevel.getForcedChunks();
       int i = longset.size();
       if (i > 0) {
-         String s = Joiner.on(", ").join(longset.stream().sorted().map(ChunkPos::new).map(ChunkPos::toString).iterator());
+         String s = Joiner.on(", ").join(longset.stream().sorted().map(ChunkPos::toString).iterator());
          if (i == 1) {
             p_137681_.m_288197_(() -> {
                return Component.m_237110_("commands.forceload.list.single", resourcekey.m_135782_(), s);
@@ -90,9 +_,9 @@
    private static int m_137695_(CommandSourceStack p_137696_) {
       ServerLevel serverlevel = p_137696_.m_81372_();
       ResourceKey<Level> resourcekey = serverlevel.m_46472_();
-      LongSet longset = serverlevel.m_8902_();
+      it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos> longset = serverlevel.getForcedChunks();
       longset.forEach((p_137675_) -> {
-         serverlevel.m_8602_(ChunkPos.m_45592_(p_137675_), ChunkPos.m_45602_(p_137675_), false);
+         serverlevel.setChunkForced(p_137675_.getX(), p_137675_.getZ(), false);
       });
       p_137696_.m_288197_(() -> {
          return Component.m_237110_("commands.forceload.removed.all", resourcekey.m_135782_());
@@ -101,17 +_,16 @@
    }
 
    private static int m_137685_(CommandSourceStack p_137686_, ColumnPos p_137687_, ColumnPos p_137688_, boolean p_137689_) throws CommandSyntaxException {
-      int i = Math.min(p_137687_.f_140723_(), p_137688_.f_140723_());
-      int j = Math.min(p_137687_.f_140724_(), p_137688_.f_140724_());
-      int k = Math.max(p_137687_.f_140723_(), p_137688_.f_140723_());
-      int l = Math.max(p_137687_.f_140724_(), p_137688_.f_140724_());
-      if (i >= -30000000 && j >= -30000000 && k < 30000000 && l < 30000000) {
-         int i1 = SectionPos.m_123171_(i);
-         int j1 = SectionPos.m_123171_(j);
-         int k1 = SectionPos.m_123171_(k);
-         int l1 = SectionPos.m_123171_(l);
-         long i2 = ((long)(k1 - i1) + 1L) * ((long)(l1 - j1) + 1L);
-         if (i2 > 256L) {
+      me.alphamode.mclong.math.BigInteger i = p_137687_.x().min(p_137688_.x());
+      me.alphamode.mclong.math.BigInteger j = p_137687_.z().min(p_137688_.z());
+      me.alphamode.mclong.math.BigInteger k = p_137687_.x().max(p_137688_.x());
+      me.alphamode.mclong.math.BigInteger l = p_137687_.z().max(p_137688_.z());
+         me.alphamode.mclong.math.BigInteger i1 = SectionPos.blockToSectionCoord(i);
+         me.alphamode.mclong.math.BigInteger j1 = SectionPos.blockToSectionCoord(j);
+         me.alphamode.mclong.math.BigInteger k1 = SectionPos.blockToSectionCoord(k);
+         me.alphamode.mclong.math.BigInteger l1 = SectionPos.blockToSectionCoord(l);
+      me.alphamode.mclong.math.BigInteger i2 = ((k1.subtract(i1)).add()).multiply(((l1.subtract(j1)).add()));
+         if (i2.compareTo(256L) > 0) {
             throw f_137668_.create(256, i2);
          } else {
             ServerLevel serverlevel = p_137686_.m_81372_();
@@ -119,9 +_,9 @@
             ChunkPos chunkpos = null;
             int j2 = 0;
 
-            for(int k2 = i1; k2 <= k1; ++k2) {
-               for(int l2 = j1; l2 <= l1; ++l2) {
-                  boolean flag = serverlevel.m_8602_(k2, l2, p_137689_);
+            for(me.alphamode.mclong.math.BigInteger k2 = i1; k2.compareTo(k1) <= 0; k2 = k2.add()) {
+               for(me.alphamode.mclong.math.BigInteger l2 = j1; l2.compareTo(l1) <= 0; l2 = l2.add()) {
+                  boolean flag = serverlevel.setChunkForced(k2, l2, p_137689_);
                   if (flag) {
                      ++j2;
                      if (chunkpos == null) {
@@ -150,8 +_,5 @@
                return j2;
             }
          }
-      } else {
-         throw BlockPosArgument.f_118235_.create();
-      }
    }
 }
