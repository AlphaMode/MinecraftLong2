--- a/net/minecraft/server/commands/ForceLoadCommand.java
+++ b/net/minecraft/server/commands/ForceLoadCommand.java
@@ -92,7 +_,7 @@
       ResourceKey<Level> resourcekey = serverlevel.m_46472_();
       LongSet longset = serverlevel.m_8902_();
       longset.forEach((p_137675_) -> {
-         serverlevel.m_8602_(ChunkPos.m_45592_(p_137675_), ChunkPos.m_45602_(p_137675_), false);
+         serverlevel.setChunkForced(ChunkPos.m_45592_(p_137675_), ChunkPos.m_45602_(p_137675_), false);
       });
       p_137696_.m_288197_(() -> {
          return Component.m_237110_("commands.forceload.removed.all", resourcekey.m_135782_());
@@ -101,15 +_,14 @@
    }
 
    private static int m_137685_(CommandSourceStack p_137686_, ColumnPos p_137687_, ColumnPos p_137688_, boolean p_137689_) throws CommandSyntaxException {
-      int i = Math.min(p_137687_.f_140723_(), p_137688_.f_140723_());
-      int j = Math.min(p_137687_.f_140724_(), p_137688_.f_140724_());
-      int k = Math.max(p_137687_.f_140723_(), p_137688_.f_140723_());
-      int l = Math.max(p_137687_.f_140724_(), p_137688_.f_140724_());
-      if (i >= -30000000 && j >= -30000000 && k < 30000000 && l < 30000000) {
-         int i1 = SectionPos.m_123171_(i);
-         int j1 = SectionPos.m_123171_(j);
-         int k1 = SectionPos.m_123171_(k);
-         int l1 = SectionPos.m_123171_(l);
+      long i = Math.min(p_137687_.x(), p_137688_.x());
+      long j = Math.min(p_137687_.z(), p_137688_.z());
+      long k = Math.max(p_137687_.x(), p_137688_.x());
+      long l = Math.max(p_137687_.z(), p_137688_.z());
+         long i1 = SectionPos.blockToSectionCoord(i);
+         long j1 = SectionPos.blockToSectionCoord(j);
+         long k1 = SectionPos.blockToSectionCoord(k);
+         long l1 = SectionPos.blockToSectionCoord(l);
          long i2 = ((long)(k1 - i1) + 1L) * ((long)(l1 - j1) + 1L);
          if (i2 > 256L) {
             throw f_137668_.create(256, i2);
@@ -119,9 +_,9 @@
             ChunkPos chunkpos = null;
             int j2 = 0;
 
-            for(int k2 = i1; k2 <= k1; ++k2) {
-               for(int l2 = j1; l2 <= l1; ++l2) {
-                  boolean flag = serverlevel.m_8602_(k2, l2, p_137689_);
+            for(long k2 = i1; k2 <= k1; ++k2) {
+               for(long l2 = j1; l2 <= l1; ++l2) {
+                  boolean flag = serverlevel.setChunkForced(k2, l2, p_137689_);
                   if (flag) {
                      ++j2;
                      if (chunkpos == null) {
@@ -150,8 +_,5 @@
                return j2;
             }
          }
-      } else {
-         throw BlockPosArgument.f_118235_.create();
-      }
    }
 }
