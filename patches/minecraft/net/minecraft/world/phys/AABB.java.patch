--- a/net/minecraft/world/phys/AABB.java
+++ b/net/minecraft/world/phys/AABB.java
@@ -8,73 +_,82 @@
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
 
 public class AABB {
-   private static final double f_165879_ = 1.0E-7D;
-   public final double f_82288_;
-   public final double f_82289_;
-   public final double f_82290_;
-   public final double f_82291_;
-   public final double f_82292_;
-   public final double f_82293_;
+   private static final me.alphamode.mclong.math.BigDecimal f_165879_ = me.alphamode.mclong.math.BigDecimal.valueOf(1.0E-7D);
+   public final me.alphamode.mclong.math.BigDecimal f_82288_;
+   public final me.alphamode.mclong.math.BigDecimal f_82289_;
+   public final me.alphamode.mclong.math.BigDecimal f_82290_;
+   public final me.alphamode.mclong.math.BigDecimal f_82291_;
+   public final me.alphamode.mclong.math.BigDecimal f_82292_;
+   public final me.alphamode.mclong.math.BigDecimal f_82293_;
 
    public AABB(double p_82295_, double p_82296_, double p_82297_, double p_82298_, double p_82299_, double p_82300_) {
-      this.f_82288_ = Math.min(p_82295_, p_82298_);
-      this.f_82289_ = Math.min(p_82296_, p_82299_);
-      this.f_82290_ = Math.min(p_82297_, p_82300_);
-      this.f_82291_ = Math.max(p_82295_, p_82298_);
-      this.f_82292_ = Math.max(p_82296_, p_82299_);
-      this.f_82293_ = Math.max(p_82297_, p_82300_);
+      this.f_82288_ = me.alphamode.mclong.math.BigDecimal.valueOf(Math.min(p_82295_, p_82298_));
+      this.f_82289_ = me.alphamode.mclong.math.BigDecimal.valueOf(Math.min(p_82296_, p_82299_));
+      this.f_82290_ = me.alphamode.mclong.math.BigDecimal.valueOf(Math.min(p_82297_, p_82300_));
+      this.f_82291_ = me.alphamode.mclong.math.BigDecimal.valueOf(Math.max(p_82295_, p_82298_));
+      this.f_82292_ = me.alphamode.mclong.math.BigDecimal.valueOf(Math.max(p_82296_, p_82299_));
+      this.f_82293_ = me.alphamode.mclong.math.BigDecimal.valueOf(Math.max(p_82297_, p_82300_));
+   }
+
+   public AABB(me.alphamode.mclong.math.BigDecimal pX1, me.alphamode.mclong.math.BigDecimal pY1, me.alphamode.mclong.math.BigDecimal pZ1, me.alphamode.mclong.math.BigDecimal pX2, me.alphamode.mclong.math.BigDecimal pY2, me.alphamode.mclong.math.BigDecimal pZ2) {
+      this.f_82288_ = pX1.min(pX2);
+      this.f_82289_ = pY1.min(pY2);
+      this.f_82290_ = pZ1.min(pZ2);
+      this.f_82291_ = pX1.max(pX2);
+      this.f_82292_ = pY1.max(pY2);
+      this.f_82293_ = pZ1.max(pZ2);
    }
 
    public AABB(BlockPos p_82305_) {
-      this((double)p_82305_.m_123341_(), (double)p_82305_.m_123342_(), (double)p_82305_.m_123343_(), (double)(p_82305_.m_123341_() + 1), (double)(p_82305_.m_123342_() + 1), (double)(p_82305_.m_123343_() + 1));
+      this(p_82305_.getBigDecX(), p_82305_.getBigDecY(), p_82305_.getBigDecZ(), p_82305_.getBigDecX().add(), p_82305_.getBigDecY().add(), p_82305_.getBigDecZ().add());
    }
 
    public AABB(BlockPos p_82307_, BlockPos p_82308_) {
-      this((double)p_82307_.m_123341_(), (double)p_82307_.m_123342_(), (double)p_82307_.m_123343_(), (double)p_82308_.m_123341_(), (double)p_82308_.m_123342_(), (double)p_82308_.m_123343_());
+      this(p_82307_.getBigDecX(), p_82307_.getBigDecY(), p_82307_.getBigDecZ(), p_82308_.getBigDecX(), p_82308_.getBigDecY(), p_82308_.getBigDecZ());
    }
 
    public AABB(Vec3 p_82302_, Vec3 p_82303_) {
-      this(p_82302_.f_82479_, p_82302_.f_82480_, p_82302_.f_82481_, p_82303_.f_82479_, p_82303_.f_82480_, p_82303_.f_82481_);
+      this(p_82302_.getX(), p_82302_.getY(), p_82302_.getZ(), p_82303_.getX(), p_82303_.getY(), p_82303_.getZ());
    }
 
    public static AABB m_82321_(BoundingBox p_82322_) {
-      return new AABB((double)p_82322_.m_162395_(), (double)p_82322_.m_162396_(), (double)p_82322_.m_162398_(), (double)(p_82322_.m_162399_() + 1), (double)(p_82322_.m_162400_() + 1), (double)(p_82322_.m_162401_() + 1));
+      return new AABB(p_82322_.minBigX().toBigDecimal(), p_82322_.minBigY().toBigDecimal(), p_82322_.minBigZ().toBigDecimal(), (p_82322_.maxBigX().add().toBigDecimal()), (p_82322_.maxBigY().add().toBigDecimal()), (p_82322_.maxBigZ().add().toBigDecimal()));
    }
 
    public static AABB m_82333_(Vec3 p_82334_) {
-      return new AABB(p_82334_.f_82479_, p_82334_.f_82480_, p_82334_.f_82481_, p_82334_.f_82479_ + 1.0D, p_82334_.f_82480_ + 1.0D, p_82334_.f_82481_ + 1.0D);
+      return new AABB(p_82334_.m_7096_(), p_82334_.m_7098_(), p_82334_.m_7094_(), p_82334_.m_7096_() + 1.0D, p_82334_.m_7098_() + 1.0D, p_82334_.m_7094_() + 1.0D);
    }
 
    public AABB m_165880_(double p_165881_) {
-      return new AABB(p_165881_, this.f_82289_, this.f_82290_, this.f_82291_, this.f_82292_, this.f_82293_);
+      return new AABB(me.alphamode.mclong.math.BigDecimal.valueOf(p_165881_), this.f_82289_, this.f_82290_, this.f_82291_, this.f_82292_, this.f_82293_);
    }
 
    public AABB m_165887_(double p_165888_) {
-      return new AABB(this.f_82288_, p_165888_, this.f_82290_, this.f_82291_, this.f_82292_, this.f_82293_);
+      return new AABB(this.f_82288_, me.alphamode.mclong.math.BigDecimal.valueOf(p_165888_), this.f_82290_, this.f_82291_, this.f_82292_, this.f_82293_);
    }
 
    public AABB m_165889_(double p_165890_) {
-      return new AABB(this.f_82288_, this.f_82289_, p_165890_, this.f_82291_, this.f_82292_, this.f_82293_);
+      return new AABB(this.f_82288_, this.f_82289_, me.alphamode.mclong.math.BigDecimal.valueOf(p_165890_), this.f_82291_, this.f_82292_, this.f_82293_);
    }
 
    public AABB m_165891_(double p_165892_) {
-      return new AABB(this.f_82288_, this.f_82289_, this.f_82290_, p_165892_, this.f_82292_, this.f_82293_);
+      return new AABB(this.f_82288_, this.f_82289_, this.f_82290_, me.alphamode.mclong.math.BigDecimal.valueOf(p_165892_), this.f_82292_, this.f_82293_);
    }
 
    public AABB m_165893_(double p_165894_) {
-      return new AABB(this.f_82288_, this.f_82289_, this.f_82290_, this.f_82291_, p_165894_, this.f_82293_);
+      return new AABB(this.f_82288_, this.f_82289_, this.f_82290_, this.f_82291_, me.alphamode.mclong.math.BigDecimal.valueOf(p_165894_), this.f_82293_);
    }
 
    public AABB m_165895_(double p_165896_) {
-      return new AABB(this.f_82288_, this.f_82289_, this.f_82290_, this.f_82291_, this.f_82292_, p_165896_);
-   }
-
-   public double m_82340_(Direction.Axis p_82341_) {
-      return p_82341_.m_6150_(this.f_82288_, this.f_82289_, this.f_82290_);
-   }
-
-   public double m_82374_(Direction.Axis p_82375_) {
-      return p_82375_.m_6150_(this.f_82291_, this.f_82292_, this.f_82293_);
+      return new AABB(this.f_82288_, this.f_82289_, this.f_82290_, this.f_82291_, this.f_82292_, me.alphamode.mclong.math.BigDecimal.valueOf(p_165896_));
+   }
+
+   public me.alphamode.mclong.math.BigDecimal min(Direction.Axis pAxis) {
+      return pAxis.choose(this.f_82288_, this.f_82289_, this.f_82290_);
+   }
+
+   public me.alphamode.mclong.math.BigDecimal max(Direction.Axis pAxis) {
+      return pAxis.choose(this.f_82291_, this.f_82292_, this.f_82293_);
    }
 
    public boolean equals(Object p_82398_) {
@@ -84,104 +_,142 @@
          return false;
       } else {
          AABB aabb = (AABB)p_82398_;
-         if (Double.compare(aabb.f_82288_, this.f_82288_) != 0) {
-            return false;
-         } else if (Double.compare(aabb.f_82289_, this.f_82289_) != 0) {
-            return false;
-         } else if (Double.compare(aabb.f_82290_, this.f_82290_) != 0) {
-            return false;
-         } else if (Double.compare(aabb.f_82291_, this.f_82291_) != 0) {
-            return false;
-         } else if (Double.compare(aabb.f_82292_, this.f_82292_) != 0) {
+         if (aabb.f_82288_.compareTo(this.f_82288_) != 0) {
+            return false;
+         } else if (aabb.f_82289_.compareTo(this.f_82289_) != 0) {
+            return false;
+         } else if (aabb.f_82290_.compareTo(this.f_82290_) != 0) {
+            return false;
+         } else if (aabb.f_82291_.compareTo(this.f_82291_) != 0) {
+            return false;
+         } else if (aabb.f_82292_.compareTo(this.f_82292_) != 0) {
             return false;
          } else {
-            return Double.compare(aabb.f_82293_, this.f_82293_) == 0;
+            return aabb.f_82293_.compareTo(this.f_82293_) == 0;
          }
       }
    }
 
    public int hashCode() {
-      long i = Double.doubleToLongBits(this.f_82288_);
+      long i = Double.doubleToLongBits(this.f_82288_.doubleValue());
       int j = (int)(i ^ i >>> 32);
-      i = Double.doubleToLongBits(this.f_82289_);
-      j = 31 * j + (int)(i ^ i >>> 32);
-      i = Double.doubleToLongBits(this.f_82290_);
-      j = 31 * j + (int)(i ^ i >>> 32);
-      i = Double.doubleToLongBits(this.f_82291_);
-      j = 31 * j + (int)(i ^ i >>> 32);
-      i = Double.doubleToLongBits(this.f_82292_);
-      j = 31 * j + (int)(i ^ i >>> 32);
-      i = Double.doubleToLongBits(this.f_82293_);
+      i = Double.doubleToLongBits(this.f_82289_.doubleValue());
+      j = 31 * j + (int)(i ^ i >>> 32);
+      i = Double.doubleToLongBits(this.f_82290_.doubleValue());
+      j = 31 * j + (int)(i ^ i >>> 32);
+      i = Double.doubleToLongBits(this.f_82291_.doubleValue());
+      j = 31 * j + (int)(i ^ i >>> 32);
+      i = Double.doubleToLongBits(this.f_82292_.doubleValue());
+      j = 31 * j + (int)(i ^ i >>> 32);
+      i = Double.doubleToLongBits(this.f_82293_.doubleValue());
       return 31 * j + (int)(i ^ i >>> 32);
    }
 
    public AABB m_82310_(double p_82311_, double p_82312_, double p_82313_) {
-      double d0 = this.f_82288_;
-      double d1 = this.f_82289_;
-      double d2 = this.f_82290_;
-      double d3 = this.f_82291_;
-      double d4 = this.f_82292_;
-      double d5 = this.f_82293_;
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_82288_;
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_82289_;
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_82290_;
+      me.alphamode.mclong.math.BigDecimal d3 = this.f_82291_;
+      me.alphamode.mclong.math.BigDecimal d4 = this.f_82292_;
+      me.alphamode.mclong.math.BigDecimal d5 = this.f_82293_;
       if (p_82311_ < 0.0D) {
-         d0 -= p_82311_;
+         d0 = d0.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82311_));
       } else if (p_82311_ > 0.0D) {
-         d3 -= p_82311_;
+         d3 = d3.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82311_));
       }
 
       if (p_82312_ < 0.0D) {
-         d1 -= p_82312_;
+         d1 = d1.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82312_));
       } else if (p_82312_ > 0.0D) {
-         d4 -= p_82312_;
+         d4 = d4.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82312_));
       }
 
       if (p_82313_ < 0.0D) {
-         d2 -= p_82313_;
+         d2 = d2.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82313_));
       } else if (p_82313_ > 0.0D) {
-         d5 -= p_82313_;
+         d5 = d5.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82313_));
       }
 
       return new AABB(d0, d1, d2, d3, d4, d5);
    }
 
    public AABB m_82369_(Vec3 p_82370_) {
-      return this.m_82363_(p_82370_.f_82479_, p_82370_.f_82480_, p_82370_.f_82481_);
+      return this.expandTowards(p_82370_.getX(), p_82370_.getY(), p_82370_.getZ());
    }
 
    public AABB m_82363_(double p_82364_, double p_82365_, double p_82366_) {
-      double d0 = this.f_82288_;
-      double d1 = this.f_82289_;
-      double d2 = this.f_82290_;
-      double d3 = this.f_82291_;
-      double d4 = this.f_82292_;
-      double d5 = this.f_82293_;
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_82288_;
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_82289_;
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_82290_;
+      me.alphamode.mclong.math.BigDecimal d3 = this.f_82291_;
+      me.alphamode.mclong.math.BigDecimal d4 = this.f_82292_;
+      me.alphamode.mclong.math.BigDecimal d5 = this.f_82293_;
       if (p_82364_ < 0.0D) {
-         d0 += p_82364_;
+         d0 = d0.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82364_));
       } else if (p_82364_ > 0.0D) {
-         d3 += p_82364_;
+         d3 = d3.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82364_));
       }
 
       if (p_82365_ < 0.0D) {
-         d1 += p_82365_;
+         d1 = d1.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82365_));
       } else if (p_82365_ > 0.0D) {
-         d4 += p_82365_;
+         d4 = d4.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82365_));
       }
 
       if (p_82366_ < 0.0D) {
-         d2 += p_82366_;
+         d2 = d2.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82366_));
       } else if (p_82366_ > 0.0D) {
-         d5 += p_82366_;
+         d5 = d5.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82366_));
+      }
+
+      return new AABB(d0, d1, d2, d3, d4, d5);
+   }
+
+   public AABB expandTowards(me.alphamode.mclong.math.BigDecimal pX, me.alphamode.mclong.math.BigDecimal pY, me.alphamode.mclong.math.BigDecimal pZ) {
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_82288_;
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_82289_;
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_82290_;
+      me.alphamode.mclong.math.BigDecimal d3 = this.f_82291_;
+      me.alphamode.mclong.math.BigDecimal d4 = this.f_82292_;
+      me.alphamode.mclong.math.BigDecimal d5 = this.f_82293_;
+      if (pX.compareTo(me.alphamode.mclong.math.BigDecimal.ZERO) < 0) {
+         d0 = d0.add(pX);
+      } else if (pX.compareTo(me.alphamode.mclong.math.BigDecimal.ZERO) > 0) {
+         d3 = d3.add(pX);
+      }
+
+      if (pY.compareTo(me.alphamode.mclong.math.BigDecimal.ZERO) < 0) {
+         d1 = d1.add(pY);
+      } else if (pY.compareTo(me.alphamode.mclong.math.BigDecimal.ZERO) > 0) {
+         d4 = d4.add(pY);
+      }
+
+      if (pZ.compareTo(me.alphamode.mclong.math.BigDecimal.ZERO) < 0) {
+         d2 = d2.add(pZ);
+      } else if (pZ.compareTo(me.alphamode.mclong.math.BigDecimal.ZERO) > 0) {
+         d5 = d5.add(pZ);
       }
 
       return new AABB(d0, d1, d2, d3, d4, d5);
    }
 
    public AABB m_82377_(double p_82378_, double p_82379_, double p_82380_) {
-      double d0 = this.f_82288_ - p_82378_;
-      double d1 = this.f_82289_ - p_82379_;
-      double d2 = this.f_82290_ - p_82380_;
-      double d3 = this.f_82291_ + p_82378_;
-      double d4 = this.f_82292_ + p_82379_;
-      double d5 = this.f_82293_ + p_82380_;
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_82288_.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82378_));
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_82289_.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82379_));
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_82290_.subtract(me.alphamode.mclong.math.BigDecimal.valueOf(p_82380_));
+      me.alphamode.mclong.math.BigDecimal d3 = this.f_82291_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82378_));
+      me.alphamode.mclong.math.BigDecimal d4 = this.f_82292_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82379_));
+      me.alphamode.mclong.math.BigDecimal d5 = this.f_82293_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82380_));
+      return new AABB(d0, d1, d2, d3, d4, d5);
+   }
+
+   public AABB inflate(me.alphamode.mclong.math.BigDecimal pX, me.alphamode.mclong.math.BigDecimal pY, me.alphamode.mclong.math.BigDecimal pZ) {
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_82288_.subtract(pX);
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_82289_.subtract(pY);
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_82290_.subtract(pZ);
+      me.alphamode.mclong.math.BigDecimal d3 = this.f_82291_.add(pX);
+      me.alphamode.mclong.math.BigDecimal d4 = this.f_82292_.add(pY);
+      me.alphamode.mclong.math.BigDecimal d5 = this.f_82293_.add(pZ);
       return new AABB(d0, d1, d2, d3, d4, d5);
    }
 
@@ -189,56 +_,69 @@
       return this.m_82377_(p_82401_, p_82401_, p_82401_);
    }
 
+   public AABB inflate(me.alphamode.mclong.math.BigDecimal pValue) {
+      return this.inflate(pValue, pValue, pValue);
+   }
+
    public AABB m_82323_(AABB p_82324_) {
-      double d0 = Math.max(this.f_82288_, p_82324_.f_82288_);
-      double d1 = Math.max(this.f_82289_, p_82324_.f_82289_);
-      double d2 = Math.max(this.f_82290_, p_82324_.f_82290_);
-      double d3 = Math.min(this.f_82291_, p_82324_.f_82291_);
-      double d4 = Math.min(this.f_82292_, p_82324_.f_82292_);
-      double d5 = Math.min(this.f_82293_, p_82324_.f_82293_);
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_82288_.max(p_82324_.f_82288_);
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_82289_.max(p_82324_.f_82289_);
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_82290_.max(p_82324_.f_82290_);
+      me.alphamode.mclong.math.BigDecimal d3 = this.f_82291_.min(p_82324_.f_82291_);
+      me.alphamode.mclong.math.BigDecimal d4 = this.f_82292_.min(p_82324_.f_82292_);
+      me.alphamode.mclong.math.BigDecimal d5 = this.f_82293_.min(p_82324_.f_82293_);
       return new AABB(d0, d1, d2, d3, d4, d5);
    }
 
    public AABB m_82367_(AABB p_82368_) {
-      double d0 = Math.min(this.f_82288_, p_82368_.f_82288_);
-      double d1 = Math.min(this.f_82289_, p_82368_.f_82289_);
-      double d2 = Math.min(this.f_82290_, p_82368_.f_82290_);
-      double d3 = Math.max(this.f_82291_, p_82368_.f_82291_);
-      double d4 = Math.max(this.f_82292_, p_82368_.f_82292_);
-      double d5 = Math.max(this.f_82293_, p_82368_.f_82293_);
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_82288_.min(p_82368_.f_82288_);
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_82289_.min(p_82368_.f_82289_);
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_82290_.min(p_82368_.f_82290_);
+      me.alphamode.mclong.math.BigDecimal d3 = this.f_82291_.max(p_82368_.f_82291_);
+      me.alphamode.mclong.math.BigDecimal d4 = this.f_82292_.max(p_82368_.f_82292_);
+      me.alphamode.mclong.math.BigDecimal d5 = this.f_82293_.max(p_82368_.f_82293_);
       return new AABB(d0, d1, d2, d3, d4, d5);
    }
 
    public AABB m_82386_(double p_82387_, double p_82388_, double p_82389_) {
-      return new AABB(this.f_82288_ + p_82387_, this.f_82289_ + p_82388_, this.f_82290_ + p_82389_, this.f_82291_ + p_82387_, this.f_82292_ + p_82388_, this.f_82293_ + p_82389_);
+      return new AABB(this.f_82288_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82387_)), this.f_82289_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82388_)), this.f_82290_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82389_)), this.f_82291_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82387_)), this.f_82292_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82388_)), this.f_82293_.add(me.alphamode.mclong.math.BigDecimal.valueOf(p_82389_)));
+   }
+
+   public AABB move(me.alphamode.mclong.math.BigDecimal x, me.alphamode.mclong.math.BigDecimal y, me.alphamode.mclong.math.BigDecimal z) {
+      return new AABB(this.f_82288_.add(x), this.f_82289_.add(y), this.f_82290_.add(z), this.f_82291_.add(x), this.f_82292_.add(y), this.f_82293_.add(z));
    }
 
    public AABB m_82338_(BlockPos p_82339_) {
-      return new AABB(this.f_82288_ + (double)p_82339_.m_123341_(), this.f_82289_ + (double)p_82339_.m_123342_(), this.f_82290_ + (double)p_82339_.m_123343_(), this.f_82291_ + (double)p_82339_.m_123341_(), this.f_82292_ + (double)p_82339_.m_123342_(), this.f_82293_ + (double)p_82339_.m_123343_());
+      return new AABB(this.f_82288_.add(p_82339_.getBigDecX()), this.f_82289_.add(p_82339_.getBigDecY()), this.f_82290_.add(p_82339_.getBigDecZ()), this.f_82291_.add(p_82339_.getBigDecX()), this.f_82292_.add(p_82339_.getBigDecY()), this.f_82293_.add(p_82339_.getBigDecZ()));
    }
 
    public AABB m_82383_(Vec3 p_82384_) {
-      return this.m_82386_(p_82384_.f_82479_, p_82384_.f_82480_, p_82384_.f_82481_);
+      return this.m_82386_(p_82384_.m_7096_(), p_82384_.m_7098_(), p_82384_.m_7094_());
    }
 
    public boolean m_82381_(AABB p_82382_) {
-      return this.m_82314_(p_82382_.f_82288_, p_82382_.f_82289_, p_82382_.f_82290_, p_82382_.f_82291_, p_82382_.f_82292_, p_82382_.f_82293_);
+      return this.intersects(p_82382_.f_82288_, p_82382_.f_82289_, p_82382_.f_82290_, p_82382_.f_82291_, p_82382_.f_82292_, p_82382_.f_82293_);
    }
 
-   public boolean m_82314_(double p_82315_, double p_82316_, double p_82317_, double p_82318_, double p_82319_, double p_82320_) {
-      return this.f_82288_ < p_82318_ && this.f_82291_ > p_82315_ && this.f_82289_ < p_82319_ && this.f_82292_ > p_82316_ && this.f_82290_ < p_82320_ && this.f_82293_ > p_82317_;
+   public boolean intersects(me.alphamode.mclong.math.BigDecimal pX1, me.alphamode.mclong.math.BigDecimal pY1, me.alphamode.mclong.math.BigDecimal pZ1, me.alphamode.mclong.math.BigDecimal pX2, me.alphamode.mclong.math.BigDecimal pY2, me.alphamode.mclong.math.BigDecimal pZ2) {
+      return this.f_82288_.compareTo(pX2) < 0 && this.f_82291_.compareTo(pX1) > 0 && this.f_82289_.compareTo(pY2) < 0 && this.f_82292_.compareTo(pY1) > 0 && this.f_82290_.compareTo(pZ2) < 0 && this.f_82293_.compareTo(pZ1) > 0;
    }
 
    public boolean m_82335_(Vec3 p_82336_, Vec3 p_82337_) {
-      return this.m_82314_(Math.min(p_82336_.f_82479_, p_82337_.f_82479_), Math.min(p_82336_.f_82480_, p_82337_.f_82480_), Math.min(p_82336_.f_82481_, p_82337_.f_82481_), Math.max(p_82336_.f_82479_, p_82337_.f_82479_), Math.max(p_82336_.f_82480_, p_82337_.f_82480_), Math.max(p_82336_.f_82481_, p_82337_.f_82481_));
+      return this.intersects(p_82336_.getX().min(p_82337_.getX()), p_82336_.getY().min(p_82337_.getY()), p_82336_.getZ().min(p_82337_.getZ()), p_82336_.getX().max(p_82337_.getX()), p_82336_.getY().max(p_82337_.getY()), p_82336_.getZ().max(p_82337_.getZ()));
    }
 
    public boolean m_82390_(Vec3 p_82391_) {
-      return this.m_82393_(p_82391_.f_82479_, p_82391_.f_82480_, p_82391_.f_82481_);
+      return this.m_82393_(p_82391_.m_7096_(), p_82391_.m_7098_(), p_82391_.m_7094_());
    }
 
    public boolean m_82393_(double p_82394_, double p_82395_, double p_82396_) {
-      return p_82394_ >= this.f_82288_ && p_82394_ < this.f_82291_ && p_82395_ >= this.f_82289_ && p_82395_ < this.f_82292_ && p_82396_ >= this.f_82290_ && p_82396_ < this.f_82293_;
+      return me.alphamode.mclong.math.BigDecimal.valueOf(p_82394_).compareTo(this.f_82288_) >= 0 &&
+              me.alphamode.mclong.math.BigDecimal.valueOf(p_82394_).compareTo(this.f_82291_) < 0 &&
+              me.alphamode.mclong.math.BigDecimal.valueOf(p_82395_).compareTo(this.f_82289_) >= 0 &&
+              me.alphamode.mclong.math.BigDecimal.valueOf(p_82395_).compareTo(this.f_82292_) < 0 &&
+              me.alphamode.mclong.math.BigDecimal.valueOf(p_82396_).compareTo(this.f_82290_) >= 0 &&
+              me.alphamode.mclong.math.BigDecimal.valueOf(p_82396_).compareTo(this.f_82293_) < 0;
    }
 
    public double m_82309_() {
@@ -249,15 +_,15 @@
    }
 
    public double m_82362_() {
-      return this.f_82291_ - this.f_82288_;
+      return this.f_82291_.subtract(this.f_82288_).doubleValue();
    }
 
    public double m_82376_() {
-      return this.f_82292_ - this.f_82289_;
+      return this.f_82292_.subtract(this.f_82289_).doubleValue();
    }
 
    public double m_82385_() {
-      return this.f_82293_ - this.f_82290_;
+      return this.f_82293_.subtract(this.f_82290_).doubleValue();
    }
 
    public AABB m_165897_(double p_165898_, double p_165899_, double p_165900_) {
@@ -269,80 +_,80 @@
    }
 
    public Optional<Vec3> m_82371_(Vec3 p_82372_, Vec3 p_82373_) {
-      double[] adouble = new double[]{1.0D};
-      double d0 = p_82373_.f_82479_ - p_82372_.f_82479_;
-      double d1 = p_82373_.f_82480_ - p_82372_.f_82480_;
-      double d2 = p_82373_.f_82481_ - p_82372_.f_82481_;
-      Direction direction = m_82325_(this, p_82372_, adouble, (Direction)null, d0, d1, d2);
+      me.alphamode.mclong.math.BigDecimal[] adouble = new me.alphamode.mclong.math.BigDecimal[]{me.alphamode.mclong.math.BigDecimal.ONE};
+      me.alphamode.mclong.math.BigDecimal d0 = p_82373_.getX().subtract(p_82372_.getX());
+      me.alphamode.mclong.math.BigDecimal d1 = p_82373_.getY().subtract(p_82372_.getY());
+      me.alphamode.mclong.math.BigDecimal d2 = p_82373_.getZ().subtract(p_82372_.getZ());
+      Direction direction = getDirection(this, p_82372_, adouble, (Direction)null, d0, d1, d2);
       if (direction == null) {
          return Optional.empty();
       } else {
-         double d3 = adouble[0];
-         return Optional.of(p_82372_.m_82520_(d3 * d0, d3 * d1, d3 * d2));
+         me.alphamode.mclong.math.BigDecimal d3 = adouble[0];
+         return Optional.of(p_82372_.add(d3.multiply(d0), d3.multiply(d1), d3.multiply(d2)));
       }
    }
 
    @Nullable
    public static BlockHitResult m_82342_(Iterable<AABB> p_82343_, Vec3 p_82344_, Vec3 p_82345_, BlockPos p_82346_) {
-      double[] adouble = new double[]{1.0D};
+      me.alphamode.mclong.math.BigDecimal[] adouble = new me.alphamode.mclong.math.BigDecimal[]{me.alphamode.mclong.math.BigDecimal.ONE};
       Direction direction = null;
-      double d0 = p_82345_.f_82479_ - p_82344_.f_82479_;
-      double d1 = p_82345_.f_82480_ - p_82344_.f_82480_;
-      double d2 = p_82345_.f_82481_ - p_82344_.f_82481_;
+      me.alphamode.mclong.math.BigDecimal d0 = p_82345_.getX().subtract(p_82344_.getX());
+      me.alphamode.mclong.math.BigDecimal d1 = p_82345_.getY().subtract(p_82344_.getY());
+      me.alphamode.mclong.math.BigDecimal d2 = p_82345_.getZ().subtract(p_82344_.getZ());
 
       for(AABB aabb : p_82343_) {
-         direction = m_82325_(aabb.m_82338_(p_82346_), p_82344_, adouble, direction, d0, d1, d2);
+         direction = getDirection(aabb.m_82338_(p_82346_), p_82344_, adouble, direction, d0, d1, d2);
       }
 
       if (direction == null) {
          return null;
       } else {
-         double d3 = adouble[0];
-         return new BlockHitResult(p_82344_.m_82520_(d3 * d0, d3 * d1, d3 * d2), direction, p_82346_, false);
-      }
-   }
-
-   @Nullable
-   private static Direction m_82325_(AABB p_82326_, Vec3 p_82327_, double[] p_82328_, @Nullable Direction p_82329_, double p_82330_, double p_82331_, double p_82332_) {
-      if (p_82330_ > 1.0E-7D) {
-         p_82329_ = m_82347_(p_82328_, p_82329_, p_82330_, p_82331_, p_82332_, p_82326_.f_82288_, p_82326_.f_82289_, p_82326_.f_82292_, p_82326_.f_82290_, p_82326_.f_82293_, Direction.WEST, p_82327_.f_82479_, p_82327_.f_82480_, p_82327_.f_82481_);
-      } else if (p_82330_ < -1.0E-7D) {
-         p_82329_ = m_82347_(p_82328_, p_82329_, p_82330_, p_82331_, p_82332_, p_82326_.f_82291_, p_82326_.f_82289_, p_82326_.f_82292_, p_82326_.f_82290_, p_82326_.f_82293_, Direction.EAST, p_82327_.f_82479_, p_82327_.f_82480_, p_82327_.f_82481_);
-      }
-
-      if (p_82331_ > 1.0E-7D) {
-         p_82329_ = m_82347_(p_82328_, p_82329_, p_82331_, p_82332_, p_82330_, p_82326_.f_82289_, p_82326_.f_82290_, p_82326_.f_82293_, p_82326_.f_82288_, p_82326_.f_82291_, Direction.DOWN, p_82327_.f_82480_, p_82327_.f_82481_, p_82327_.f_82479_);
-      } else if (p_82331_ < -1.0E-7D) {
-         p_82329_ = m_82347_(p_82328_, p_82329_, p_82331_, p_82332_, p_82330_, p_82326_.f_82292_, p_82326_.f_82290_, p_82326_.f_82293_, p_82326_.f_82288_, p_82326_.f_82291_, Direction.UP, p_82327_.f_82480_, p_82327_.f_82481_, p_82327_.f_82479_);
-      }
-
-      if (p_82332_ > 1.0E-7D) {
-         p_82329_ = m_82347_(p_82328_, p_82329_, p_82332_, p_82330_, p_82331_, p_82326_.f_82290_, p_82326_.f_82288_, p_82326_.f_82291_, p_82326_.f_82289_, p_82326_.f_82292_, Direction.NORTH, p_82327_.f_82481_, p_82327_.f_82479_, p_82327_.f_82480_);
-      } else if (p_82332_ < -1.0E-7D) {
-         p_82329_ = m_82347_(p_82328_, p_82329_, p_82332_, p_82330_, p_82331_, p_82326_.f_82293_, p_82326_.f_82288_, p_82326_.f_82291_, p_82326_.f_82289_, p_82326_.f_82292_, Direction.SOUTH, p_82327_.f_82481_, p_82327_.f_82479_, p_82327_.f_82480_);
-      }
-
-      return p_82329_;
-   }
-
-   @Nullable
-   private static Direction m_82347_(double[] p_82348_, @Nullable Direction p_82349_, double p_82350_, double p_82351_, double p_82352_, double p_82353_, double p_82354_, double p_82355_, double p_82356_, double p_82357_, Direction p_82358_, double p_82359_, double p_82360_, double p_82361_) {
-      double d0 = (p_82353_ - p_82359_) / p_82350_;
-      double d1 = p_82360_ + d0 * p_82351_;
-      double d2 = p_82361_ + d0 * p_82352_;
-      if (0.0D < d0 && d0 < p_82348_[0] && p_82354_ - 1.0E-7D < d1 && d1 < p_82355_ + 1.0E-7D && p_82356_ - 1.0E-7D < d2 && d2 < p_82357_ + 1.0E-7D) {
-         p_82348_[0] = d0;
-         return p_82358_;
+         me.alphamode.mclong.math.BigDecimal d3 = adouble[0];
+         return new BlockHitResult(p_82344_.add(d3.multiply(d0), d3.multiply(d1), d3.multiply(d2)), direction, p_82346_, false);
+      }
+   }
+
+   @Nullable
+   private static Direction getDirection(AABB pAabb, Vec3 pStart, me.alphamode.mclong.math.BigDecimal[] pMinDistance, @Nullable Direction pFacing, me.alphamode.mclong.math.BigDecimal pDeltaX, me.alphamode.mclong.math.BigDecimal pDeltaY, me.alphamode.mclong.math.BigDecimal pDeltaZ) {
+      if (pDeltaX.compareTo(f_165879_) > 0) {
+         pFacing = clipPoint(pMinDistance, pFacing, pDeltaX, pDeltaY, pDeltaZ, pAabb.f_82288_, pAabb.f_82289_, pAabb.f_82292_, pAabb.f_82290_, pAabb.f_82293_, Direction.WEST, pStart.getX(), pStart.getY(), pStart.getZ());
+      } else if (pDeltaX.compareTo(f_165879_.negate()) < 0) {
+         pFacing = clipPoint(pMinDistance, pFacing, pDeltaX, pDeltaY, pDeltaZ, pAabb.f_82291_, pAabb.f_82289_, pAabb.f_82292_, pAabb.f_82290_, pAabb.f_82293_, Direction.EAST, pStart.getX(), pStart.getY(), pStart.getZ());
+      }
+
+      if (pDeltaY.compareTo(f_165879_) > 0) {
+         pFacing = clipPoint(pMinDistance, pFacing, pDeltaY, pDeltaZ, pDeltaX, pAabb.f_82289_, pAabb.f_82290_, pAabb.f_82293_, pAabb.f_82288_, pAabb.f_82291_, Direction.DOWN, pStart.getY(), pStart.getZ(), pStart.getX());
+      } else if (pDeltaY.compareTo(f_165879_.negate()) < 0) {
+         pFacing = clipPoint(pMinDistance, pFacing, pDeltaY, pDeltaZ, pDeltaX, pAabb.f_82292_, pAabb.f_82290_, pAabb.f_82293_, pAabb.f_82288_, pAabb.f_82291_, Direction.UP, pStart.getY(), pStart.getZ(), pStart.getX());
+      }
+
+      if (pDeltaZ.compareTo(f_165879_) > 0) {
+         pFacing = clipPoint(pMinDistance, pFacing, pDeltaZ, pDeltaX, pDeltaY, pAabb.f_82290_, pAabb.f_82288_, pAabb.f_82291_, pAabb.f_82289_, pAabb.f_82292_, Direction.NORTH, pStart.getZ(), pStart.getX(), pStart.getY());
+      } else if (pDeltaZ.compareTo(f_165879_.negate()) < 0) {
+         pFacing = clipPoint(pMinDistance, pFacing, pDeltaZ, pDeltaX, pDeltaY, pAabb.f_82293_, pAabb.f_82288_, pAabb.f_82291_, pAabb.f_82289_, pAabb.f_82292_, Direction.SOUTH, pStart.getZ(), pStart.getX(), pStart.getY());
+      }
+
+      return pFacing;
+   }
+
+   @Nullable
+   private static Direction clipPoint(me.alphamode.mclong.math.BigDecimal[] pMinDistance, @Nullable Direction pPrevDirection, me.alphamode.mclong.math.BigDecimal pDistanceSide, me.alphamode.mclong.math.BigDecimal pDistanceOtherA, me.alphamode.mclong.math.BigDecimal pDistanceOtherB, me.alphamode.mclong.math.BigDecimal pMinSide, me.alphamode.mclong.math.BigDecimal pMinOtherA, me.alphamode.mclong.math.BigDecimal pMaxOtherA, me.alphamode.mclong.math.BigDecimal pMinOtherB, me.alphamode.mclong.math.BigDecimal pMaxOtherB, Direction pHitSide, me.alphamode.mclong.math.BigDecimal pStartSide, me.alphamode.mclong.math.BigDecimal pStartOtherA, me.alphamode.mclong.math.BigDecimal pStartOtherB) {
+      me.alphamode.mclong.math.BigDecimal d0 = (pMinSide.subtract(pStartSide)).divide(pDistanceSide, java.math.RoundingMode.HALF_UP);
+      me.alphamode.mclong.math.BigDecimal d1 = pStartOtherA.add(d0.multiply(pDistanceOtherA));
+      me.alphamode.mclong.math.BigDecimal d2 = pStartOtherB.add(d0.multiply(pDistanceOtherB));
+      if (me.alphamode.mclong.math.BigDecimal.ZERO.compareTo(d0) < 0 && d0.compareTo(pMinDistance[0]) < 0 && pMinOtherA.subtract(f_165879_).compareTo(d1) < 0 && d1.compareTo(pMaxOtherA.add(f_165879_)) < 0 && pMinOtherB.subtract(f_165879_).compareTo(d2) < 0 && d2.compareTo(pMaxOtherB.add(f_165879_)) < 0) {
+         pMinDistance[0] = d0;
+         return pHitSide;
       } else {
-         return p_82349_;
+         return pPrevDirection;
       }
    }
 
    public double m_272282_(Vec3 p_273572_) {
-      double d0 = Math.max(Math.max(this.f_82288_ - p_273572_.f_82479_, p_273572_.f_82479_ - this.f_82291_), 0.0D);
-      double d1 = Math.max(Math.max(this.f_82289_ - p_273572_.f_82480_, p_273572_.f_82480_ - this.f_82292_), 0.0D);
-      double d2 = Math.max(Math.max(this.f_82290_ - p_273572_.f_82481_, p_273572_.f_82481_ - this.f_82293_), 0.0D);
-      return Mth.m_211592_(d0, d1, d2);
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_82288_.subtract(p_273572_.getX()).max(p_273572_.getX().subtract(this.f_82291_)).max(me.alphamode.mclong.math.BigDecimal.ZERO);
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_82289_.subtract(p_273572_.getY()).max(p_273572_.getY().subtract(this.f_82292_)).max(me.alphamode.mclong.math.BigDecimal.ZERO);
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_82290_.subtract(p_273572_.getZ()).max(p_273572_.getZ().subtract(this.f_82293_)).max(me.alphamode.mclong.math.BigDecimal.ZERO);
+      return Mth.lengthSquared(d0, d1, d2).doubleValue();
    }
 
    public String toString() {
@@ -350,14 +_,14 @@
    }
 
    public boolean m_82392_() {
-      return Double.isNaN(this.f_82288_) || Double.isNaN(this.f_82289_) || Double.isNaN(this.f_82290_) || Double.isNaN(this.f_82291_) || Double.isNaN(this.f_82292_) || Double.isNaN(this.f_82293_);
+      return false;
    }
 
    public Vec3 m_82399_() {
-      return new Vec3(Mth.m_14139_(0.5D, this.f_82288_, this.f_82291_), Mth.m_14139_(0.5D, this.f_82289_, this.f_82292_), Mth.m_14139_(0.5D, this.f_82290_, this.f_82293_));
+      return new Vec3(Mth.lerp(me.alphamode.mclong.core.BigConstants.AABB, this.f_82288_, this.f_82291_), Mth.lerp(me.alphamode.mclong.core.BigConstants.AABB, this.f_82289_, this.f_82292_), Mth.lerp(me.alphamode.mclong.core.BigConstants.AABB, this.f_82290_, this.f_82293_));
    }
 
    public static AABB m_165882_(Vec3 p_165883_, double p_165884_, double p_165885_, double p_165886_) {
-      return new AABB(p_165883_.f_82479_ - p_165884_ / 2.0D, p_165883_.f_82480_ - p_165885_ / 2.0D, p_165883_.f_82481_ - p_165886_ / 2.0D, p_165883_.f_82479_ + p_165884_ / 2.0D, p_165883_.f_82480_ + p_165885_ / 2.0D, p_165883_.f_82481_ + p_165886_ / 2.0D);
+      return new AABB(p_165883_.getX().subtract(p_165884_ / 2.0D), p_165883_.getY().subtract(p_165885_ / 2.0D), p_165883_.getZ().subtract(p_165886_ / 2.0D), p_165883_.getX().add(p_165884_ / 2.0D), p_165883_.getY().add(p_165885_ / 2.0D), p_165883_.getZ().add(p_165886_ / 2.0D));
    }
 }
