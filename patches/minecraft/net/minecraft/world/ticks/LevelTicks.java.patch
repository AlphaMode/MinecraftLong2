--- a/net/minecraft/world/ticks/LevelTicks.java
+++ b/net/minecraft/world/ticks/LevelTicks.java
@@ -31,10 +_,10 @@
    private static final Comparator<LevelChunkTicks<?>> f_193199_ = (p_193246_, p_193247_) -> {
       return ScheduledTick.f_193374_.compare(p_193246_.m_193189_(), p_193247_.m_193189_());
    };
-   private final LongPredicate f_193200_;
+   private final java.util.function.Predicate<ChunkPos> f_193200_;
    private final Supplier<ProfilerFiller> f_193201_;
-   private final Long2ObjectMap<LevelChunkTicks<T>> f_193202_ = new Long2ObjectOpenHashMap<>();
-   private final Long2LongMap f_193203_ = Util.m_137469_(new Long2LongOpenHashMap(), (p_193262_) -> {
+   private final it.unimi.dsi.fastutil.objects.Object2ObjectMap<ChunkPos, LevelChunkTicks<T>> f_193202_ = new it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<>();
+   private final it.unimi.dsi.fastutil.objects.Object2LongMap<ChunkPos> f_193203_ = Util.m_137469_(new it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap<>(), (p_193262_) -> {
       p_193262_.defaultReturnValue(Long.MAX_VALUE);
    });
    private final Queue<LevelChunkTicks<T>> f_193204_ = new PriorityQueue<>(f_193199_);
@@ -48,26 +_,24 @@
 
    };
 
-   public LevelTicks(LongPredicate p_193211_, Supplier<ProfilerFiller> p_193212_) {
-      this.f_193200_ = p_193211_;
-      this.f_193201_ = p_193212_;
+   public LevelTicks(java.util.function.Predicate<ChunkPos> pTickCheck, Supplier<ProfilerFiller> pProfiler) {
+      this.f_193200_ = pTickCheck;
+      this.f_193201_ = pProfiler;
    }
 
    public void m_193231_(ChunkPos p_193232_, LevelChunkTicks<T> p_193233_) {
-      long i = p_193232_.m_45588_();
-      this.f_193202_.put(i, p_193233_);
+      this.f_193202_.put(p_193232_, p_193233_);
       ScheduledTick<T> scheduledtick = p_193233_.m_193189_();
       if (scheduledtick != null) {
-         this.f_193203_.put(i, scheduledtick.f_193378_());
+         this.f_193203_.put(p_193232_, scheduledtick.f_193378_());
       }
 
       p_193233_.m_193181_(this.f_193208_);
    }
 
    public void m_193229_(ChunkPos p_193230_) {
-      long i = p_193230_.m_45588_();
-      LevelChunkTicks<T> levelchunkticks = this.f_193202_.remove(i);
-      this.f_193203_.remove(i);
+      LevelChunkTicks<T> levelchunkticks = this.f_193202_.remove(p_193230_);
+      this.f_193203_.removeLong(p_193230_);
       if (levelchunkticks != null) {
          levelchunkticks.m_193181_((BiConsumer<LevelChunkTicks<T>, ScheduledTick<T>>)null);
       }
@@ -75,7 +_,7 @@
    }
 
    public void m_183393_(ScheduledTick<T> p_193252_) {
-      long i = ChunkPos.m_151388_(p_193252_.f_193377_());
+      ChunkPos i = new ChunkPos(p_193252_.f_193377_());
       LevelChunkTicks<T> levelchunkticks = this.f_193202_.get(i);
       if (levelchunkticks == null) {
          Util.m_137570_(new IllegalStateException("Trying to schedule tick in not loaded position " + p_193252_.f_193377_()));
@@ -104,11 +_,11 @@
    }
 
    private void m_193216_(long p_193217_) {
-      ObjectIterator<Long2LongMap.Entry> objectiterator = Long2LongMaps.fastIterator(this.f_193203_);
+      ObjectIterator<it.unimi.dsi.fastutil.objects.Object2LongMap.Entry<ChunkPos>> objectiterator = it.unimi.dsi.fastutil.objects.Object2LongMaps.fastIterator(this.f_193203_);
 
       while(objectiterator.hasNext()) {
-         Long2LongMap.Entry entry = objectiterator.next();
-         long i = entry.getLongKey();
+         it.unimi.dsi.fastutil.objects.Object2LongMap.Entry<ChunkPos> entry = objectiterator.next();
+         ChunkPos i = entry.getKey();
          long j = entry.getLongValue();
          if (j <= p_193217_) {
             LevelChunkTicks<T> levelchunkticks = this.f_193202_.get(i);
@@ -156,7 +_,7 @@
    }
 
    private void m_193279_(ScheduledTick<T> p_193280_) {
-      this.f_193203_.put(ChunkPos.m_151388_(p_193280_.f_193377_()), p_193280_.f_193378_());
+      this.f_193203_.put(new ChunkPos(p_193280_.f_193377_()), p_193280_.f_193378_());
    }
 
    private void m_193267_(Queue<LevelChunkTicks<T>> p_193268_, LevelChunkTicks<T> p_193269_, long p_193270_, int p_193271_) {
@@ -206,7 +_,7 @@
    }
 
    public boolean m_183582_(BlockPos p_193254_, T p_193255_) {
-      LevelChunkTicks<T> levelchunkticks = this.f_193202_.get(ChunkPos.m_151388_(p_193254_));
+      LevelChunkTicks<T> levelchunkticks = this.f_193202_.get(new ChunkPos(p_193254_));
       return levelchunkticks != null && levelchunkticks.m_183582_(p_193254_, p_193255_);
    }
 
@@ -223,17 +_,17 @@
    }
 
    private void m_193236_(BoundingBox p_193237_, LevelTicks.PosAndContainerConsumer<T> p_193238_) {
-      int i = SectionPos.m_175552_((double)p_193237_.m_162395_());
-      int j = SectionPos.m_175552_((double)p_193237_.m_162398_());
-      int k = SectionPos.m_175552_((double)p_193237_.m_162399_());
-      int l = SectionPos.m_175552_((double)p_193237_.m_162401_());
+      me.alphamode.mclong.math.BigInteger i = SectionPos.posToSectionCoord(p_193237_.minBigX().toBigDecimal());
+      me.alphamode.mclong.math.BigInteger j = SectionPos.posToSectionCoord(p_193237_.minBigZ().toBigDecimal());
+      me.alphamode.mclong.math.BigInteger k = SectionPos.posToSectionCoord(p_193237_.maxBigX().toBigDecimal());
+      me.alphamode.mclong.math.BigInteger l = SectionPos.posToSectionCoord(p_193237_.maxBigZ().toBigDecimal());
 
-      for(int i1 = i; i1 <= k; ++i1) {
-         for(int j1 = j; j1 <= l; ++j1) {
-            long k1 = ChunkPos.m_45589_(i1, j1);
+      for(me.alphamode.mclong.math.BigInteger i1 = i; i1.compareTo(k) <= 0; i1 = i1.add()) {
+         for(me.alphamode.mclong.math.BigInteger j1 = j; j1.compareTo(l) <= 0; j1 = j1.add()) {
+            ChunkPos k1 = new ChunkPos(i1, j1);
             LevelChunkTicks<T> levelchunkticks = this.f_193202_.get(k1);
             if (levelchunkticks != null) {
-               p_193238_.m_193288_(k1, levelchunkticks);
+               p_193238_.accept(k1, levelchunkticks);
             }
          }
       }
@@ -242,7 +_,7 @@
 
    public void m_193234_(BoundingBox p_193235_) {
       Predicate<ScheduledTick<T>> predicate = (p_193241_) -> {
-         return p_193235_.m_71051_(p_193241_.f_193377_());
+         return p_193235_.isInside(p_193241_.f_193377_());
       };
       this.m_193236_(p_193235_, (p_193276_, p_193277_) -> {
          ScheduledTick<T> scheduledtick = p_193277_.m_193189_();
@@ -252,7 +_,7 @@
             if (scheduledtick1 != null) {
                this.m_193279_(scheduledtick1);
             } else {
-               this.f_193203_.remove(p_193276_);
+               this.f_193203_.removeLong(p_193276_);
             }
          }
 
@@ -261,25 +_,25 @@
       this.f_193205_.removeIf(predicate);
    }
 
-   public void m_193242_(BoundingBox p_193243_, Vec3i p_193244_) {
-      this.m_264560_(this, p_193243_, p_193244_);
+   public void copyArea(BoundingBox pArea, me.alphamode.mclong.core.Vec3l p_193244_) {
+      this.copyAreaFrom(this, pArea, p_193244_);
    }
 
-   public void m_264560_(LevelTicks<T> p_265554_, BoundingBox p_265172_, Vec3i p_265318_) {
+   public void copyAreaFrom(LevelTicks<T> pLevelTicks, BoundingBox pArea, me.alphamode.mclong.core.Vec3l p_265318_) {
       List<ScheduledTick<T>> list = new ArrayList<>();
       Predicate<ScheduledTick<T>> predicate = (p_200922_) -> {
-         return p_265172_.m_71051_(p_200922_.f_193377_());
+         return pArea.isInside(p_200922_.f_193377_());
       };
-      p_265554_.f_193206_.stream().filter(predicate).forEach(list::add);
-      p_265554_.f_193205_.stream().filter(predicate).forEach(list::add);
-      p_265554_.m_193236_(p_265172_, (p_200931_, p_200932_) -> {
+      pLevelTicks.f_193206_.stream().filter(predicate).forEach(list::add);
+      pLevelTicks.f_193205_.stream().filter(predicate).forEach(list::add);
+      pLevelTicks.m_193236_(pArea, (p_200931_, p_200932_) -> {
          p_200932_.m_193196_().filter(predicate).forEach(list::add);
       });
       LongSummaryStatistics longsummarystatistics = list.stream().mapToLong(ScheduledTick::f_193380_).summaryStatistics();
       long i = longsummarystatistics.getMin();
       long j = longsummarystatistics.getMax();
       list.forEach((p_193260_) -> {
-         this.m_183393_(new ScheduledTick<>(p_193260_.f_193376_(), p_193260_.f_193377_().m_121955_(p_265318_), p_193260_.f_193378_(), p_193260_.f_193379_(), p_193260_.f_193380_() - i + j + 1L));
+         this.m_183393_(new ScheduledTick<>(p_193260_.f_193376_(), p_193260_.f_193377_().offset(p_265318_), p_193260_.f_193378_(), p_193260_.f_193379_(), p_193260_.f_193380_() - i + j + 1L));
       });
    }
 
@@ -289,6 +_,6 @@
 
    @FunctionalInterface
    interface PosAndContainerConsumer<T> {
-      void m_193288_(long p_193289_, LevelChunkTicks<T> p_193290_);
+      void accept(ChunkPos p_193289_, LevelChunkTicks<T> p_193290_);
    }
 }
