--- a/net/minecraft/world/level/lighting/LayerLightSectionStorage.java
+++ b/net/minecraft/world/level/lighting/LayerLightSectionStorage.java
@@ -71,7 +_,7 @@
    protected int m_75795_(long p_75796_) {
       long i = SectionPos.m_123235_(p_75796_);
       DataLayer datalayer = this.m_75758_(i, true);
-      return datalayer.m_62560_(SectionPos.m_123207_(BlockPos.m_121983_(p_75796_)), SectionPos.m_123207_(BlockPos.m_122008_(p_75796_)), SectionPos.m_123207_(BlockPos.m_122015_(p_75796_)));
+      return datalayer.get(SectionPos.sectionRelative(BlockPos.m_121983_(p_75796_)), SectionPos.sectionRelative(BlockPos.m_122008_(p_75796_)), SectionPos.sectionRelative(BlockPos.m_122015_(p_75796_)));
    }
 
    protected void m_75772_(long p_75773_, int p_75774_) {
@@ -81,7 +_,7 @@
       }
 
       DataLayer datalayer = this.m_75758_(i, true);
-      datalayer.m_62564_(SectionPos.m_123207_(BlockPos.m_121983_(p_75773_)), SectionPos.m_123207_(BlockPos.m_122008_(p_75773_)), SectionPos.m_123207_(BlockPos.m_122015_(p_75773_)), p_75774_);
+      datalayer.set(SectionPos.sectionRelative(BlockPos.m_121983_(p_75773_)), SectionPos.sectionRelative(BlockPos.m_122008_(p_75773_)), SectionPos.sectionRelative(BlockPos.m_122015_(p_75773_)), p_75774_);
       SectionPos.m_194639_(p_75773_, this.f_75734_::add);
    }
 
@@ -129,7 +_,7 @@
             for(int i1 = -1; i1 <= 1; ++i1) {
                for(int j1 = -1; j1 <= 1; ++j1) {
                   for(int k1 = -1; k1 <= 1; ++k1) {
-                     this.f_75734_.add(SectionPos.m_123209_(j + j1, k + k1, l + i1));
+                     this.f_75734_.add(SectionPos.asLong(j + j1, k + k1, l + i1));
                   }
                }
             }
@@ -155,14 +_,14 @@
                return SectionPos.m_123235_(p_75753_) == p_75766_;
             });
          } else {
-            int i = SectionPos.m_123223_(SectionPos.m_123213_(p_75766_));
-            int j = SectionPos.m_123223_(SectionPos.m_123225_(p_75766_));
-            int k = SectionPos.m_123223_(SectionPos.m_123230_(p_75766_));
+            long i = SectionPos.sectionToBlockCoord(SectionPos.m_123213_(p_75766_));
+            long j = SectionPos.sectionToBlockCoord(SectionPos.m_123225_(p_75766_));
+            long k = SectionPos.sectionToBlockCoord(SectionPos.m_123230_(p_75766_));
 
             for(int l = 0; l < 16; ++l) {
                for(int i1 = 0; i1 < 16; ++i1) {
                   for(int j1 = 0; j1 < 16; ++j1) {
-                     long k1 = BlockPos.m_121882_(i + l, j + i1, k + j1);
+                     long k1 = BlockPos.asLong(i + l, j + i1, k + j1);
                      p_75765_.m_75600_(k1);
                   }
                }
@@ -239,9 +_,9 @@
 
    private void m_75777_(LayerLightEngine<M, ?> p_75778_, long p_75779_) {
       if (this.m_75791_(p_75779_)) {
-         int i = SectionPos.m_123223_(SectionPos.m_123213_(p_75779_));
-         int j = SectionPos.m_123223_(SectionPos.m_123225_(p_75779_));
-         int k = SectionPos.m_123223_(SectionPos.m_123230_(p_75779_));
+         long i = SectionPos.sectionToBlockCoord(SectionPos.m_123213_(p_75779_));
+         long j = SectionPos.sectionToBlockCoord(SectionPos.m_123225_(p_75779_));
+         long k = SectionPos.sectionToBlockCoord(SectionPos.m_123230_(p_75779_));
 
          for(Direction direction : f_75737_) {
             long l = SectionPos.m_123191_(p_75779_, direction);
@@ -252,28 +_,28 @@
                      long l1;
                      switch (direction) {
                         case DOWN:
-                           k1 = BlockPos.m_121882_(i + j1, j, k + i1);
-                           l1 = BlockPos.m_121882_(i + j1, j - 1, k + i1);
+                           k1 = BlockPos.asLong(i + j1, j, k + i1);
+                           l1 = BlockPos.asLong(i + j1, j - 1, k + i1);
                            break;
                         case UP:
-                           k1 = BlockPos.m_121882_(i + j1, j + 16 - 1, k + i1);
-                           l1 = BlockPos.m_121882_(i + j1, j + 16, k + i1);
+                           k1 = BlockPos.asLong(i + j1, j + 16 - 1, k + i1);
+                           l1 = BlockPos.asLong(i + j1, j + 16, k + i1);
                            break;
                         case NORTH:
-                           k1 = BlockPos.m_121882_(i + i1, j + j1, k);
-                           l1 = BlockPos.m_121882_(i + i1, j + j1, k - 1);
+                           k1 = BlockPos.asLong(i + i1, j + j1, k);
+                           l1 = BlockPos.asLong(i + i1, j + j1, k - 1);
                            break;
                         case SOUTH:
-                           k1 = BlockPos.m_121882_(i + i1, j + j1, k + 16 - 1);
-                           l1 = BlockPos.m_121882_(i + i1, j + j1, k + 16);
+                           k1 = BlockPos.asLong(i + i1, j + j1, k + 16 - 1);
+                           l1 = BlockPos.asLong(i + i1, j + j1, k + 16);
                            break;
                         case WEST:
-                           k1 = BlockPos.m_121882_(i, j + i1, k + j1);
-                           l1 = BlockPos.m_121882_(i - 1, j + i1, k + j1);
+                           k1 = BlockPos.asLong(i, j + i1, k + j1);
+                           l1 = BlockPos.asLong(i - 1, j + i1, k + j1);
                            break;
                         default:
-                           k1 = BlockPos.m_121882_(i + 16 - 1, j + i1, k + j1);
-                           l1 = BlockPos.m_121882_(i + 16, j + i1, k + j1);
+                           k1 = BlockPos.asLong(i + 16 - 1, j + i1, k + j1);
+                           l1 = BlockPos.asLong(i + 16, j + i1, k + j1);
                      }
 
                      p_75778_.m_75576_(k1, l1, p_75778_.m_6359_(k1, l1, p_75778_.m_6172_(k1)), false);
