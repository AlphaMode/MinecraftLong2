--- a/net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint.java
+++ b/net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint.java
@@ -7,12 +_,12 @@
 import java.util.function.LongPredicate;
 import net.minecraft.util.Mth;
 
-public abstract class DynamicGraphMinFixedPoint {
+public abstract class DynamicGraphMinFixedPoint<Pos> {
    public static final long f_278132_ = Long.MAX_VALUE;
    private static final int f_164422_ = 255;
    protected final int f_75537_;
-   private final LeveledPriorityQueue f_278118_;
-   private final Long2ByteMap f_75539_;
+   private final LeveledPriorityQueue<Pos> f_278118_;
+   private final it.unimi.dsi.fastutil.objects.Object2ByteMap<Pos> f_75539_;
    private volatile boolean f_75541_;
 
    protected DynamicGraphMinFixedPoint(int p_75543_, int p_75544_, final int p_75545_) {
@@ -21,7 +_,7 @@
       } else {
          this.f_75537_ = p_75543_;
          this.f_278118_ = new LeveledPriorityQueue(p_75543_, p_75544_);
-         this.f_75539_ = new Long2ByteOpenHashMap(p_75545_, 0.5F) {
+         this.f_75539_ = new it.unimi.dsi.fastutil.objects.Object2ByteOpenHashMap<>(p_75545_, 0.5F) {
             protected void rehash(int p_75611_) {
                if (p_75611_ > p_75545_) {
                   super.rehash(p_75611_);
@@ -33,89 +_,91 @@
       }
    }
 
-   protected void m_75600_(long p_75601_) {
-      int i = this.f_75539_.remove(p_75601_) & 255;
+   protected void removeFromQueue(Pos p_75601_) {
+      int i = this.f_75539_.removeByte(p_75601_) & 255;
       if (i != 255) {
-         int j = this.m_6172_(p_75601_);
+         int j = this.getLevel(p_75601_);
          int k = this.m_278160_(j, i);
-         this.f_278118_.m_278203_(p_75601_, k, this.f_75537_);
+         this.f_278118_.dequeue(p_75601_, k, this.f_75537_);
          this.f_75541_ = !this.f_278118_.m_278192_();
       }
    }
 
-   public void m_75581_(LongPredicate p_75582_) {
-      LongList longlist = new LongArrayList();
-      this.f_75539_.keySet().forEach((long p_75586_) -> {
-         if (p_75582_.test(p_75586_)) {
+   public void removeIf(java.util.function.Predicate<Pos> pPredicate) {
+      it.unimi.dsi.fastutil.objects.ObjectList<Pos> longlist = new it.unimi.dsi.fastutil.objects.ObjectArrayList<>();
+      this.f_75539_.keySet().forEach((Pos p_75586_) -> {
+         if (pPredicate.test(p_75586_)) {
             longlist.add(p_75586_);
          }
 
       });
-      longlist.forEach((java.util.function.LongConsumer)this::m_75600_);
+      longlist.forEach(this::removeFromQueue);
    }
 
    private int m_278160_(int p_278256_, int p_278328_) {
       return Math.min(Math.min(p_278256_, p_278328_), this.f_75537_ - 1);
    }
 
-   protected void m_6185_(long p_75602_) {
-      this.m_75576_(p_75602_, p_75602_, this.f_75537_ - 1, false);
+   protected abstract Pos createPosFromBlockPos(net.minecraft.core.BlockPos blockPos);
+
+   protected void checkNode(net.minecraft.core.BlockPos pLevelPos) {
+      this.checkEdge(createPosFromBlockPos(pLevelPos), createPosFromBlockPos(pLevelPos), this.f_75537_ - 1, false);
    }
 
-   protected void m_75576_(long p_75577_, long p_75578_, int p_75579_, boolean p_75580_) {
-      this.m_75569_(p_75577_, p_75578_, p_75579_, this.m_6172_(p_75578_), this.f_75539_.get(p_75578_) & 255, p_75580_);
+   protected void checkEdge(Pos pFromPos, Pos pToPos, int pNewLevel, boolean pIsDecreasing) {
+      this.checkEdge(pFromPos, pToPos, pNewLevel, this.getLevel(pToPos), this.f_75539_.getByte(pToPos) & 255, pIsDecreasing);
       this.f_75541_ = !this.f_278118_.m_278192_();
    }
 
-   private void m_75569_(long p_75570_, long p_75571_, int p_75572_, int p_75573_, int p_75574_, boolean p_75575_) {
-      if (!this.m_6163_(p_75571_)) {
-         p_75572_ = Mth.m_14045_(p_75572_, 0, this.f_75537_ - 1);
-         p_75573_ = Mth.m_14045_(p_75573_, 0, this.f_75537_ - 1);
-         boolean flag = p_75574_ == 255;
+   private void checkEdge(Pos pFromPos, Pos pToPos, int pNewLevel, int pPreviousLevel, int pPropagationLevel, boolean pIsDecreasing) {
+      if (!this.isSource(pToPos)) {
+         pNewLevel = Mth.m_14045_(pNewLevel, 0, this.f_75537_ - 1);
+         pPreviousLevel = Mth.m_14045_(pPreviousLevel, 0, this.f_75537_ - 1);
+         boolean flag = pPropagationLevel == 255;
          if (flag) {
-            p_75574_ = p_75573_;
+            pPropagationLevel = pPreviousLevel;
          }
 
          int i;
-         if (p_75575_) {
-            i = Math.min(p_75574_, p_75572_);
+         if (pIsDecreasing) {
+            i = Math.min(pPropagationLevel, pNewLevel);
          } else {
-            i = Mth.m_14045_(this.m_6357_(p_75571_, p_75570_, p_75572_), 0, this.f_75537_ - 1);
+            i = Mth.m_14045_(this.getComputedLevel(pToPos, pFromPos, pNewLevel), 0, this.f_75537_ - 1);
          }
 
-         int j = this.m_278160_(p_75573_, p_75574_);
-         if (p_75573_ != i) {
-            int k = this.m_278160_(p_75573_, i);
+         int j = this.m_278160_(pPreviousLevel, pPropagationLevel);
+         if (pPreviousLevel != i) {
+            int k = this.m_278160_(pPreviousLevel, i);
             if (j != k && !flag) {
-               this.f_278118_.m_278203_(p_75571_, j, k);
+               this.f_278118_.dequeue(pToPos, j, k);
             }
 
-            this.f_278118_.m_278202_(p_75571_, k);
-            this.f_75539_.put(p_75571_, (byte)i);
+            this.f_278118_.enqueue(pToPos, k);
+            this.f_75539_.put(pToPos, (byte)i);
          } else if (!flag) {
-            this.f_278118_.m_278203_(p_75571_, j, this.f_75537_);
-            this.f_75539_.remove(p_75571_);
+            this.f_278118_.dequeue(pToPos, j, this.f_75537_);
+            this.f_75539_.removeByte(pToPos);
          }
 
       }
    }
 
-   protected final void m_75593_(long p_75594_, long p_75595_, int p_75596_, boolean p_75597_) {
-      int i = this.f_75539_.get(p_75595_) & 255;
-      int j = Mth.m_14045_(this.m_6359_(p_75594_, p_75595_, p_75596_), 0, this.f_75537_ - 1);
-      if (p_75597_) {
-         this.m_75569_(p_75594_, p_75595_, j, this.m_6172_(p_75595_), i, p_75597_);
+   protected final void checkNeighbor(Pos pFromPos, Pos pToPos, int pSourceLevel, boolean pIsDecreasing) {
+      int i = this.f_75539_.getByte(pToPos) & 255;
+      int j = Mth.m_14045_(this.computeLevelFromNeighbor(pFromPos, pToPos, pSourceLevel), 0, this.f_75537_ - 1);
+      if (pIsDecreasing) {
+         this.checkEdge(pFromPos, pToPos, j, this.getLevel(pToPos), i, true);
       } else {
          boolean flag = i == 255;
          int k;
          if (flag) {
-            k = Mth.m_14045_(this.m_6172_(p_75595_), 0, this.f_75537_ - 1);
+            k = Mth.m_14045_(this.getLevel(pToPos), 0, this.f_75537_ - 1);
          } else {
             k = i;
          }
 
          if (j == k) {
-            this.m_75569_(p_75594_, p_75595_, this.f_75537_ - 1, flag ? k : this.m_6172_(p_75595_), i, p_75597_);
+            this.checkEdge(pFromPos, pToPos, this.f_75537_ - 1, flag ? k : this.getLevel(pToPos), i, false);
          }
       }
 
@@ -131,20 +_,20 @@
       } else {
          while(!this.f_278118_.m_278192_() && p_75589_ > 0) {
             --p_75589_;
-            long i = this.f_278118_.m_278178_();
-            int j = Mth.m_14045_(this.m_6172_(i), 0, this.f_75537_ - 1);
-            int k = this.f_75539_.remove(i) & 255;
+            Pos i = this.f_278118_.removeFirstLong();
+            int j = Mth.m_14045_(this.getLevel(i), 0, this.f_75537_ - 1);
+            int k = this.f_75539_.removeByte(i) & 255;
             if (k < j) {
-               this.m_7351_(i, k);
-               this.m_7900_(i, k, true);
+               this.setLevel(i, k);
+               this.checkNeighborsAfterUpdate(i, k, true);
             } else if (k > j) {
-               this.m_7351_(i, this.f_75537_ - 1);
+               this.setLevel(i, this.f_75537_ - 1);
                if (k != this.f_75537_ - 1) {
-                  this.f_278118_.m_278202_(i, this.m_278160_(this.f_75537_ - 1, k));
+                  this.f_278118_.enqueue(i, this.m_278160_(this.f_75537_ - 1, k));
                   this.f_75539_.put(i, (byte)k);
                }
 
-               this.m_7900_(i, j, false);
+               this.checkNeighborsAfterUpdate(i, j, false);
             }
          }
 
@@ -157,17 +_,17 @@
       return this.f_75539_.size();
    }
 
-   protected boolean m_6163_(long p_75551_) {
-      return p_75551_ == Long.MAX_VALUE;
+   protected boolean isSource(Pos pPos) {
+      return false;
    }
 
-   protected abstract int m_6357_(long p_75566_, long p_75567_, int p_75568_);
-
-   protected abstract void m_7900_(long p_75563_, int p_75564_, boolean p_75565_);
-
-   protected abstract int m_6172_(long p_75599_);
-
-   protected abstract void m_7351_(long p_75552_, int p_75553_);
-
-   protected abstract int m_6359_(long p_75590_, long p_75591_, int p_75592_);
+   protected abstract int getComputedLevel(Pos pPos, Pos pExcludedSourcePos, int pLevel);
+
+   protected abstract void checkNeighborsAfterUpdate(Pos pPos, int pLevel, boolean pIsDecreasing);
+
+   protected abstract int getLevel(Pos pChunkPos);
+
+   protected abstract void setLevel(Pos pChunkPos, int pLevel);
+
+   protected abstract int computeLevelFromNeighbor(Pos pStartPos, Pos pEndPos, int pStartLevel);
 }
