--- a/net/minecraft/world/level/pathfinder/FlyNodeEvaluator.java
+++ b/net/minecraft/world/level/pathfinder/FlyNodeEvaluator.java
@@ -15,7 +_,7 @@
 import net.minecraft.world.phys.AABB;
 
 public class FlyNodeEvaluator extends WalkNodeEvaluator {
-   private final Long2ObjectMap<BlockPathTypes> f_164687_ = new Long2ObjectOpenHashMap<>();
+   private final it.unimi.dsi.fastutil.objects.Object2ObjectMap<BlockPos, BlockPathTypes> f_164687_ = new it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<>();
    private static final float f_262722_ = 1.5F;
    private static final int f_262734_ = 10;
 
@@ -32,9 +_,9 @@
    }
 
    public Node m_7171_() {
-      int i;
+      long i;
       if (this.m_77361_() && this.f_77313_.m_20069_()) {
-         i = this.f_77313_.m_146904_();
+         i = this.f_77313_.getBlockY();
          BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(this.f_77313_.m_20185_(), (double)i, this.f_77313_.m_20189_());
 
          for(BlockState blockstate = this.f_77312_.m_8055_(blockpos$mutableblockpos); blockstate.m_60713_(Blocks.f_49990_); blockstate = this.f_77312_.m_8055_(blockpos$mutableblockpos)) {
@@ -62,138 +_,138 @@
       return this.f_77313_.m_21439_(blockpathtypes) >= 0.0F;
    }
 
-   public Target m_7568_(double p_77229_, double p_77230_, double p_77231_) {
-      return this.m_230615_(this.m_5676_(Mth.m_14107_(p_77229_), Mth.m_14107_(p_77230_), Mth.m_14107_(p_77231_)));
+   public Target getGoal(me.alphamode.mclong.math.BigDecimal pX, me.alphamode.mclong.math.BigDecimal pY, me.alphamode.mclong.math.BigDecimal pZ) {
+      return this.m_230615_(this.getNode(Mth.lfloor(pX), Mth.lfloor(pY), Mth.lfloor(pZ)));
    }
 
    public int m_6065_(Node[] p_77266_, Node p_77267_) {
       int i = 0;
-      Node node = this.m_262834_(p_77267_.f_77271_, p_77267_.f_77272_, p_77267_.f_77273_ + 1);
+      Node node = this.findAcceptedNode(p_77267_.f_77271_, p_77267_.f_77272_, p_77267_.f_77273_.add());
       if (this.m_77269_(node)) {
          p_77266_[i++] = node;
       }
 
-      Node node1 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_, p_77267_.f_77273_);
+      Node node1 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_, p_77267_.f_77273_);
       if (this.m_77269_(node1)) {
          p_77266_[i++] = node1;
       }
 
-      Node node2 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_, p_77267_.f_77273_);
+      Node node2 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_, p_77267_.f_77273_);
       if (this.m_77269_(node2)) {
          p_77266_[i++] = node2;
       }
 
-      Node node3 = this.m_262834_(p_77267_.f_77271_, p_77267_.f_77272_, p_77267_.f_77273_ - 1);
+      Node node3 = this.findAcceptedNode(p_77267_.f_77271_, p_77267_.f_77272_, p_77267_.f_77273_.subtract());
       if (this.m_77269_(node3)) {
          p_77266_[i++] = node3;
       }
 
-      Node node4 = this.m_262834_(p_77267_.f_77271_, p_77267_.f_77272_ + 1, p_77267_.f_77273_);
+      Node node4 = this.findAcceptedNode(p_77267_.f_77271_, p_77267_.f_77272_.add(), p_77267_.f_77273_);
       if (this.m_77269_(node4)) {
          p_77266_[i++] = node4;
       }
 
-      Node node5 = this.m_262834_(p_77267_.f_77271_, p_77267_.f_77272_ - 1, p_77267_.f_77273_);
+      Node node5 = this.findAcceptedNode(p_77267_.f_77271_, p_77267_.f_77272_.subtract(), p_77267_.f_77273_);
       if (this.m_77269_(node5)) {
          p_77266_[i++] = node5;
       }
 
-      Node node6 = this.m_262834_(p_77267_.f_77271_, p_77267_.f_77272_ + 1, p_77267_.f_77273_ + 1);
+      Node node6 = this.findAcceptedNode(p_77267_.f_77271_, p_77267_.f_77272_.add(), p_77267_.f_77273_.add());
       if (this.m_77269_(node6) && this.m_77263_(node) && this.m_77263_(node4)) {
          p_77266_[i++] = node6;
       }
 
-      Node node7 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_ + 1, p_77267_.f_77273_);
+      Node node7 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_.add(), p_77267_.f_77273_);
       if (this.m_77269_(node7) && this.m_77263_(node1) && this.m_77263_(node4)) {
          p_77266_[i++] = node7;
       }
 
-      Node node8 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_ + 1, p_77267_.f_77273_);
+      Node node8 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_.add(), p_77267_.f_77273_);
       if (this.m_77269_(node8) && this.m_77263_(node2) && this.m_77263_(node4)) {
          p_77266_[i++] = node8;
       }
 
-      Node node9 = this.m_262834_(p_77267_.f_77271_, p_77267_.f_77272_ + 1, p_77267_.f_77273_ - 1);
+      Node node9 = this.findAcceptedNode(p_77267_.f_77271_, p_77267_.f_77272_.add(), p_77267_.f_77273_.subtract());
       if (this.m_77269_(node9) && this.m_77263_(node3) && this.m_77263_(node4)) {
          p_77266_[i++] = node9;
       }
 
-      Node node10 = this.m_262834_(p_77267_.f_77271_, p_77267_.f_77272_ - 1, p_77267_.f_77273_ + 1);
+      Node node10 = this.findAcceptedNode(p_77267_.f_77271_, p_77267_.f_77272_.subtract(), p_77267_.f_77273_.add());
       if (this.m_77269_(node10) && this.m_77263_(node) && this.m_77263_(node5)) {
          p_77266_[i++] = node10;
       }
 
-      Node node11 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_ - 1, p_77267_.f_77273_);
+      Node node11 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_.subtract(), p_77267_.f_77273_);
       if (this.m_77269_(node11) && this.m_77263_(node1) && this.m_77263_(node5)) {
          p_77266_[i++] = node11;
       }
 
-      Node node12 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_ - 1, p_77267_.f_77273_);
+      Node node12 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_.subtract(), p_77267_.f_77273_);
       if (this.m_77269_(node12) && this.m_77263_(node2) && this.m_77263_(node5)) {
          p_77266_[i++] = node12;
       }
 
-      Node node13 = this.m_262834_(p_77267_.f_77271_, p_77267_.f_77272_ - 1, p_77267_.f_77273_ - 1);
+      Node node13 = this.findAcceptedNode(p_77267_.f_77271_, p_77267_.f_77272_.subtract(), p_77267_.f_77273_.subtract());
       if (this.m_77269_(node13) && this.m_77263_(node3) && this.m_77263_(node5)) {
          p_77266_[i++] = node13;
       }
 
-      Node node14 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_, p_77267_.f_77273_ - 1);
+      Node node14 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_, p_77267_.f_77273_.subtract());
       if (this.m_77269_(node14) && this.m_77263_(node3) && this.m_77263_(node2)) {
          p_77266_[i++] = node14;
       }
 
-      Node node15 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_, p_77267_.f_77273_ + 1);
+      Node node15 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_, p_77267_.f_77273_.add());
       if (this.m_77269_(node15) && this.m_77263_(node) && this.m_77263_(node2)) {
          p_77266_[i++] = node15;
       }
 
-      Node node16 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_, p_77267_.f_77273_ - 1);
+      Node node16 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_, p_77267_.f_77273_.subtract());
       if (this.m_77269_(node16) && this.m_77263_(node3) && this.m_77263_(node1)) {
          p_77266_[i++] = node16;
       }
 
-      Node node17 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_, p_77267_.f_77273_ + 1);
+      Node node17 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_, p_77267_.f_77273_.add());
       if (this.m_77269_(node17) && this.m_77263_(node) && this.m_77263_(node1)) {
          p_77266_[i++] = node17;
       }
 
-      Node node18 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_ + 1, p_77267_.f_77273_ - 1);
+      Node node18 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_.add(), p_77267_.f_77273_.subtract());
       if (this.m_77269_(node18) && this.m_77263_(node14) && this.m_77263_(node3) && this.m_77263_(node2) && this.m_77263_(node4) && this.m_77263_(node9) && this.m_77263_(node8)) {
          p_77266_[i++] = node18;
       }
 
-      Node node19 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_ + 1, p_77267_.f_77273_ + 1);
+      Node node19 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_.add(), p_77267_.f_77273_.add());
       if (this.m_77269_(node19) && this.m_77263_(node15) && this.m_77263_(node) && this.m_77263_(node2) && this.m_77263_(node4) && this.m_77263_(node6) && this.m_77263_(node8)) {
          p_77266_[i++] = node19;
       }
 
-      Node node20 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_ + 1, p_77267_.f_77273_ - 1);
+      Node node20 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_.add(), p_77267_.f_77273_.subtract());
       if (this.m_77269_(node20) && this.m_77263_(node16) && this.m_77263_(node3) && this.m_77263_(node1) && this.m_77263_(node4) && this.m_77263_(node9) && this.m_77263_(node7)) {
          p_77266_[i++] = node20;
       }
 
-      Node node21 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_ + 1, p_77267_.f_77273_ + 1);
+      Node node21 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_.add(), p_77267_.f_77273_.add());
       if (this.m_77269_(node21) && this.m_77263_(node17) && this.m_77263_(node) && this.m_77263_(node1) && this.m_77263_(node4) && this.m_77263_(node6) && this.m_77263_(node7)) {
          p_77266_[i++] = node21;
       }
 
-      Node node22 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_ - 1, p_77267_.f_77273_ - 1);
+      Node node22 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_.subtract(), p_77267_.f_77273_.subtract());
       if (this.m_77269_(node22) && this.m_77263_(node14) && this.m_77263_(node3) && this.m_77263_(node2) && this.m_77263_(node5) && this.m_77263_(node13) && this.m_77263_(node12)) {
          p_77266_[i++] = node22;
       }
 
-      Node node23 = this.m_262834_(p_77267_.f_77271_ + 1, p_77267_.f_77272_ - 1, p_77267_.f_77273_ + 1);
+      Node node23 = this.findAcceptedNode(p_77267_.f_77271_.add(), p_77267_.f_77272_.subtract(), p_77267_.f_77273_.add());
       if (this.m_77269_(node23) && this.m_77263_(node15) && this.m_77263_(node) && this.m_77263_(node2) && this.m_77263_(node5) && this.m_77263_(node10) && this.m_77263_(node12)) {
          p_77266_[i++] = node23;
       }
 
-      Node node24 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_ - 1, p_77267_.f_77273_ - 1);
+      Node node24 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_.subtract(), p_77267_.f_77273_.subtract());
       if (this.m_77269_(node24) && this.m_77263_(node16) && this.m_77263_(node3) && this.m_77263_(node1) && this.m_77263_(node5) && this.m_77263_(node13) && this.m_77263_(node11)) {
          p_77266_[i++] = node24;
       }
 
-      Node node25 = this.m_262834_(p_77267_.f_77271_ - 1, p_77267_.f_77272_ - 1, p_77267_.f_77273_ + 1);
+      Node node25 = this.findAcceptedNode(p_77267_.f_77271_.subtract(), p_77267_.f_77272_.subtract(), p_77267_.f_77273_.add());
       if (this.m_77269_(node25) && this.m_77263_(node17) && this.m_77263_(node) && this.m_77263_(node1) && this.m_77263_(node5) && this.m_77263_(node10) && this.m_77263_(node11)) {
          p_77266_[i++] = node25;
       }
@@ -210,12 +_,12 @@
    }
 
    @Nullable
-   protected Node m_262834_(int p_262970_, int p_263018_, int p_262947_) {
+   protected Node findAcceptedNode(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ) {
       Node node = null;
-      BlockPathTypes blockpathtypes = this.m_164693_(p_262970_, p_263018_, p_262947_);
+      BlockPathTypes blockpathtypes = this.getCachedBlockPathType(pX, pY, pZ);
       float f = this.f_77313_.m_21439_(blockpathtypes);
       if (f >= 0.0F) {
-         node = this.m_5676_(p_262970_, p_263018_, p_262947_);
+         node = this.getNode(pX, pY, pZ);
          node.f_77282_ = blockpathtypes;
          node.f_77281_ = Math.max(node.f_77281_, f);
          if (blockpathtypes == BlockPathTypes.WALKABLE) {
@@ -226,41 +_,41 @@
       return node;
    }
 
-   private BlockPathTypes m_164693_(int p_164694_, int p_164695_, int p_164696_) {
-      return this.f_164687_.computeIfAbsent(BlockPos.m_121882_(p_164694_, p_164695_, p_164696_), (p_265010_) -> {
-         return this.m_7209_(this.f_77312_, p_164694_, p_164695_, p_164696_, this.f_77313_);
+   private BlockPathTypes getCachedBlockPathType(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ) {
+      return this.f_164687_.computeIfAbsent(new BlockPos(pX, pY, pZ), (p_265010_) -> {
+         return this.getBlockPathType(this.f_77312_, pX, pY, pZ, this.f_77313_);
       });
    }
 
-   public BlockPathTypes m_7209_(BlockGetter p_265753_, int p_265243_, int p_265376_, int p_265253_, Mob p_265367_) {
+   public BlockPathTypes getBlockPathType(BlockGetter pLevel, me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ, Mob pMob) {
       EnumSet<BlockPathTypes> enumset = EnumSet.noneOf(BlockPathTypes.class);
       BlockPathTypes blockpathtypes = BlockPathTypes.BLOCKED;
-      BlockPos blockpos = p_265367_.m_20183_();
-      blockpathtypes = super.m_264561_(p_265753_, p_265243_, p_265376_, p_265253_, enumset, blockpathtypes, blockpos);
+      BlockPos blockpos = pMob.m_20183_();
+      blockpathtypes = super.getBlockPathTypes(pLevel, pX, pY, pZ, enumset, blockpathtypes, blockpos);
       if (enumset.contains(BlockPathTypes.FENCE)) {
          return BlockPathTypes.FENCE;
       } else {
          BlockPathTypes blockpathtypes1 = BlockPathTypes.BLOCKED;
 
          for(BlockPathTypes blockpathtypes2 : enumset) {
-            if (p_265367_.m_21439_(blockpathtypes2) < 0.0F) {
+            if (pMob.m_21439_(blockpathtypes2) < 0.0F) {
                return blockpathtypes2;
             }
 
-            if (p_265367_.m_21439_(blockpathtypes2) >= p_265367_.m_21439_(blockpathtypes1)) {
+            if (pMob.m_21439_(blockpathtypes2) >= pMob.m_21439_(blockpathtypes1)) {
                blockpathtypes1 = blockpathtypes2;
             }
          }
 
-         return blockpathtypes == BlockPathTypes.OPEN && p_265367_.m_21439_(blockpathtypes1) == 0.0F ? BlockPathTypes.OPEN : blockpathtypes1;
+         return blockpathtypes == BlockPathTypes.OPEN && pMob.m_21439_(blockpathtypes1) == 0.0F ? BlockPathTypes.OPEN : blockpathtypes1;
       }
    }
 
-   public BlockPathTypes m_8086_(BlockGetter p_77245_, int p_77246_, int p_77247_, int p_77248_) {
+   public BlockPathTypes getBlockPathType(BlockGetter pLevel, me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ) {
       BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
-      BlockPathTypes blockpathtypes = m_77643_(p_77245_, blockpos$mutableblockpos.m_122178_(p_77246_, p_77247_, p_77248_));
-      if (blockpathtypes == BlockPathTypes.OPEN && p_77247_ >= p_77245_.m_141937_() + 1) {
-         BlockPathTypes blockpathtypes1 = m_77643_(p_77245_, blockpos$mutableblockpos.m_122178_(p_77246_, p_77247_ - 1, p_77248_));
+      BlockPathTypes blockpathtypes = m_77643_(pLevel, blockpos$mutableblockpos.set(pX, pY, pZ));
+      if (blockpathtypes == BlockPathTypes.OPEN && pY.compareTo(pLevel.getMinBuildHeight() + 1) >= 0) {
+         BlockPathTypes blockpathtypes1 = m_77643_(pLevel, blockpos$mutableblockpos.set(pX, pY.subtract(), pZ));
          if (blockpathtypes1 != BlockPathTypes.DAMAGE_FIRE && blockpathtypes1 != BlockPathTypes.LAVA) {
             if (blockpathtypes1 == BlockPathTypes.DAMAGE_OTHER) {
                blockpathtypes = BlockPathTypes.DAMAGE_OTHER;
@@ -279,7 +_,7 @@
       }
 
       if (blockpathtypes == BlockPathTypes.WALKABLE || blockpathtypes == BlockPathTypes.OPEN) {
-         blockpathtypes = m_77607_(p_77245_, blockpos$mutableblockpos.m_122178_(p_77246_, p_77247_, p_77248_), blockpathtypes);
+         blockpathtypes = m_77607_(pLevel, blockpos$mutableblockpos.set(pX, pY, pZ), blockpathtypes);
       }
 
       return blockpathtypes;
@@ -290,13 +_,13 @@
       AABB aabb = p_263108_.m_20191_();
       boolean flag = aabb.m_82309_() < 1.0D;
       if (!flag) {
-         return List.of(BlockPos.m_274561_(aabb.f_82288_, (double)p_263108_.m_146904_(), aabb.f_82290_), BlockPos.m_274561_(aabb.f_82288_, (double)p_263108_.m_146904_(), aabb.f_82293_), BlockPos.m_274561_(aabb.f_82291_, (double)p_263108_.m_146904_(), aabb.f_82290_), BlockPos.m_274561_(aabb.f_82291_, (double)p_263108_.m_146904_(), aabb.f_82293_));
+         return List.of(BlockPos.containing(aabb.f_82288_, p_263108_.getBigDecBlockY(), aabb.f_82290_), BlockPos.containing(aabb.f_82288_, p_263108_.getBigDecBlockY(), aabb.f_82293_), BlockPos.containing(aabb.f_82291_, p_263108_.getBigDecBlockY(), aabb.f_82290_), BlockPos.containing(aabb.f_82291_, p_263108_.getBigDecBlockY(), aabb.f_82293_));
       } else {
          double d0 = Math.max(0.0D, (1.5D - aabb.m_82385_()) / 2.0D);
          double d1 = Math.max(0.0D, (1.5D - aabb.m_82362_()) / 2.0D);
          double d2 = Math.max(0.0D, (1.5D - aabb.m_82376_()) / 2.0D);
          AABB aabb1 = aabb.m_82377_(d1, d2, d0);
-         return BlockPos.m_235641_(p_263108_.m_217043_(), 10, Mth.m_14107_(aabb1.f_82288_), Mth.m_14107_(aabb1.f_82289_), Mth.m_14107_(aabb1.f_82290_), Mth.m_14107_(aabb1.f_82291_), Mth.m_14107_(aabb1.f_82292_), Mth.m_14107_(aabb1.f_82293_));
+         return BlockPos.randomBetweenClosed(p_263108_.m_217043_(), 10, Mth.lfloor(aabb1.f_82288_).longValue(), Mth.lfloor(aabb1.f_82289_).longValue(), Mth.lfloor(aabb1.f_82290_).longValue(), Mth.lfloor(aabb1.f_82291_).longValue(), Mth.lfloor(aabb1.f_82292_).longValue(), Mth.lfloor(aabb1.f_82293_).longValue());
       }
    }
 }
