--- a/net/minecraft/world/level/pathfinder/SwimNodeEvaluator.java
+++ b/net/minecraft/world/level/pathfinder/SwimNodeEvaluator.java
@@ -17,7 +_,7 @@
 
 public class SwimNodeEvaluator extends NodeEvaluator {
    private final boolean f_77455_;
-   private final Long2ObjectMap<BlockPathTypes> f_192951_ = new Long2ObjectOpenHashMap<>();
+   private final it.unimi.dsi.fastutil.objects.Object2ObjectMap<BlockPos, BlockPathTypes> f_192951_ = new it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<>();
 
    public SwimNodeEvaluator(boolean p_77457_) {
       this.f_77455_ = p_77457_;
@@ -34,11 +_,11 @@
    }
 
    public Node m_7171_() {
-      return this.m_5676_(Mth.m_14107_(this.f_77313_.m_20191_().f_82288_), Mth.m_14107_(this.f_77313_.m_20191_().f_82289_ + 0.5D), Mth.m_14107_(this.f_77313_.m_20191_().f_82290_));
+      return this.getNode(Mth.lfloor(this.f_77313_.m_20191_().f_82288_), Mth.lfloor(this.f_77313_.m_20191_().f_82289_.add(me.alphamode.mclong.core.BigConstants.AABB)), Mth.lfloor(this.f_77313_.m_20191_().f_82290_));
    }
 
-   public Target m_7568_(double p_77459_, double p_77460_, double p_77461_) {
-      return this.m_230615_(this.m_5676_(Mth.m_14107_(p_77459_), Mth.m_14107_(p_77460_), Mth.m_14107_(p_77461_)));
+   public Target getGoal(me.alphamode.mclong.math.BigDecimal pX, me.alphamode.mclong.math.BigDecimal pY, me.alphamode.mclong.math.BigDecimal pZ) {
+      return this.m_230615_(this.getNode(Mth.lfloor(pX), Mth.lfloor(pY), Mth.lfloor(pZ)));
    }
 
    public int m_6065_(Node[] p_77483_, Node p_77484_) {
@@ -46,7 +_,7 @@
       Map<Direction, Node> map = Maps.newEnumMap(Direction.class);
 
       for(Direction direction : Direction.values()) {
-         Node node = this.m_262844_(p_77484_.f_77271_ + direction.m_122429_(), p_77484_.f_77272_ + direction.m_122430_(), p_77484_.f_77273_ + direction.m_122431_());
+         Node node = this.findAcceptedNode(p_77484_.f_77271_.add(direction.m_122429_()), p_77484_.f_77272_.add(direction.m_122430_()), p_77484_.f_77273_.add(direction.m_122431_()));
          map.put(direction, node);
          if (this.m_192961_(node)) {
             p_77483_[i++] = node;
@@ -55,7 +_,7 @@
 
       for(Direction direction1 : Direction.Plane.HORIZONTAL) {
          Direction direction2 = direction1.m_122427_();
-         Node node1 = this.m_262844_(p_77484_.f_77271_ + direction1.m_122429_() + direction2.m_122429_(), p_77484_.f_77272_, p_77484_.f_77273_ + direction1.m_122431_() + direction2.m_122431_());
+         Node node1 = this.findAcceptedNode(p_77484_.f_77271_.add(direction1.m_122429_() + direction2.m_122429_()), p_77484_.f_77272_, p_77484_.f_77273_.add(direction1.m_122431_() + direction2.m_122431_()));
          if (this.m_192963_(node1, map.get(direction1), map.get(direction2))) {
             p_77483_[i++] = node1;
          }
@@ -73,16 +_,16 @@
    }
 
    @Nullable
-   protected Node m_262844_(int p_263032_, int p_263066_, int p_263105_) {
+   protected Node findAcceptedNode(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ) {
       Node node = null;
-      BlockPathTypes blockpathtypes = this.m_192967_(p_263032_, p_263066_, p_263105_);
+      BlockPathTypes blockpathtypes = this.getCachedBlockType(pX, pY, pZ);
       if (this.f_77455_ && blockpathtypes == BlockPathTypes.BREACH || blockpathtypes == BlockPathTypes.WATER) {
          float f = this.f_77313_.m_21439_(blockpathtypes);
          if (f >= 0.0F) {
-            node = this.m_5676_(p_263032_, p_263066_, p_263105_);
+            node = this.getNode(pX, pY, pZ);
             node.f_77282_ = blockpathtypes;
             node.f_77281_ = Math.max(node.f_77281_, f);
-            if (this.f_77312_.m_6425_(new BlockPos(p_263032_, p_263066_, p_263105_)).m_76178_()) {
+            if (this.f_77312_.m_6425_(new BlockPos(pX, pY, pZ)).m_76178_()) {
                node.f_77281_ += 8.0F;
             }
          }
@@ -91,25 +_,25 @@
       return node;
    }
 
-   protected BlockPathTypes m_192967_(int p_192968_, int p_192969_, int p_192970_) {
-      return this.f_192951_.computeIfAbsent(BlockPos.m_121882_(p_192968_, p_192969_, p_192970_), (p_192957_) -> {
-         return this.m_8086_(this.f_77312_, p_192968_, p_192969_, p_192970_);
+   protected BlockPathTypes getCachedBlockType(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ) {
+      return this.f_192951_.computeIfAbsent(new BlockPos(pX, pY, pZ), (p_192957_) -> {
+         return this.getBlockPathType(this.f_77312_, pX, pY, pZ);
       });
    }
 
-   public BlockPathTypes m_8086_(BlockGetter p_77467_, int p_77468_, int p_77469_, int p_77470_) {
-      return this.m_7209_(p_77467_, p_77468_, p_77469_, p_77470_, this.f_77313_);
+   public BlockPathTypes getBlockPathType(BlockGetter pLevel, me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ) {
+      return this.getBlockPathType(pLevel, pX, pY, pZ, this.f_77313_);
    }
 
-   public BlockPathTypes m_7209_(BlockGetter p_77472_, int p_77473_, int p_77474_, int p_77475_, Mob p_77476_) {
+   public BlockPathTypes getBlockPathType(BlockGetter pLevel, me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ, Mob pMob) {
       BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-      for(int i = p_77473_; i < p_77473_ + this.f_77315_; ++i) {
-         for(int j = p_77474_; j < p_77474_ + this.f_77316_; ++j) {
-            for(int k = p_77475_; k < p_77475_ + this.f_77317_; ++k) {
-               FluidState fluidstate = p_77472_.m_6425_(blockpos$mutableblockpos.m_122178_(i, j, k));
-               BlockState blockstate = p_77472_.m_8055_(blockpos$mutableblockpos.m_122178_(i, j, k));
-               if (fluidstate.m_76178_() && blockstate.m_60647_(p_77472_, blockpos$mutableblockpos.m_7495_(), PathComputationType.WATER) && blockstate.m_60795_()) {
+      for(me.alphamode.mclong.math.BigInteger i = pX; i.compareTo(pX.add(this.f_77315_)) < 0; i = i.add()) {
+         for(me.alphamode.mclong.math.BigInteger j = pY; j.compareTo(pY.add(this.f_77316_)) < 0; j = j.add()) {
+            for(me.alphamode.mclong.math.BigInteger k = pZ; k.compareTo(pZ.add(this.f_77317_)) < 0; k = k.add()) {
+               FluidState fluidstate = pLevel.m_6425_(blockpos$mutableblockpos.set(i, j, k));
+               BlockState blockstate = pLevel.m_8055_(blockpos$mutableblockpos.set(i, j, k));
+               if (fluidstate.m_76178_() && blockstate.m_60647_(pLevel, blockpos$mutableblockpos.below(), PathComputationType.WATER) && blockstate.m_60795_()) {
                   return BlockPathTypes.BREACH;
                }
 
@@ -120,7 +_,7 @@
          }
       }
 
-      BlockState blockstate1 = p_77472_.m_8055_(blockpos$mutableblockpos);
-      return blockstate1.m_60647_(p_77472_, blockpos$mutableblockpos, PathComputationType.WATER) ? BlockPathTypes.WATER : BlockPathTypes.BLOCKED;
+      BlockState blockstate1 = pLevel.m_8055_(blockpos$mutableblockpos);
+      return blockstate1.m_60647_(pLevel, blockpos$mutableblockpos, PathComputationType.WATER) ? BlockPathTypes.WATER : BlockPathTypes.BLOCKED;
    }
 }
