--- a/net/minecraft/world/level/chunk/ChunkAccess.java
+++ b/net/minecraft/world/level/chunk/ChunkAccess.java
@@ -56,7 +_,7 @@
 public abstract class ChunkAccess implements BlockGetter, BiomeManager.NoiseBiomeSource, LightChunk, StructureAccess {
    public static final int f_279635_ = -1;
    private static final Logger f_187613_ = LogUtils.getLogger();
-   private static final LongSet f_207932_ = new LongOpenHashSet();
+   private static final it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos> f_207932_ = new it.unimi.dsi.fastutil.objects.ObjectOpenHashSet<>();
    protected final ShortList[] f_187602_;
    protected volatile boolean f_187603_;
    private volatile boolean f_187614_;
@@ -74,7 +_,7 @@
    protected final Map<Heightmap.Types, Heightmap> f_187608_ = Maps.newEnumMap(Heightmap.Types.class);
    protected ChunkSkyLightSources f_283754_;
    private final Map<Structure, StructureStart> f_187617_ = Maps.newHashMap();
-   private final Map<Structure, LongSet> f_187618_ = Maps.newHashMap();
+   private final Map<Structure, it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos>> f_187618_ = Maps.newHashMap();
    protected final Map<BlockPos, CompoundTag> f_187609_ = Maps.newHashMap();
    protected final Map<BlockPos, BlockEntity> f_187610_ = Maps.newHashMap();
    protected final LevelHeightAccessor f_187611_;
@@ -109,7 +_,7 @@
 
    }
 
-   public GameEventListenerRegistry m_246686_(int p_251437_) {
+   public GameEventListenerRegistry getListenerRegistry(long p_251437_) {
       return GameEventListenerRegistry.f_244154_;
    }
 
@@ -137,9 +_,9 @@
    @Deprecated(
       forRemoval = true
    )
-   public int m_62098_() {
+   public long getHighestSectionPosition() {
       int i = this.m_280525_();
-      return i == -1 ? this.m_141937_() : SectionPos.m_123223_(this.m_151568_(i));
+      return i == -1 ? this.getMinBuildHeight() : SectionPos.sectionToBlockCoord(this.getSectionYFromSectionIndex(i));
    }
 
    public Set<BlockPos> m_5928_() {
@@ -174,7 +_,7 @@
       return this.f_187608_.get(p_187659_) != null;
    }
 
-   public int m_5885_(Heightmap.Types p_62080_, int p_62081_, int p_62082_) {
+   public long getHeight(Heightmap.Types p_62080_, long p_62081_, long p_62082_) {
       Heightmap heightmap = this.f_187608_.get(p_62080_);
       if (heightmap == null) {
          if (SharedConstants.f_136183_ && this instanceof LevelChunk) {
@@ -185,7 +_,7 @@
          heightmap = this.f_187608_.get(p_62080_);
       }
 
-      return heightmap.m_64242_(p_62081_ & 15, p_62082_ & 15) - 1;
+      return heightmap.getFirstAvailable(p_62081_ & 15, p_62082_ & 15) - 1;
    }
 
    public ChunkPos m_7697_() {
@@ -212,38 +_,38 @@
       this.f_187603_ = true;
    }
 
-   public LongSet m_213649_(Structure p_223017_) {
+   public it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos> getReferencesForStructure(Structure p_223017_) {
       return this.f_187618_.getOrDefault(p_223017_, f_207932_);
    }
 
-   public void m_213843_(Structure p_223007_, long p_223008_) {
+   public void addReferenceForStructure(Structure p_223007_, ChunkPos p_223008_) {
       this.f_187618_.computeIfAbsent(p_223007_, (p_223019_) -> {
-         return new LongOpenHashSet();
+         return new it.unimi.dsi.fastutil.objects.ObjectOpenHashSet<>();
       }).add(p_223008_);
       this.f_187603_ = true;
    }
 
-   public Map<Structure, LongSet> m_62769_() {
+   public Map<Structure, it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos>> m_62769_() {
       return Collections.unmodifiableMap(this.f_187618_);
    }
 
-   public void m_62737_(Map<Structure, LongSet> p_187663_) {
+   public void m_62737_(Map<Structure, it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos>> p_187663_) {
       this.f_187618_.clear();
       this.f_187618_.putAll(p_187663_);
       this.f_187603_ = true;
    }
 
-   public boolean m_5566_(int p_62075_, int p_62076_) {
-      if (p_62075_ < this.m_141937_()) {
-         p_62075_ = this.m_141937_();
-      }
-
-      if (p_62076_ >= this.m_151558_()) {
-         p_62076_ = this.m_151558_() - 1;
-      }
-
-      for(int i = p_62075_; i <= p_62076_; i += 16) {
-         if (!this.m_183278_(this.m_151564_(i)).m_188008_()) {
+   public boolean isYSpaceEmpty(long p_62075_, long p_62076_) {
+      if (p_62075_ < this.getMinBuildHeight()) {
+         p_62075_ = this.getMinBuildHeight();
+      }
+
+      if (p_62076_ >= this.getMaxBuildHeight()) {
+         p_62076_ = this.getMaxBuildHeight() - 1;
+      }
+
+      for(long i = p_62075_; i <= p_62076_; i += 16) {
+         if (!this.m_183278_(this.getSectionIndex(i)).m_188008_()) {
             return false;
          }
       }
@@ -307,17 +_,17 @@
    public void m_284478_(Predicate<BlockState> p_285343_, BiConsumer<BlockPos, BlockState> p_285030_) {
       BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-      for(int i = this.m_151560_(); i < this.m_151561_(); ++i) {
-         LevelChunkSection levelchunksection = this.m_183278_(this.m_151566_(i));
+      for(long i = this.getMinSection(); i < this.getMaxSection(); ++i) {
+         LevelChunkSection levelchunksection = this.m_183278_(this.getSectionIndexFromSectionY(i));
          if (levelchunksection.m_63002_(p_285343_)) {
-            BlockPos blockpos = SectionPos.m_123196_(this.f_187604_, i).m_123249_();
+            BlockPos blockpos = SectionPos.of(this.f_187604_, i).m_123249_();
 
             for(int j = 0; j < 16; ++j) {
                for(int k = 0; k < 16; ++k) {
                   for(int l = 0; l < 16; ++l) {
-                     BlockState blockstate = levelchunksection.m_62982_(l, j, k);
+                     BlockState blockstate = levelchunksection.getBlockState(l, j, k);
                      if (p_285343_.test(blockstate)) {
-                        p_285030_.accept(blockpos$mutableblockpos.m_122154_(blockpos, l, j, k), blockstate);
+                        p_285030_.accept(blockpos$mutableblockpos.setWithOffset(blockpos, l, j, k), blockstate);
                      }
                   }
                }
@@ -379,12 +_,12 @@
       this.m_8092_(true);
    }
 
-   public int m_141937_() {
-      return this.f_187611_.m_141937_();
+   public long getMinBuildHeight() {
+      return this.f_187611_.getMinBuildHeight();
    }
 
-   public int m_141928_() {
-      return this.f_187611_.m_141928_();
+   public long getHeight() {
+      return this.f_187611_.getHeight();
    }
 
    public NoiseChunk m_223012_(Function<ChunkAccess, NoiseChunk> p_223013_) {
@@ -405,18 +_,18 @@
       return this.f_223003_;
    }
 
-   public Holder<Biome> m_203495_(int p_204347_, int p_204348_, int p_204349_) {
+   public Holder<Biome> getNoiseBiome(long p_204347_, long p_204348_, long p_204349_) {
       try {
-         int i = QuartPos.m_175400_(this.m_141937_());
-         int k = i + QuartPos.m_175400_(this.m_141928_()) - 1;
-         int l = Mth.m_14045_(p_204348_, i, k);
-         int j = this.m_151564_(QuartPos.m_175402_(l));
-         return this.f_187612_[j].m_204433_(p_204347_ & 3, l & 3, p_204349_ & 3);
+         long i = QuartPos.fromBlock(this.getMinBuildHeight());
+         long k = i + QuartPos.fromBlock(this.getHeight()) - 1;
+         long l = Mth.clamp(p_204348_, i, k);
+         int j = this.getSectionIndex(QuartPos.toBlock(l));
+         return this.f_187612_[j].getNoiseBiome(p_204347_ & 3, l & 3, p_204349_ & 3);
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.m_127521_(throwable, "Getting biome");
          CrashReportCategory crashreportcategory = crashreport.m_127514_("Biome being got");
          crashreportcategory.m_128165_("Location", () -> {
-            return CrashReportCategory.m_178942_(this, p_204347_, p_204348_, p_204349_);
+            return CrashReportCategory.formatLocation(this, p_204347_, p_204348_, p_204349_);
          });
          throw new ReportedException(crashreport);
       }
@@ -424,14 +_,14 @@
 
    public void m_183442_(BiomeResolver p_187638_, Climate.Sampler p_187639_) {
       ChunkPos chunkpos = this.m_7697_();
-      int i = QuartPos.m_175400_(chunkpos.m_45604_());
-      int j = QuartPos.m_175400_(chunkpos.m_45605_());
+      long i = QuartPos.fromBlock(chunkpos.getMinBlockX());
+      long j = QuartPos.fromBlock(chunkpos.getMinBlockZ());
       LevelHeightAccessor levelheightaccessor = this.m_183618_();
 
-      for(int k = levelheightaccessor.m_151560_(); k < levelheightaccessor.m_151561_(); ++k) {
-         LevelChunkSection levelchunksection = this.m_183278_(this.m_151566_(k));
-         int l = QuartPos.m_175404_(k);
-         levelchunksection.m_280631_(p_187638_, p_187639_, i, l, j);
+      for(long k = levelheightaccessor.getMinSection(); k < levelheightaccessor.getMaxSection(); ++k) {
+         LevelChunkSection levelchunksection = this.m_183278_(this.getSectionIndexFromSectionY(k));
+         long l = QuartPos.fromSection(k);
+         levelchunksection.fillBiomesFromNoise(p_187638_, p_187639_, i, l, j);
       }
 
    }
