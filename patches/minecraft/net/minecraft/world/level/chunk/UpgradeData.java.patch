--- a/net/minecraft/world/level/chunk/UpgradeData.java
+++ b/net/minecraft/world/level/chunk/UpgradeData.java
@@ -55,7 +_,7 @@
    static final Set<UpgradeData.BlockFixer> f_63326_ = Sets.newHashSet();
 
    private UpgradeData(LevelHeightAccessor p_156506_) {
-      this.f_63324_ = new int[p_156506_.m_151559_()][];
+      this.f_63324_ = new int[(int) p_156506_.getSectionsCount()][]; // TOOD: long support
    }
 
    public UpgradeData(CompoundTag p_156508_, LevelHeightAccessor p_156509_) {
@@ -133,19 +_,19 @@
          boolean flag3 = set.contains(Direction.NORTH);
          boolean flag4 = set.size() == 1;
          ChunkPos chunkpos = p_63344_.m_7697_();
-         int k = chunkpos.m_45604_() + (!flag4 || !flag3 && !flag2 ? (flag1 ? 0 : 15) : 1);
-         int l = chunkpos.m_45604_() + (!flag4 || !flag3 && !flag2 ? (flag1 ? 0 : 15) : 14);
-         int i1 = chunkpos.m_45605_() + (!flag4 || !flag && !flag1 ? (flag3 ? 0 : 15) : 1);
-         int j1 = chunkpos.m_45605_() + (!flag4 || !flag && !flag1 ? (flag3 ? 0 : 15) : 14);
+         long k = chunkpos.getMinBlockX() + (!flag4 || !flag3 && !flag2 ? (flag1 ? 0 : 15) : 1);
+         long l = chunkpos.getMinBlockX() + (!flag4 || !flag3 && !flag2 ? (flag1 ? 0 : 15) : 14);
+         long i1 = chunkpos.getMinBlockZ() + (!flag4 || !flag && !flag1 ? (flag3 ? 0 : 15) : 1);
+         long j1 = chunkpos.getMinBlockZ() + (!flag4 || !flag && !flag1 ? (flag3 ? 0 : 15) : 14);
          Direction[] adirection = Direction.values();
          BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-         for(BlockPos blockpos : BlockPos.m_121976_(k, level.m_141937_(), i1, l, level.m_151558_() - 1, j1)) {
+         for(BlockPos blockpos : BlockPos.betweenClosed(k, level.getMinBuildHeight(), i1, l, level.getMaxBuildHeight() - 1, j1)) {
             BlockState blockstate = level.m_8055_(blockpos);
             BlockState blockstate1 = blockstate;
 
             for(Direction direction : adirection) {
-               blockpos$mutableblockpos.m_122159_(blockpos, direction);
+               blockpos$mutableblockpos.setWithOffset(blockpos, direction);
                blockstate1 = m_63335_(blockstate1, direction, level, blockpos, blockpos$mutableblockpos);
             }
 
@@ -166,26 +_,26 @@
       LevelAccessor levelaccessor = p_63348_.m_62953_();
 
       for(int i = 0; i < this.f_63324_.length; ++i) {
-         LevelChunkSection levelchunksection = p_63348_.m_183278_(i);
+         LevelChunkSection levelchunksection = p_63348_.getSection(i);
          int[] aint = this.f_63324_[i];
          this.f_63324_[i] = null;
          if (aint != null && aint.length > 0) {
             Direction[] adirection = Direction.values();
             PalettedContainer<BlockState> palettedcontainer = levelchunksection.m_63019_();
-            int j = p_63348_.m_151568_(i);
-            int k = SectionPos.m_123223_(j);
+            long j = p_63348_.getSectionYFromSectionIndex(i);
+            long k = SectionPos.sectionToBlockCoord(j);
 
             for(int l : aint) {
                int i1 = l & 15;
                int j1 = l >> 8 & 15;
                int k1 = l >> 4 & 15;
-               blockpos$mutableblockpos.m_122178_(chunkpos.m_45604_() + i1, k + j1, chunkpos.m_45605_() + k1);
-               BlockState blockstate = palettedcontainer.m_63085_(l);
+               blockpos$mutableblockpos.set(chunkpos.getMinBlockX() + i1, k + j1, chunkpos.getMinBlockZ() + k1);
+               BlockState blockstate = palettedcontainer.get(l);
                BlockState blockstate1 = blockstate;
 
                for(Direction direction : adirection) {
-                  blockpos$mutableblockpos1.m_122159_(blockpos$mutableblockpos, direction);
-                  if (SectionPos.m_123171_(blockpos$mutableblockpos.m_123341_()) == chunkpos.f_45578_ && SectionPos.m_123171_(blockpos$mutableblockpos.m_123343_()) == chunkpos.f_45579_) {
+                  blockpos$mutableblockpos1.setWithOffset(blockpos$mutableblockpos, direction);
+                  if (SectionPos.blockToSectionCoord(blockpos$mutableblockpos.getX()) == chunkpos.x() && SectionPos.blockToSectionCoord(blockpos$mutableblockpos.getZ()) == chunkpos.z()) {
                      blockstate1 = m_63335_(blockstate1, direction, levelaccessor, blockpos$mutableblockpos, blockpos$mutableblockpos1);
                   }
                }
@@ -197,7 +_,7 @@
 
       for(int l1 = 0; l1 < this.f_63324_.length; ++l1) {
          if (this.f_63324_[l1] != null) {
-            f_63321_.warn("Discarding update data for section {} for chunk ({} {})", levelaccessor.m_151568_(l1), chunkpos.f_45578_, chunkpos.f_45579_);
+            f_63321_.warn("Discarding update data for section {} for chunk ({} {})", levelaccessor.getSectionYFromSectionIndex(l1), chunkpos.x(), chunkpos.z());
          }
 
          this.f_63324_[l1] = null;
@@ -337,7 +_,7 @@
                      p_63430_.m_7731_(blockpos, blockstate.m_61124_(BlockStateProperties.f_61414_, Integer.valueOf(j)), 18);
                      if (i != 7) {
                         for(Direction direction : f_63363_) {
-                           blockpos$mutableblockpos.m_122159_(blockpos, direction);
+                           blockpos$mutableblockpos.setWithOffset(blockpos, direction);
                            BlockState blockstate1 = p_63430_.m_8055_(blockpos$mutableblockpos);
                            if (blockstate1.m_61138_(BlockStateProperties.f_61414_) && blockstate.m_61143_(BlockStateProperties.f_61414_) > i) {
                               objectset1.add(blockpos$mutableblockpos.m_7949_());
