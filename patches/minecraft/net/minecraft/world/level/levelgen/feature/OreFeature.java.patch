--- a/net/minecraft/world/level/levelgen/feature/OreFeature.java
+++ b/net/minecraft/world/level/levelgen/feature/OreFeature.java
@@ -27,23 +_,23 @@
       float f = randomsource.m_188501_() * (float)Math.PI;
       float f1 = (float)oreconfiguration.f_67839_ / 8.0F;
       int i = Mth.m_14167_(((float)oreconfiguration.f_67839_ / 16.0F * 2.0F + 1.0F) / 2.0F);
-      double d0 = (double)blockpos.m_123341_() + Math.sin((double)f) * (double)f1;
-      double d1 = (double)blockpos.m_123341_() - Math.sin((double)f) * (double)f1;
-      double d2 = (double)blockpos.m_123343_() + Math.cos((double)f) * (double)f1;
-      double d3 = (double)blockpos.m_123343_() - Math.cos((double)f) * (double)f1;
+      double d0 = (double)blockpos.getX() + Math.sin((double)f) * (double)f1;
+      double d1 = (double)blockpos.getX() - Math.sin((double)f) * (double)f1;
+      double d2 = (double)blockpos.getZ() + Math.cos((double)f) * (double)f1;
+      double d3 = (double)blockpos.getZ() - Math.cos((double)f) * (double)f1;
       int j = 2;
-      double d4 = (double)(blockpos.m_123342_() + randomsource.m_188503_(3) - 2);
-      double d5 = (double)(blockpos.m_123342_() + randomsource.m_188503_(3) - 2);
-      int k = blockpos.m_123341_() - Mth.m_14167_(f1) - i;
-      int l = blockpos.m_123342_() - 2 - i;
-      int i1 = blockpos.m_123343_() - Mth.m_14167_(f1) - i;
+      double d4 = (double)(blockpos.getY() + randomsource.m_188503_(3) - 2);
+      double d5 = (double)(blockpos.getY() + randomsource.m_188503_(3) - 2);
+      long k = blockpos.getX() - Mth.m_14167_(f1) - i;
+      long l = blockpos.getY() - 2 - i;
+      long i1 = blockpos.getZ() - Mth.m_14167_(f1) - i;
       int j1 = 2 * (Mth.m_14167_(f1) + i);
       int k1 = 2 * (2 + i);
 
-      for(int l1 = k; l1 <= k + j1; ++l1) {
-         for(int i2 = i1; i2 <= i1 + j1; ++i2) {
-            if (l <= worldgenlevel.m_6924_(Heightmap.Types.OCEAN_FLOOR_WG, l1, i2)) {
-               return this.m_225171_(worldgenlevel, randomsource, oreconfiguration, d0, d1, d2, d3, d4, d5, k, l, i1, j1, k1);
+      for(long l1 = k; l1 <= k + j1; ++l1) {
+         for(long i2 = i1; i2 <= i1 + j1; ++i2) {
+            if (l <= worldgenlevel.getHeight(Heightmap.Types.OCEAN_FLOOR_WG, me.alphamode.mclong.math.BigInteger.valueOf(l1), me.alphamode.mclong.math.BigInteger.valueOf(i2))) {
+               return this.doPlace(worldgenlevel, randomsource, oreconfiguration, d0, d1, d2, d3, d4, d5, k, l, i1, j1, k1);
             }
          }
       }
@@ -51,7 +_,7 @@
       return false;
    }
 
-   protected boolean m_225171_(WorldGenLevel p_225172_, RandomSource p_225173_, OreConfiguration p_225174_, double p_225175_, double p_225176_, double p_225177_, double p_225178_, double p_225179_, double p_225180_, int p_225181_, int p_225182_, int p_225183_, int p_225184_, int p_225185_) {
+   protected boolean doPlace(WorldGenLevel p_225172_, RandomSource p_225173_, OreConfiguration p_225174_, double p_225175_, double p_225176_, double p_225177_, double p_225178_, double p_225179_, double p_225180_, long p_225181_, long p_225182_, long p_225183_, int p_225184_, int p_225185_) {
       int i = 0;
       BitSet bitset = new BitSet(p_225184_ * p_225185_ * p_225184_);
       BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
@@ -98,37 +_,37 @@
                double d11 = adouble[j4 * 4 + 0];
                double d13 = adouble[j4 * 4 + 1];
                double d15 = adouble[j4 * 4 + 2];
-               int k4 = Math.max(Mth.m_14107_(d11 - d9), p_225181_);
-               int l = Math.max(Mth.m_14107_(d13 - d9), p_225182_);
-               int i1 = Math.max(Mth.m_14107_(d15 - d9), p_225183_);
-               int j1 = Math.max(Mth.m_14107_(d11 + d9), k4);
-               int k1 = Math.max(Mth.m_14107_(d13 + d9), l);
-               int l1 = Math.max(Mth.m_14107_(d15 + d9), i1);
+               long k4 = Math.max(Mth.m_14134_(d11 - d9), p_225181_);
+               long l = Math.max(Mth.m_14134_(d13 - d9), p_225182_);
+               long i1 = Math.max(Mth.m_14134_(d15 - d9), p_225183_);
+               long j1 = Math.max(Mth.m_14134_(d11 + d9), k4);
+               long k1 = Math.max(Mth.m_14134_(d13 + d9), l);
+               long l1 = Math.max(Mth.m_14134_(d15 + d9), i1);
 
-               for(int i2 = k4; i2 <= j1; ++i2) {
+               for(long i2 = k4; i2 <= j1; ++i2) {
                   double d5 = ((double)i2 + 0.5D - d11) / d9;
                   if (d5 * d5 < 1.0D) {
-                     for(int j2 = l; j2 <= k1; ++j2) {
+                     for(long j2 = l; j2 <= k1; ++j2) {
                         double d6 = ((double)j2 + 0.5D - d13) / d9;
                         if (d5 * d5 + d6 * d6 < 1.0D) {
-                           for(int k2 = i1; k2 <= l1; ++k2) {
+                           for(long k2 = i1; k2 <= l1; ++k2) {
                               double d7 = ((double)k2 + 0.5D - d15) / d9;
-                              if (d5 * d5 + d6 * d6 + d7 * d7 < 1.0D && !p_225172_.m_151562_(j2)) {
-                                 int l2 = i2 - p_225181_ + (j2 - p_225182_) * p_225184_ + (k2 - p_225183_) * p_225184_ * p_225185_;
-                                 if (!bitset.get(l2)) {
-                                    bitset.set(l2);
-                                    blockpos$mutableblockpos.m_122178_(i2, j2, k2);
+                              if (d5 * d5 + d6 * d6 + d7 * d7 < 1.0D && !p_225172_.isOutsideBuildHeight(j2)) {
+                                 long l2 = i2 - p_225181_ + (j2 - p_225182_) * p_225184_ + (k2 - p_225183_) * p_225184_ * p_225185_;
+                                 if (!bitset.get((int) l2)) {
+                                    bitset.set((int) l2);
+                                    blockpos$mutableblockpos.set(i2, j2, k2);
                                     if (p_225172_.m_180807_(blockpos$mutableblockpos)) {
                                        LevelChunkSection levelchunksection = bulksectionaccess.m_156104_(blockpos$mutableblockpos);
                                        if (levelchunksection != null) {
-                                          int i3 = SectionPos.m_123207_(i2);
-                                          int j3 = SectionPos.m_123207_(j2);
-                                          int k3 = SectionPos.m_123207_(k2);
-                                          BlockState blockstate = levelchunksection.m_62982_(i3, j3, k3);
+                                          me.alphamode.mclong.math.BigInteger i3 = me.alphamode.mclong.math.BigInteger.valueOf(SectionPos.sectionRelative(i2));
+                                          me.alphamode.mclong.math.BigInteger j3 = me.alphamode.mclong.math.BigInteger.valueOf(SectionPos.sectionRelative(j2));
+                                          me.alphamode.mclong.math.BigInteger k3 = me.alphamode.mclong.math.BigInteger.valueOf(SectionPos.sectionRelative(k2));
+                                          BlockState blockstate = levelchunksection.getBlockState(i3, j3, k3);
 
                                           for(OreConfiguration.TargetBlockState oreconfiguration$targetblockstate : p_225174_.f_161005_) {
                                              if (m_225186_(blockstate, bulksectionaccess::m_156110_, p_225173_, p_225174_, oreconfiguration$targetblockstate, blockpos$mutableblockpos)) {
-                                                levelchunksection.m_62991_(i3, j3, k3, oreconfiguration$targetblockstate.f_161033_, false);
+                                                levelchunksection.setBlockState(i3, j3, k3, oreconfiguration$targetblockstate.f_161033_, false);
                                                 ++i;
                                                 break;
                                              }
