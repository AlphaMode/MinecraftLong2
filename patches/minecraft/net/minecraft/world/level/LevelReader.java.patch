--- a/net/minecraft/world/level/LevelReader.java
+++ b/net/minecraft/world/level/LevelReader.java
@@ -24,13 +_,13 @@
 
 public interface LevelReader extends BlockAndTintGetter, CollisionGetter, SignalGetter, BiomeManager.NoiseBiomeSource {
    @Nullable
-   ChunkAccess m_6522_(int p_46823_, int p_46824_, ChunkStatus p_46825_, boolean p_46826_);
+   ChunkAccess getChunk(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pZ, ChunkStatus pRequiredStatus, boolean pNonnull);
 
    /** @deprecated */
    @Deprecated
-   boolean m_7232_(int p_46838_, int p_46839_);
+   boolean hasChunk(me.alphamode.mclong.math.BigInteger pChunkX, me.alphamode.mclong.math.BigInteger pChunkZ);
 
-   int m_6924_(Heightmap.Types p_46827_, int p_46828_, int p_46829_);
+   long getHeight(Heightmap.Types pHeightmapType, me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pZ);
 
    int m_7445_();
 
@@ -41,25 +_,25 @@
    }
 
    default Stream<BlockState> m_46847_(AABB p_46848_) {
-      int i = Mth.m_14107_(p_46848_.f_82288_);
-      int j = Mth.m_14107_(p_46848_.f_82291_);
-      int k = Mth.m_14107_(p_46848_.f_82289_);
-      int l = Mth.m_14107_(p_46848_.f_82292_);
-      int i1 = Mth.m_14107_(p_46848_.f_82290_);
-      int j1 = Mth.m_14107_(p_46848_.f_82293_);
-      return this.m_46812_(i, k, i1, j, l, j1) ? this.m_45556_(p_46848_) : Stream.empty();
+      me.alphamode.mclong.math.BigInteger i = Mth.lfloor(p_46848_.f_82288_);
+      me.alphamode.mclong.math.BigInteger j = Mth.lfloor(p_46848_.f_82291_);
+      me.alphamode.mclong.math.BigInteger k = Mth.lfloor(p_46848_.f_82289_);
+      me.alphamode.mclong.math.BigInteger l = Mth.lfloor(p_46848_.f_82292_);
+      me.alphamode.mclong.math.BigInteger i1 = Mth.lfloor(p_46848_.f_82290_);
+      me.alphamode.mclong.math.BigInteger j1 = Mth.lfloor(p_46848_.f_82293_);
+      return this.hasChunksAt(i, k, i1, j, l, j1) ? this.m_45556_(p_46848_) : Stream.empty();
    }
 
    default int m_6171_(BlockPos p_46836_, ColorResolver p_46837_) {
-      return p_46837_.m_130045_(this.m_204166_(p_46836_).m_203334_(), (double)p_46836_.m_123341_(), (double)p_46836_.m_123343_());
-   }
-
-   default Holder<Biome> m_203495_(int p_204163_, int p_204164_, int p_204165_) {
-      ChunkAccess chunkaccess = this.m_6522_(QuartPos.m_175406_(p_204163_), QuartPos.m_175406_(p_204165_), ChunkStatus.f_62317_, false);
-      return chunkaccess != null ? chunkaccess.m_203495_(p_204163_, p_204164_, p_204165_) : this.m_203675_(p_204163_, p_204164_, p_204165_);
-   }
-
-   Holder<Biome> m_203675_(int p_204159_, int p_204160_, int p_204161_);
+      return p_46837_.m_130045_(this.m_204166_(p_46836_).m_203334_(), (double)p_46836_.getX(), (double)p_46836_.getZ());
+   }
+
+   default Holder<Biome> getNoiseBiome(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ) {
+      ChunkAccess chunkaccess = this.getChunk(QuartPos.toSection(pX), QuartPos.toSection(pZ), ChunkStatus.f_62317_, false);
+      return chunkaccess != null ? chunkaccess.getNoiseBiome(pX, pY, pZ) : this.getUncachedNoiseBiome(pX, pY, pZ);
+   }
+
+   Holder<Biome> getUncachedNoiseBiome(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ);
 
    boolean m_5776_();
 
@@ -69,16 +_,16 @@
 
    DimensionType m_6042_();
 
-   default int m_141937_() {
-      return this.m_6042_().f_156647_();
+   default long getMinBuildHeight() {
+      return -800;//this.dimensionType().minY();
    }
 
-   default int m_141928_() {
-      return this.m_6042_().f_156648_();
+   default long getHeight() {
+      return 1600;//this.dimensionType().height();
    }
 
    default BlockPos m_5452_(Heightmap.Types p_46830_, BlockPos p_46831_) {
-      return new BlockPos(p_46831_.m_123341_(), this.m_6924_(p_46830_, p_46831_.m_123341_(), p_46831_.m_123343_()), p_46831_.m_123343_());
+      return new BlockPos(p_46831_.getBigX(), this.getHeight(p_46830_, p_46831_.getBigX(), p_46831_.getBigZ()), p_46831_.getBigZ());
    }
 
    default boolean m_46859_(BlockPos p_46860_) {
@@ -86,14 +_,14 @@
    }
 
    default boolean m_46861_(BlockPos p_46862_) {
-      if (p_46862_.m_123342_() >= this.m_5736_()) {
+      if (p_46862_.getY() >= this.m_5736_()) {
          return this.m_45527_(p_46862_);
       } else {
-         BlockPos blockpos = new BlockPos(p_46862_.m_123341_(), this.m_5736_(), p_46862_.m_123343_());
+         BlockPos blockpos = new BlockPos(p_46862_.getBigX(), this.m_5736_(), p_46862_.getBigZ());
          if (!this.m_45527_(blockpos)) {
             return false;
          } else {
-            for(BlockPos blockpos1 = blockpos.m_7495_(); blockpos1.m_123342_() > p_46862_.m_123342_(); blockpos1 = blockpos1.m_7495_()) {
+            for(BlockPos blockpos1 = blockpos.below(); blockpos1.getY() > p_46862_.getY(); blockpos1 = blockpos1.below()) {
                BlockState blockstate = this.m_8055_(blockpos1);
                if (blockstate.m_60739_(this, blockpos1) > 0 && !blockstate.m_278721_()) {
                   return false;
@@ -118,20 +_,20 @@
    }
 
    default ChunkAccess m_46865_(BlockPos p_46866_) {
-      return this.m_6325_(SectionPos.m_123171_(p_46866_.m_123341_()), SectionPos.m_123171_(p_46866_.m_123343_()));
-   }
-
-   default ChunkAccess m_6325_(int p_46807_, int p_46808_) {
-      return this.m_6522_(p_46807_, p_46808_, ChunkStatus.f_62326_, true);
-   }
-
-   default ChunkAccess m_46819_(int p_46820_, int p_46821_, ChunkStatus p_46822_) {
-      return this.m_6522_(p_46820_, p_46821_, p_46822_, true);
+      return this.getChunk(SectionPos.blockToSectionCoord(p_46866_.getBigX()), SectionPos.blockToSectionCoord(p_46866_.getBigZ()));
+   }
+
+   default ChunkAccess getChunk(me.alphamode.mclong.math.BigInteger pChunkX, me.alphamode.mclong.math.BigInteger pChunkZ) {
+      return this.getChunk(pChunkX, pChunkZ, ChunkStatus.f_62326_, true);
+   }
+
+   default ChunkAccess getChunk(me.alphamode.mclong.math.BigInteger pChunkX, me.alphamode.mclong.math.BigInteger pChunkZ, ChunkStatus pRequiredStatus) {
+      return this.getChunk(pChunkX, pChunkZ, pRequiredStatus, true);
    }
 
    @Nullable
-   default BlockGetter m_7925_(int p_46845_, int p_46846_) {
-      return this.m_6522_(p_46845_, p_46846_, ChunkStatus.f_62314_, false);
+   default BlockGetter getChunkForCollisions(me.alphamode.mclong.math.BigInteger pChunkX, me.alphamode.mclong.math.BigInteger pChunkZ) {
+      return this.getChunk(pChunkX, pChunkZ, ChunkStatus.f_62314_, false);
    }
 
    default boolean m_46801_(BlockPos p_46802_) {
@@ -139,18 +_,18 @@
    }
 
    default boolean m_46855_(AABB p_46856_) {
-      int i = Mth.m_14107_(p_46856_.f_82288_);
-      int j = Mth.m_14165_(p_46856_.f_82291_);
-      int k = Mth.m_14107_(p_46856_.f_82289_);
-      int l = Mth.m_14165_(p_46856_.f_82292_);
-      int i1 = Mth.m_14107_(p_46856_.f_82290_);
-      int j1 = Mth.m_14165_(p_46856_.f_82293_);
+      me.alphamode.mclong.math.BigInteger i = Mth.lfloor(p_46856_.f_82288_);
+      me.alphamode.mclong.math.BigInteger j = Mth.lceil(p_46856_.f_82291_);
+      me.alphamode.mclong.math.BigInteger k = Mth.lfloor(p_46856_.f_82289_);
+      me.alphamode.mclong.math.BigInteger l = Mth.lceil(p_46856_.f_82292_);
+      me.alphamode.mclong.math.BigInteger i1 = Mth.lfloor(p_46856_.f_82290_);
+      me.alphamode.mclong.math.BigInteger j1 = Mth.lceil(p_46856_.f_82293_);
       BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-      for(int k1 = i; k1 < j; ++k1) {
-         for(int l1 = k; l1 < l; ++l1) {
-            for(int i2 = i1; i2 < j1; ++i2) {
-               BlockState blockstate = this.m_8055_(blockpos$mutableblockpos.m_122178_(k1, l1, i2));
+      for(me.alphamode.mclong.math.BigInteger k1 = i; k1.compareTo(j) < 0; k1 = k1.add(me.alphamode.mclong.math.BigInteger.ONE)) {
+         for(me.alphamode.mclong.math.BigInteger l1 = k; l1.compareTo(l) < 0; l1 = l1.add(me.alphamode.mclong.math.BigInteger.ONE)) {
+            for(me.alphamode.mclong.math.BigInteger i2 = i1; i2.compareTo(j1) < 0; i2 = i2.add(me.alphamode.mclong.math.BigInteger.ONE)) {
+               BlockState blockstate = this.m_8055_(blockpos$mutableblockpos.set(k1, l1, i2));
                if (!blockstate.m_60819_().m_76178_()) {
                   return true;
                }
@@ -166,44 +_,44 @@
    }
 
    default int m_46849_(BlockPos p_46850_, int p_46851_) {
-      return p_46850_.m_123341_() >= -30000000 && p_46850_.m_123343_() >= -30000000 && p_46850_.m_123341_() < 30000000 && p_46850_.m_123343_() < 30000000 ? this.m_45524_(p_46850_, p_46851_) : 15;
+      return this.m_45524_(p_46850_, p_46851_);
    }
 
    /** @deprecated */
    @Deprecated
-   default boolean m_151577_(int p_151578_, int p_151579_) {
-      return this.m_7232_(SectionPos.m_123171_(p_151578_), SectionPos.m_123171_(p_151579_));
+   default boolean hasChunkAt(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pZ) {
+      return this.hasChunk(SectionPos.blockToSectionCoord(pX), SectionPos.blockToSectionCoord(pZ));
    }
 
    /** @deprecated */
    @Deprecated
    default boolean m_46805_(BlockPos p_46806_) {
-      return this.m_151577_(p_46806_.m_123341_(), p_46806_.m_123343_());
+      return this.hasChunkAt(p_46806_.getBigX(), p_46806_.getBigZ());
    }
 
    /** @deprecated */
    @Deprecated
    default boolean m_46832_(BlockPos p_46833_, BlockPos p_46834_) {
-      return this.m_46812_(p_46833_.m_123341_(), p_46833_.m_123342_(), p_46833_.m_123343_(), p_46834_.m_123341_(), p_46834_.m_123342_(), p_46834_.m_123343_());
-   }
-
-   /** @deprecated */
-   @Deprecated
-   default boolean m_46812_(int p_46813_, int p_46814_, int p_46815_, int p_46816_, int p_46817_, int p_46818_) {
-      return p_46817_ >= this.m_141937_() && p_46814_ < this.m_151558_() ? this.m_151572_(p_46813_, p_46815_, p_46816_, p_46818_) : false;
-   }
-
-   /** @deprecated */
-   @Deprecated
-   default boolean m_151572_(int p_151573_, int p_151574_, int p_151575_, int p_151576_) {
-      int i = SectionPos.m_123171_(p_151573_);
-      int j = SectionPos.m_123171_(p_151575_);
-      int k = SectionPos.m_123171_(p_151574_);
-      int l = SectionPos.m_123171_(p_151576_);
-
-      for(int i1 = i; i1 <= j; ++i1) {
-         for(int j1 = k; j1 <= l; ++j1) {
-            if (!this.m_7232_(i1, j1)) {
+      return this.hasChunksAt(p_46833_.getBigX(), p_46833_.getBigY(), p_46833_.getBigZ(), p_46834_.getBigX(), p_46834_.getBigY(), p_46834_.getBigZ());
+   }
+
+   /** @deprecated */
+   @Deprecated
+   default boolean hasChunksAt(me.alphamode.mclong.math.BigInteger pFromX, me.alphamode.mclong.math.BigInteger pFromY, me.alphamode.mclong.math.BigInteger pFromZ, me.alphamode.mclong.math.BigInteger pToX, me.alphamode.mclong.math.BigInteger pToY, me.alphamode.mclong.math.BigInteger pToZ) {
+      return pToY.compareTo(this.getMinBuildHeight()) >= 0 && pFromY.compareTo(this.getMaxBuildHeight()) < 0 ? this.hasChunksAt(pFromX, pFromZ, pToX, pToZ) : false;
+   }
+
+   /** @deprecated */
+   @Deprecated
+   default boolean hasChunksAt(me.alphamode.mclong.math.BigInteger pFromX, me.alphamode.mclong.math.BigInteger pFromZ, me.alphamode.mclong.math.BigInteger pToX, me.alphamode.mclong.math.BigInteger pToZ) {
+      me.alphamode.mclong.math.BigInteger i = SectionPos.blockToSectionCoord(pFromX);
+      me.alphamode.mclong.math.BigInteger j = SectionPos.blockToSectionCoord(pToX);
+      me.alphamode.mclong.math.BigInteger k = SectionPos.blockToSectionCoord(pFromZ);
+      me.alphamode.mclong.math.BigInteger l = SectionPos.blockToSectionCoord(pToZ);
+
+      for(me.alphamode.mclong.math.BigInteger i1 = i; i1.compareTo(j) <= 0; i1 = i1.add()) {
+         for(me.alphamode.mclong.math.BigInteger j1 = k; j1.compareTo(l) <= 0; j1 = j1.add()) {
+            if (!this.hasChunk(i1, j1)) {
                return false;
             }
          }
