--- a/net/minecraft/client/renderer/ViewArea.java
+++ b/net/minecraft/client/renderer/ViewArea.java
@@ -62,26 +_,26 @@
       this.f_110842_ = i;
    }
 
-   public void m_110850_(double p_110851_, double p_110852_) {
-      int i = Mth.m_14165_(p_110851_);
-      int j = Mth.m_14165_(p_110852_);
+   public void repositionCamera(me.alphamode.mclong.math.BigDecimal p_110851_, me.alphamode.mclong.math.BigDecimal  p_110852_) {
+      me.alphamode.mclong.math.BigInteger i = Mth.lceil(p_110851_);
+      me.alphamode.mclong.math.BigInteger j = Mth.lceil(p_110852_);
 
       for(int k = 0; k < this.f_110841_; ++k) {
          int l = this.f_110841_ * 16;
-         int i1 = i - 8 - l / 2;
-         int j1 = i1 + Math.floorMod(k * 16 - i1, l);
+         me.alphamode.mclong.math.BigInteger i1 = i.subtract(me.alphamode.mclong.core.BigConstants.Ints.EIGHT).subtract(l / 2);
+         me.alphamode.mclong.math.BigInteger j1 = i1.add(me.alphamode.mclong.math.BigMath.floorMod(me.alphamode.mclong.math.BigInteger.valueOf(k * 16).subtract(i1), l));
 
          for(int k1 = 0; k1 < this.f_110842_; ++k1) {
             int l1 = this.f_110842_ * 16;
-            int i2 = j - 8 - l1 / 2;
-            int j2 = i2 + Math.floorMod(k1 * 16 - i2, l1);
+            me.alphamode.mclong.math.BigInteger i2 = j.subtract(me.alphamode.mclong.core.BigConstants.Ints.EIGHT).subtract(l1 / 2);
+            me.alphamode.mclong.math.BigInteger j2 = i2.add(me.alphamode.mclong.math.BigMath.floorMod(me.alphamode.mclong.math.BigInteger.valueOf(k1 * 16).subtract(i2), l1));
 
             for(int k2 = 0; k2 < this.f_110840_; ++k2) {
-               int l2 = this.f_110839_.m_141937_() + k2 * 16;
+               int l2 = (int) (this.f_110839_.getMinBuildHeight() + k2 * 16);
                ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk = this.f_110843_[this.m_110855_(k, k2, k1)];
                BlockPos blockpos = chunkrenderdispatcher$renderchunk.m_112839_();
-               if (j1 != blockpos.m_123341_() || l2 != blockpos.m_123342_() || j2 != blockpos.m_123343_()) {
-                  chunkrenderdispatcher$renderchunk.m_112801_(j1, l2, j2);
+               if (!j1.equals(blockpos.getBigX()) || l2 != blockpos.getY() || !j2.equals(blockpos.getBigZ())) {
+                  chunkrenderdispatcher$renderchunk.setOrigin(j1, me.alphamode.mclong.math.BigInteger.valueOf(l2), j2);
                }
             }
          }
@@ -89,23 +_,23 @@
 
    }
 
-   public void m_110859_(int p_110860_, int p_110861_, int p_110862_, boolean p_110863_) {
-      int i = Math.floorMod(p_110860_, this.f_110841_);
-      int j = Math.floorMod(p_110861_ - this.f_110839_.m_151560_(), this.f_110840_);
-      int k = Math.floorMod(p_110862_, this.f_110842_);
-      ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk = this.f_110843_[this.m_110855_(i, j, k)];
+   public void setDirty(me.alphamode.mclong.math.BigInteger p_110860_, me.alphamode.mclong.math.BigInteger p_110861_, me.alphamode.mclong.math.BigInteger p_110862_, boolean p_110863_) {
+      me.alphamode.mclong.math.BigInteger i = me.alphamode.mclong.math.BigMath.floorMod(p_110860_, this.f_110841_);
+      me.alphamode.mclong.math.BigInteger j = me.alphamode.mclong.math.BigMath.floorMod(p_110861_.subtract(this.f_110839_.getMinSection()), this.f_110840_);
+      me.alphamode.mclong.math.BigInteger k = me.alphamode.mclong.math.BigMath.floorMod(p_110862_, this.f_110842_);
+      ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk = this.f_110843_[this.m_110855_(i.intValue(), j.intValue(), k.intValue())];
       chunkrenderdispatcher$renderchunk.m_112828_(p_110863_);
    }
 
    @Nullable
    protected ChunkRenderDispatcher.RenderChunk m_110866_(BlockPos p_110867_) {
-      int i = Mth.m_14042_(p_110867_.m_123341_(), 16);
-      int j = Mth.m_14042_(p_110867_.m_123342_() - this.f_110839_.m_141937_(), 16);
-      int k = Mth.m_14042_(p_110867_.m_123343_(), 16);
-      if (j >= 0 && j < this.f_110840_) {
-         i = Mth.m_14100_(i, this.f_110841_);
-         k = Mth.m_14100_(k, this.f_110842_);
-         return this.f_110843_[this.m_110855_(i, j, k)];
+      me.alphamode.mclong.math.BigInteger i = Mth.floorDiv(p_110867_.getBigX(), me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN);
+      me.alphamode.mclong.math.BigInteger j = Mth.floorDiv(p_110867_.getBigY().subtract(this.f_110839_.getMinBuildHeight()), me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN);
+      me.alphamode.mclong.math.BigInteger k = Mth.floorDiv(p_110867_.getBigZ(), me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN);
+      if (j.compareTo(me.alphamode.mclong.math.BigInteger.ZERO) >= 0 && j.compareTo(this.f_110840_) < 0) {
+         i = Mth.positiveModulo(i, me.alphamode.mclong.math.BigInteger.valueOf(this.f_110841_));
+         k = Mth.positiveModulo(k, me.alphamode.mclong.math.BigInteger.valueOf(this.f_110842_));
+         return this.f_110843_[this.m_110855_(i.intValue(), j.intValue(), k.intValue())];
       } else {
          return null;
       }
