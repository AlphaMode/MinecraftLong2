--- a/net/minecraft/client/renderer/entity/EntityRenderDispatcher.java
+++ b/net/minecraft/client/renderer/entity/EntityRenderDispatcher.java
@@ -257,24 +_,24 @@
       double d0 = Mth.m_14139_((double)p_114462_, p_114460_.f_19791_, p_114460_.m_20186_());
       double d1 = Mth.m_14139_((double)p_114462_, p_114460_.f_19792_, p_114460_.m_20189_());
       float f1 = Math.min(p_114461_ / 0.5F, f);
-      int i = Mth.m_14107_(d2 - (double)f);
-      int j = Mth.m_14107_(d2 + (double)f);
-      int k = Mth.m_14107_(d0 - (double)f1);
-      int l = Mth.m_14107_(d0);
-      int i1 = Mth.m_14107_(d1 - (double)f);
-      int j1 = Mth.m_14107_(d1 + (double)f);
+      long i = Mth.m_14134_(d2 - (double)f);
+      long j = Mth.m_14134_(d2 + (double)f);
+      long k = Mth.m_14134_(d0 - (double)f);
+      long l = Mth.m_14134_(d0);
+      long i1 = Mth.m_14134_(d1 - (double)f);
+      long j1 = Mth.m_14134_(d1 + (double)f);
       PoseStack.Pose posestack$pose = p_114458_.m_85850_();
       VertexConsumer vertexconsumer = p_114459_.m_6299_(f_114361_);
       BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-      for(int k1 = i1; k1 <= j1; ++k1) {
-         for(int l1 = i; l1 <= j; ++l1) {
-            blockpos$mutableblockpos.m_122178_(l1, 0, k1);
+      for(long k1 = i1; k1 <= j1; ++k1) {
+         for(long l1 = i; l1 <= j; ++l1) {
+            blockpos$mutableblockpos.set(l1, 0, k1);
             ChunkAccess chunkaccess = p_114463_.m_46865_(blockpos$mutableblockpos);
 
-            for(int i2 = k; i2 <= l; ++i2) {
-               blockpos$mutableblockpos.m_142448_(i2);
-               float f2 = p_114461_ - (float)(d0 - (double)blockpos$mutableblockpos.m_123342_()) * 0.5F;
+            for(long i2 = k; i2 <= l; ++i2) {
+               blockpos$mutableblockpos.setY(i2);
+               float f2 = p_114461_ - (float)(d0 - (double)blockpos$mutableblockpos.getY()) * 0.5F;
                m_277056_(posestack$pose, vertexconsumer, chunkaccess, p_114463_, blockpos$mutableblockpos, d2, d0, d1, f, f2);
             }
          }
@@ -283,7 +_,7 @@
    }
 
    private static void m_277056_(PoseStack.Pose p_277956_, VertexConsumer p_277533_, ChunkAccess p_277501_, LevelReader p_277622_, BlockPos p_277911_, double p_277682_, double p_278099_, double p_277806_, float p_277844_, float p_277496_) {
-      BlockPos blockpos = p_277911_.m_7495_();
+      BlockPos blockpos = p_277911_.below();
       BlockState blockstate = p_277501_.m_8055_(blockpos);
       if (blockstate.m_60799_() != RenderShape.INVISIBLE && p_277622_.m_46803_(p_277911_) > 3) {
          if (blockstate.m_60838_(p_277501_, blockpos)) {
@@ -297,11 +_,11 @@
                   }
 
                   AABB aabb = voxelshape.m_83215_();
-                  double d0 = (double)p_277911_.m_123341_() + aabb.f_82288_;
-                  double d1 = (double)p_277911_.m_123341_() + aabb.f_82291_;
-                  double d2 = (double)p_277911_.m_123342_() + aabb.f_82289_;
-                  double d3 = (double)p_277911_.m_123343_() + aabb.f_82290_;
-                  double d4 = (double)p_277911_.m_123343_() + aabb.f_82293_;
+                  double d0 = (double)p_277911_.getX() + aabb.f_82288_;
+                  double d1 = (double)p_277911_.getX() + aabb.f_82291_;
+                  double d2 = (double)p_277911_.getY() + aabb.f_82289_;
+                  double d3 = (double)p_277911_.getZ() + aabb.f_82290_;
+                  double d4 = (double)p_277911_.getZ() + aabb.f_82293_;
                   float f2 = (float)(d0 - p_277682_);
                   float f3 = (float)(d1 - p_277682_);
                   float f4 = (float)(d2 - p_278099_);
