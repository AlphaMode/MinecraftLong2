--- a/net/minecraft/client/renderer/debug/PathfindingRenderer.java
+++ b/net/minecraft/client/renderer/debug/PathfindingRenderer.java
@@ -36,14 +_,14 @@
       this.f_113608_.put(p_113612_, p_113614_);
    }
 
-   public void m_7790_(PoseStack p_113629_, MultiBufferSource p_113630_, double p_113631_, double p_113632_, double p_113633_) {
+   public void render(PoseStack p_113629_, MultiBufferSource p_113630_, me.alphamode.mclong.math.BigDecimal p_113631_, me.alphamode.mclong.math.BigDecimal p_113632_, me.alphamode.mclong.math.BigDecimal p_113633_) {
       if (!this.f_113607_.isEmpty()) {
          long i = Util.m_137550_();
 
          for(Integer integer : this.f_113607_.keySet()) {
             Path path = this.f_113607_.get(integer);
             float f = this.f_113608_.get(integer);
-            m_269027_(p_113629_, p_113630_, path, f, true, true, p_113631_, p_113632_, p_113633_);
+            renderPath(p_113629_, p_113630_, path, f, true, true, p_113631_, p_113632_, p_113633_);
          }
 
          for(Integer integer1 : this.f_113609_.keySet().toArray(new Integer[0])) {
@@ -56,32 +_,32 @@
       }
    }
 
-   public static void m_269027_(PoseStack p_270399_, MultiBufferSource p_270359_, Path p_270189_, float p_270841_, boolean p_270481_, boolean p_270748_, double p_270187_, double p_270252_, double p_270371_) {
-      m_269170_(p_270399_, p_270359_.m_6299_(RenderType.m_269399_(6.0D)), p_270189_, p_270187_, p_270252_, p_270371_);
+   public static void renderPath(PoseStack p_270399_, MultiBufferSource p_270359_, Path p_270189_, float p_270841_, boolean p_270481_, boolean p_270748_, me.alphamode.mclong.math.BigDecimal p_270187_, me.alphamode.mclong.math.BigDecimal p_270252_, me.alphamode.mclong.math.BigDecimal p_270371_) {
+      renderPathLine(p_270399_, p_270359_.m_6299_(RenderType.m_269399_(6.0D)), p_270189_, p_270187_, p_270252_, p_270371_);
       BlockPos blockpos = p_270189_.m_77406_();
-      if (m_113634_(blockpos, p_270187_, p_270252_, p_270371_) <= 80.0F) {
-         DebugRenderer.m_269311_(p_270399_, p_270359_, (new AABB((double)((float)blockpos.m_123341_() + 0.25F), (double)((float)blockpos.m_123342_() + 0.25F), (double)blockpos.m_123343_() + 0.25D, (double)((float)blockpos.m_123341_() + 0.75F), (double)((float)blockpos.m_123342_() + 0.75F), (double)((float)blockpos.m_123343_() + 0.75F))).m_82386_(-p_270187_, -p_270252_, -p_270371_), 0.0F, 1.0F, 0.0F, 0.5F);
+      if (distanceToCamera(blockpos, p_270187_, p_270252_, p_270371_) <= 80.0F) {
+         DebugRenderer.m_269311_(p_270399_, p_270359_, (new AABB((double)((float)blockpos.getX() + 0.25F), (double)((float)blockpos.getY() + 0.25F), (double)blockpos.getZ() + 0.25D, (double)((float)blockpos.getX() + 0.75F), (double)((float)blockpos.getY() + 0.75F), (double)((float)blockpos.getZ() + 0.75F))).move(p_270187_.negate(), p_270252_.negate(), p_270371_.negate()), 0.0F, 1.0F, 0.0F, 0.5F);
 
          for(int i = 0; i < p_270189_.m_77398_(); ++i) {
             Node node = p_270189_.m_77375_(i);
-            if (m_113634_(node.m_77288_(), p_270187_, p_270252_, p_270371_) <= 80.0F) {
+            if (distanceToCamera(node.m_77288_(), p_270187_, p_270252_, p_270371_) <= 80.0F) {
                float f = i == p_270189_.m_77399_() ? 1.0F : 0.0F;
                float f1 = i == p_270189_.m_77399_() ? 0.0F : 1.0F;
-               DebugRenderer.m_269311_(p_270399_, p_270359_, (new AABB((double)((float)node.f_77271_ + 0.5F - p_270841_), (double)((float)node.f_77272_ + 0.01F * (float)i), (double)((float)node.f_77273_ + 0.5F - p_270841_), (double)((float)node.f_77271_ + 0.5F + p_270841_), (double)((float)node.f_77272_ + 0.25F + 0.01F * (float)i), (double)((float)node.f_77273_ + 0.5F + p_270841_))).m_82386_(-p_270187_, -p_270252_, -p_270371_), f, 0.0F, f1, 0.5F);
+               DebugRenderer.m_269311_(p_270399_, p_270359_, (new AABB((node.f_77271_.toBigDecimal().add(0.5F - p_270841_)), (node.f_77272_.toBigDecimal().add(0.01F * (float)i)), (node.f_77273_.toBigDecimal().add(0.5F - p_270841_)), (node.f_77271_.toBigDecimal().add(0.5F + p_270841_)), (node.f_77272_.toBigDecimal().add(0.25F + 0.01F * (float)i)), (node.f_77273_.toBigDecimal().add(0.5F + p_270841_)))).move(p_270187_.negate(), p_270252_.negate(), p_270371_.negate()), f, 0.0F, f1, 0.5F);
             }
          }
       }
 
       if (p_270481_) {
          for(Node node2 : p_270189_.m_77405_()) {
-            if (m_113634_(node2.m_77288_(), p_270187_, p_270252_, p_270371_) <= 80.0F) {
-               DebugRenderer.m_269311_(p_270399_, p_270359_, (new AABB((double)((float)node2.f_77271_ + 0.5F - p_270841_ / 2.0F), (double)((float)node2.f_77272_ + 0.01F), (double)((float)node2.f_77273_ + 0.5F - p_270841_ / 2.0F), (double)((float)node2.f_77271_ + 0.5F + p_270841_ / 2.0F), (double)node2.f_77272_ + 0.1D, (double)((float)node2.f_77273_ + 0.5F + p_270841_ / 2.0F))).m_82386_(-p_270187_, -p_270252_, -p_270371_), 1.0F, 0.8F, 0.8F, 0.5F);
+            if (distanceToCamera(node2.m_77288_(), p_270187_, p_270252_, p_270371_) <= 80.0F) {
+               DebugRenderer.m_269311_(p_270399_, p_270359_, (new AABB((node2.f_77271_.toBigDecimal().add(0.5F - p_270841_ / 2.0F)), (node2.f_77272_.toBigDecimal().add(0.01F)), (node2.f_77273_.toBigDecimal().add(0.5F - p_270841_ / 2.0F)), (node2.f_77271_.toBigDecimal().add(0.5F + p_270841_ / 2.0F)), node2.f_77272_.toBigDecimal().add(me.alphamode.mclong.core.BigConstants.POINT_ONE), (node2.f_77273_.toBigDecimal().add(0.5F + p_270841_ / 2.0F)))).move(p_270187_.negate(), p_270252_.negate(), p_270371_.negate()), 1.0F, 0.8F, 0.8F, 0.5F);
             }
          }
 
          for(Node node3 : p_270189_.m_77404_()) {
-            if (m_113634_(node3.m_77288_(), p_270187_, p_270252_, p_270371_) <= 80.0F) {
-               DebugRenderer.m_269311_(p_270399_, p_270359_, (new AABB((double)((float)node3.f_77271_ + 0.5F - p_270841_ / 2.0F), (double)((float)node3.f_77272_ + 0.01F), (double)((float)node3.f_77273_ + 0.5F - p_270841_ / 2.0F), (double)((float)node3.f_77271_ + 0.5F + p_270841_ / 2.0F), (double)node3.f_77272_ + 0.1D, (double)((float)node3.f_77273_ + 0.5F + p_270841_ / 2.0F))).m_82386_(-p_270187_, -p_270252_, -p_270371_), 0.8F, 1.0F, 1.0F, 0.5F);
+            if (distanceToCamera(node3.m_77288_(), p_270187_, p_270252_, p_270371_) <= 80.0F) {
+               DebugRenderer.m_269311_(p_270399_, p_270359_, (new AABB((node3.f_77271_.toBigDecimal().add(0.5F - p_270841_ / 2.0F)), (node3.f_77272_.toBigDecimal().add(0.01F)), (node3.f_77273_.toBigDecimal().add(0.5F - p_270841_ / 2.0F)), (node3.f_77271_.toBigDecimal().add(0.5F + p_270841_ / 2.0F)), node3.f_77272_.toBigDecimal().add(me.alphamode.mclong.core.BigConstants.POINT_ONE), (node3.f_77273_.toBigDecimal().add(0.5F + p_270841_ / 2.0F)))).move(p_270187_.negate(), p_270252_.negate(), p_270371_.negate()), 0.8F, 1.0F, 1.0F, 0.5F);
             }
          }
       }
@@ -89,31 +_,31 @@
       if (p_270748_) {
          for(int j = 0; j < p_270189_.m_77398_(); ++j) {
             Node node1 = p_270189_.m_77375_(j);
-            if (m_113634_(node1.m_77288_(), p_270187_, p_270252_, p_270371_) <= 80.0F) {
-               DebugRenderer.m_269439_(p_270399_, p_270359_, String.valueOf((Object)node1.f_77282_), (double)node1.f_77271_ + 0.5D, (double)node1.f_77272_ + 0.75D, (double)node1.f_77273_ + 0.5D, -1, 0.02F, true, 0.0F, true);
-               DebugRenderer.m_269439_(p_270399_, p_270359_, String.format(Locale.ROOT, "%.2f", node1.f_77281_), (double)node1.f_77271_ + 0.5D, (double)node1.f_77272_ + 0.25D, (double)node1.f_77273_ + 0.5D, -1, 0.02F, true, 0.0F, true);
+            if (distanceToCamera(node1.m_77288_(), p_270187_, p_270252_, p_270371_) <= 80.0F) {
+               DebugRenderer.m_269439_(p_270399_, p_270359_, String.valueOf((Object)node1.f_77282_), node1.f_77271_.toBigDecimal().add(me.alphamode.mclong.core.BigConstants.AABB).doubleValue(), node1.f_77272_.toBigDecimal().add(me.alphamode.mclong.core.BigConstants.TEXT).doubleValue(), node1.f_77273_.toBigDecimal().add(me.alphamode.mclong.core.BigConstants.AABB).doubleValue(), -1, 0.02F, true, 0.0F, true);
+               DebugRenderer.m_269439_(p_270399_, p_270359_, String.format(Locale.ROOT, "%.2f", node1.f_77281_), node1.f_77271_.toBigDecimal().add(me.alphamode.mclong.core.BigConstants.AABB).doubleValue(), node1.f_77272_.doubleValue() + 0.25D, node1.f_77273_.doubleValue() + 0.5D, -1, 0.02F, true, 0.0F, true);
             }
          }
       }
 
    }
 
-   public static void m_269170_(PoseStack p_270666_, VertexConsumer p_270602_, Path p_270511_, double p_270524_, double p_270163_, double p_270176_) {
+   public static void renderPathLine(PoseStack p_270666_, VertexConsumer p_270602_, Path p_270511_, me.alphamode.mclong.math.BigDecimal p_270524_, me.alphamode.mclong.math.BigDecimal p_270163_, me.alphamode.mclong.math.BigDecimal p_270176_) {
       for(int i = 0; i < p_270511_.m_77398_(); ++i) {
          Node node = p_270511_.m_77375_(i);
-         if (!(m_113634_(node.m_77288_(), p_270524_, p_270163_, p_270176_) > 80.0F)) {
+         if (!(distanceToCamera(node.m_77288_(), p_270524_, p_270163_, p_270176_) > 80.0F)) {
             float f = (float)i / (float)p_270511_.m_77398_() * 0.33F;
             int j = i == 0 ? 0 : Mth.m_14169_(f, 0.9F, 0.9F);
             int k = j >> 16 & 255;
             int l = j >> 8 & 255;
             int i1 = j & 255;
-            p_270602_.m_252986_(p_270666_.m_85850_().m_252922_(), (float)((double)node.f_77271_ - p_270524_ + 0.5D), (float)((double)node.f_77272_ - p_270163_ + 0.5D), (float)((double)node.f_77273_ - p_270176_ + 0.5D)).m_6122_(k, l, i1, 255).m_5752_();
+            p_270602_.m_252986_(p_270666_.m_85850_().m_252922_(), (float)((double)node.f_77271_.doubleValue() - p_270524_.doubleValue() + 0.5D), (float)((double)node.f_77272_.doubleValue() - p_270163_.doubleValue() + 0.5D), (float)((double)node.f_77273_.doubleValue() - p_270176_.doubleValue() + 0.5D)).m_6122_(k, l, i1, 255).m_5752_();
          }
       }
 
    }
 
-   private static float m_113634_(BlockPos p_113635_, double p_113636_, double p_113637_, double p_113638_) {
-      return (float)(Math.abs((double)p_113635_.m_123341_() - p_113636_) + Math.abs((double)p_113635_.m_123342_() - p_113637_) + Math.abs((double)p_113635_.m_123343_() - p_113638_));
+   private static float distanceToCamera(BlockPos p_113635_, me.alphamode.mclong.math.BigDecimal p_113636_, me.alphamode.mclong.math.BigDecimal p_113637_, me.alphamode.mclong.math.BigDecimal p_113638_) {
+      return (float)(Math.abs((double)p_113635_.getX() - p_113636_.doubleValue()) + Math.abs((double)p_113635_.getY() - p_113637_.doubleValue()) + Math.abs((double)p_113635_.getZ() - p_113638_.doubleValue()));
    }
 }
