--- a/net/minecraft/client/renderer/LevelRenderer.java
+++ b/net/minecraft/client/renderer/LevelRenderer.java
@@ -189,7 +_,7 @@
    private final RunningTrimmedMean f_109476_ = new RunningTrimmedMean(100);
    private int f_109477_;
    private final Int2ObjectMap<BlockDestructionProgress> f_109408_ = new Int2ObjectOpenHashMap<>();
-   private final Long2ObjectMap<SortedSet<BlockDestructionProgress>> f_109409_ = new Long2ObjectOpenHashMap<>();
+   private final it.unimi.dsi.fastutil.objects.Object2ObjectMap<BlockPos, SortedSet<BlockDestructionProgress>> f_109409_ = new it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<>();
    private final Map<BlockPos, SoundInstance> f_109410_ = Maps.newHashMap();
    @Nullable
    private RenderTarget f_109411_;
@@ -207,20 +_,20 @@
    private RenderTarget f_109417_;
    @Nullable
    private PostChain f_109418_;
-   private double f_109419_ = Double.MIN_VALUE;
-   private double f_109420_ = Double.MIN_VALUE;
-   private double f_109421_ = Double.MIN_VALUE;
-   private int f_109422_ = Integer.MIN_VALUE;
-   private int f_109423_ = Integer.MIN_VALUE;
-   private int f_109424_ = Integer.MIN_VALUE;
-   private double f_109425_ = Double.MIN_VALUE;
-   private double f_109426_ = Double.MIN_VALUE;
-   private double f_109427_ = Double.MIN_VALUE;
+   private me.alphamode.mclong.math.BigDecimal f_109419_ = me.alphamode.mclong.math.BigDecimal.ZERO;
+   private me.alphamode.mclong.math.BigDecimal f_109420_ = me.alphamode.mclong.math.BigDecimal.ZERO;
+   private me.alphamode.mclong.math.BigDecimal f_109421_ = me.alphamode.mclong.math.BigDecimal.ZERO;
+   private me.alphamode.mclong.math.BigInteger f_109422_ = me.alphamode.mclong.math.BigInteger.ZERO;
+   private me.alphamode.mclong.math.BigInteger f_109423_ = me.alphamode.mclong.math.BigInteger.ZERO;
+   private me.alphamode.mclong.math.BigInteger f_109424_ = me.alphamode.mclong.math.BigInteger.ZERO;
+   private me.alphamode.mclong.math.BigDecimal f_109425_ = me.alphamode.mclong.math.BigDecimal.ZERO;
+   private me.alphamode.mclong.math.BigDecimal f_109426_ = me.alphamode.mclong.math.BigDecimal.ZERO;
+   private me.alphamode.mclong.math.BigDecimal f_109427_ = me.alphamode.mclong.math.BigDecimal.ZERO;
    private double f_109428_ = Double.MIN_VALUE;
    private double f_109429_ = Double.MIN_VALUE;
-   private int f_109430_ = Integer.MIN_VALUE;
-   private int f_109431_ = Integer.MIN_VALUE;
-   private int f_109432_ = Integer.MIN_VALUE;
+   private me.alphamode.mclong.math.BigInteger f_109430_ = me.alphamode.mclong.math.BigInteger.ZERO;
+   private me.alphamode.mclong.math.BigInteger f_109431_ = me.alphamode.mclong.math.BigInteger.ZERO;
+   private me.alphamode.mclong.math.BigInteger f_109432_ = me.alphamode.mclong.math.BigInteger.ZERO;
    private Vec3 f_109433_ = Vec3.f_82478_;
    @Nullable
    private CloudStatus f_109435_;
@@ -234,10 +_,10 @@
    @Nullable
    private Frustum f_109442_;
    private final Vector4f[] f_109443_ = new Vector4f[8];
-   private final Vector3d f_109444_ = new Vector3d(0.0D, 0.0D, 0.0D);
-   private double f_109445_;
-   private double f_109446_;
-   private double f_109447_;
+   private final me.alphamode.mclong.core.MutableVec3 f_109444_ = new me.alphamode.mclong.core.MutableVec3(0.0D, 0.0D, 0.0D);
+   private me.alphamode.mclong.math.BigDecimal f_109445_ = me.alphamode.mclong.math.BigDecimal.ZERO;
+   private me.alphamode.mclong.math.BigDecimal f_109446_ = me.alphamode.mclong.math.BigDecimal.ZERO;
+   private me.alphamode.mclong.math.BigDecimal f_109447_ = me.alphamode.mclong.math.BigDecimal.ZERO;
    private boolean f_194300_ = true;
    private final AtomicLong f_194301_ = new AtomicLong(0L);
    private final AtomicBoolean f_194299_ = new AtomicBoolean(false);
@@ -271,9 +_,9 @@
       if (!(f <= 0.0F)) {
          p_109704_.m_109896_();
          Level level = this.f_109461_.f_91073_;
-         int i = Mth.m_14107_(p_109706_);
-         int j = Mth.m_14107_(p_109707_);
-         int k = Mth.m_14107_(p_109708_);
+         long i = Mth.m_14134_(p_109706_);
+         long j = Mth.m_14134_(p_109707_);
+         long k = Mth.m_14134_(p_109708_);
          Tesselator tesselator = Tesselator.m_85913_();
          BufferBuilder bufferbuilder = tesselator.m_85915_();
          RenderSystem.disableCull();
@@ -290,17 +_,17 @@
          RenderSystem.setShader(GameRenderer::m_172829_);
          BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-         for(int j1 = k - l; j1 <= k + l; ++j1) {
-            for(int k1 = i - l; k1 <= i + l; ++k1) {
-               int l1 = (j1 - k + 16) * 32 + k1 - i + 16;
-               double d0 = (double)this.f_109451_[l1] * 0.5D;
-               double d1 = (double)this.f_109452_[l1] * 0.5D;
+         for(long j1 = k - l; j1 <= k + l; ++j1) {
+            for(long k1 = i - l; k1 <= i + l; ++k1) {
+               long l1 = (j1 - k + 16) * 32 + k1 - i + 16;
+               double d0 = (double)this.f_109451_[(int) l1] * 0.5D;
+               double d1 = (double)this.f_109452_[(int) l1] * 0.5D;
                blockpos$mutableblockpos.m_122169_((double)k1, p_109707_, (double)j1);
                Biome biome = level.m_204166_(blockpos$mutableblockpos).m_203334_();
                if (biome.m_264473_()) {
-                  int i2 = level.m_6924_(Heightmap.Types.MOTION_BLOCKING, k1, j1);
-                  int j2 = j - l;
-                  int k2 = j + l;
+                  long i2 = level.getHeight(Heightmap.Types.MOTION_BLOCKING, me.alphamode.mclong.math.BigInteger.valueOf(k1), me.alphamode.mclong.math.BigInteger.valueOf(j1));
+                  long j2 = j - l;
+                  long k2 = j + l;
                   if (j2 < i2) {
                      j2 = i2;
                   }
@@ -309,14 +_,14 @@
                      k2 = i2;
                   }
 
-                  int l2 = i2;
+                  long l2 = i2;
                   if (i2 < j) {
                      l2 = j;
                   }
 
                   if (j2 != k2) {
                      RandomSource randomsource = RandomSource.m_216335_((long)(k1 * k1 * 3121 + k1 * 45238971 ^ j1 * j1 * 418711 + j1 * 13761));
-                     blockpos$mutableblockpos.m_122178_(k1, j2, j1);
+                     blockpos$mutableblockpos.set(k1, j2, j1);
                      Biome.Precipitation biome$precipitation = biome.m_264600_(blockpos$mutableblockpos);
                      if (biome$precipitation == Biome.Precipitation.RAIN) {
                         if (i1 != 0) {
@@ -329,13 +_,13 @@
                            bufferbuilder.m_166779_(VertexFormat.Mode.QUADS, DefaultVertexFormat.f_85813_);
                         }
 
-                        int i3 = this.f_109477_ + k1 * k1 * 3121 + k1 * 45238971 + j1 * j1 * 418711 + j1 * 13761 & 31;
+                        long i3 = this.f_109477_ + k1 * k1 * 3121 + k1 * 45238971 + j1 * j1 * 418711 + j1 * 13761 & 31;
                         float f2 = -((float)i3 + p_109705_) / 32.0F * (3.0F + randomsource.m_188501_());
                         double d2 = (double)k1 + 0.5D - p_109706_;
                         double d4 = (double)j1 + 0.5D - p_109708_;
                         float f3 = (float)Math.sqrt(d2 * d2 + d4 * d4) / (float)l;
                         float f4 = ((1.0F - f3 * f3) * 0.5F + 0.5F) * f;
-                        blockpos$mutableblockpos.m_122178_(k1, l2, j1);
+                        blockpos$mutableblockpos.set(k1, l2, j1);
                         int j3 = m_109541_(level, blockpos$mutableblockpos);
                         bufferbuilder.m_5483_((double)k1 - p_109706_ - d0 + 0.5D, (double)k2 - p_109707_, (double)j1 - p_109708_ - d1 + 0.5D).m_7421_(0.0F, (float)j2 * 0.25F + f2).m_85950_(1.0F, 1.0F, 1.0F, f4).m_85969_(j3).m_5752_();
                         bufferbuilder.m_5483_((double)k1 - p_109706_ + d0 + 0.5D, (double)k2 - p_109707_, (double)j1 - p_109708_ + d1 + 0.5D).m_7421_(1.0F, (float)j2 * 0.25F + f2).m_85950_(1.0F, 1.0F, 1.0F, f4).m_85969_(j3).m_5752_();
@@ -359,7 +_,7 @@
                         double d5 = (double)j1 + 0.5D - p_109708_;
                         float f8 = (float)Math.sqrt(d3 * d3 + d5 * d5) / (float)l;
                         float f9 = ((1.0F - f8 * f8) * 0.3F + 0.5F) * f;
-                        blockpos$mutableblockpos.m_122178_(k1, l2, j1);
+                        blockpos$mutableblockpos.set(k1, l2, j1);
                         int k3 = m_109541_(level, blockpos$mutableblockpos);
                         int l3 = k3 >> 16 & '\uffff';
                         int i4 = k3 & '\uffff';
@@ -390,18 +_,18 @@
       if (!(f <= 0.0F)) {
          RandomSource randomsource = RandomSource.m_216335_((long)this.f_109477_ * 312987231L);
          LevelReader levelreader = this.f_109461_.f_91073_;
-         BlockPos blockpos = BlockPos.m_274446_(p_109694_.m_90583_());
+         BlockPos blockpos = BlockPos.containing(p_109694_.m_90583_());
          BlockPos blockpos1 = null;
          int i = (int)(100.0F * f * f) / (this.f_109461_.f_91066_.m_231929_().m_231551_() == ParticleStatus.DECREASED ? 2 : 1);
 
          for(int j = 0; j < i; ++j) {
             int k = randomsource.m_188503_(21) - 10;
             int l = randomsource.m_188503_(21) - 10;
-            BlockPos blockpos2 = levelreader.m_5452_(Heightmap.Types.MOTION_BLOCKING, blockpos.m_7918_(k, 0, l));
-            if (blockpos2.m_123342_() > levelreader.m_141937_() && blockpos2.m_123342_() <= blockpos.m_123342_() + 10 && blockpos2.m_123342_() >= blockpos.m_123342_() - 10) {
+            BlockPos blockpos2 = levelreader.m_5452_(Heightmap.Types.MOTION_BLOCKING, blockpos.offset(k, 0, l));
+            if (blockpos2.getY() > levelreader.getMinBuildHeight() && blockpos2.getY() <= blockpos.getY() + 10 && blockpos2.getY() >= blockpos.getY() - 10) {
                Biome biome = levelreader.m_204166_(blockpos2).m_203334_();
                if (biome.m_264600_(blockpos2) == Biome.Precipitation.RAIN) {
-                  blockpos1 = blockpos2.m_7495_();
+                  blockpos1 = blockpos2.below();
                   if (this.f_109461_.f_91066_.m_231929_().m_231551_() == ParticleStatus.MINIMAL) {
                      break;
                   }
@@ -411,18 +_,18 @@
                   BlockState blockstate = levelreader.m_8055_(blockpos1);
                   FluidState fluidstate = levelreader.m_6425_(blockpos1);
                   VoxelShape voxelshape = blockstate.m_60812_(levelreader, blockpos1);
-                  double d2 = voxelshape.m_83290_(Direction.Axis.Y, d0, d1);
+                  double d2 = voxelshape.max(Direction.Axis.Y, d0, d1).doubleValue();
                   double d3 = (double)fluidstate.m_76155_(levelreader, blockpos1);
                   double d4 = Math.max(d2, d3);
                   ParticleOptions particleoptions = !fluidstate.m_205070_(FluidTags.f_13132_) && !blockstate.m_60713_(Blocks.f_50450_) && !CampfireBlock.m_51319_(blockstate) ? ParticleTypes.f_123761_ : ParticleTypes.f_123762_;
-                  this.f_109461_.f_91073_.m_7106_(particleoptions, (double)blockpos1.m_123341_() + d0, (double)blockpos1.m_123342_() + d4, (double)blockpos1.m_123343_() + d1, 0.0D, 0.0D, 0.0D);
+                  this.f_109461_.f_91073_.addParticle(particleoptions, blockpos1.getBigDecX().add(d0), blockpos1.getBigDecY().add(d4), blockpos1.getBigDecZ().add(d1), 0.0D, 0.0D, 0.0D);
                }
             }
          }
 
          if (blockpos1 != null && randomsource.m_188503_(3) < this.f_109450_++) {
             this.f_109450_ = 0;
-            if (blockpos1.m_123342_() > blockpos.m_123342_() + 1 && levelreader.m_5452_(Heightmap.Types.MOTION_BLOCKING, blockpos).m_123342_() > Mth.m_14143_((float)blockpos.m_123342_())) {
+            if (blockpos1.getY() > blockpos.getY() + 1 && levelreader.m_5452_(Heightmap.Types.MOTION_BLOCKING, blockpos).getY() > Mth.m_14143_((float)blockpos.getY())) {
                this.f_109461_.f_91073_.m_245747_(blockpos1, SoundEvents.f_12542_, SoundSource.WEATHER, 0.1F, 0.5F, false);
             } else {
                this.f_109461_.f_91073_.m_245747_(blockpos1, SoundEvents.f_12541_, SoundSource.WEATHER, 0.2F, 1.0F, false);
@@ -652,12 +_,12 @@
    }
 
    public void m_109701_(@Nullable ClientLevel p_109702_) {
-      this.f_109419_ = Double.MIN_VALUE;
-      this.f_109420_ = Double.MIN_VALUE;
-      this.f_109421_ = Double.MIN_VALUE;
-      this.f_109422_ = Integer.MIN_VALUE;
-      this.f_109423_ = Integer.MIN_VALUE;
-      this.f_109424_ = Integer.MIN_VALUE;
+      this.f_109419_ = me.alphamode.mclong.math.BigDecimal.ONE;
+      this.f_109420_ = me.alphamode.mclong.math.BigDecimal.ONE;
+      this.f_109421_ = me.alphamode.mclong.math.BigDecimal.ONE;
+      this.f_109422_ = me.alphamode.mclong.math.BigInteger.ONE;
+      this.f_109423_ = me.alphamode.mclong.math.BigInteger.ONE;
+      this.f_109424_ = me.alphamode.mclong.math.BigInteger.ONE;
       this.f_109463_.m_114406_(p_109702_);
       this.f_109465_ = p_109702_;
       if (p_109702_ != null) {
@@ -727,7 +_,7 @@
          this.f_194297_.clear();
          Entity entity = this.f_109461_.m_91288_();
          if (entity != null) {
-            this.f_109469_.m_110850_(entity.m_20185_(), entity.m_20189_());
+            this.f_109469_.repositionCamera(entity.getBigX(), entity.getBigZ());
          }
 
       }
@@ -786,30 +_,30 @@
       }
 
       this.f_109465_.m_46473_().m_6180_("camera");
-      double d0 = this.f_109461_.f_91074_.m_20185_();
-      double d1 = this.f_109461_.f_91074_.m_20186_();
-      double d2 = this.f_109461_.f_91074_.m_20189_();
-      int i = SectionPos.m_175552_(d0);
-      int j = SectionPos.m_175552_(d1);
-      int k = SectionPos.m_175552_(d2);
-      if (this.f_109422_ != i || this.f_109423_ != j || this.f_109424_ != k) {
+      me.alphamode.mclong.math.BigDecimal d0 = this.f_109461_.f_91074_.getBigX();
+      me.alphamode.mclong.math.BigDecimal d1 = this.f_109461_.f_91074_.getBigY();
+      me.alphamode.mclong.math.BigDecimal d2 = this.f_109461_.f_91074_.getBigZ();
+      me.alphamode.mclong.math.BigInteger i = SectionPos.posToSectionCoord(d0);
+      me.alphamode.mclong.math.BigInteger j = SectionPos.posToSectionCoord(d1);
+      me.alphamode.mclong.math.BigInteger k = SectionPos.posToSectionCoord(d2);
+      if (!this.f_109422_.equals(i) || !this.f_109423_.equals(j) || !this.f_109424_.equals(k)) {
          this.f_109419_ = d0;
          this.f_109420_ = d1;
          this.f_109421_ = d2;
          this.f_109422_ = i;
          this.f_109423_ = j;
          this.f_109424_ = k;
-         this.f_109469_.m_110850_(d0, d2);
+         this.f_109469_.repositionCamera(d0, d2);
       }
 
       this.f_109436_.m_112693_(vec3);
       this.f_109465_.m_46473_().m_6182_("cull");
       this.f_109461_.m_91307_().m_6182_("culling");
       BlockPos blockpos = p_194339_.m_90588_();
-      double d3 = Math.floor(vec3.f_82479_ / 8.0D);
-      double d4 = Math.floor(vec3.f_82480_ / 8.0D);
-      double d5 = Math.floor(vec3.f_82481_ / 8.0D);
-      this.f_194300_ = this.f_194300_ || d3 != this.f_109425_ || d4 != this.f_109426_ || d5 != this.f_109427_;
+      me.alphamode.mclong.math.BigDecimal d3 = vec3.getX().divide(me.alphamode.mclong.core.BigConstants.EIGHT).setScale(0, java.math.RoundingMode.FLOOR);
+      me.alphamode.mclong.math.BigDecimal d4 = vec3.getY().divide(me.alphamode.mclong.core.BigConstants.EIGHT).setScale(0, java.math.RoundingMode.FLOOR);
+      me.alphamode.mclong.math.BigDecimal d5 = vec3.getZ().divide(me.alphamode.mclong.core.BigConstants.EIGHT).setScale(0, java.math.RoundingMode.FLOOR);
+      this.f_194300_ = this.f_194300_ || !d3.equals(this.f_109425_) || !d4.equals(this.f_109426_) || !d5.equals(this.f_109427_);
       this.f_194301_.updateAndGet((p_234309_) -> {
          if (p_234309_ > 0L && System.currentTimeMillis() > p_234309_) {
             this.f_194300_ = true;
@@ -896,15 +_,15 @@
       BlockPos blockpos = p_194344_.m_90588_();
       ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk = this.f_109469_.m_110866_(blockpos);
       if (chunkrenderdispatcher$renderchunk == null) {
-         boolean flag = blockpos.m_123342_() > this.f_109465_.m_141937_();
-         int j = flag ? this.f_109465_.m_151558_() - 8 : this.f_109465_.m_141937_() + 8;
-         int k = Mth.m_14107_(vec3.f_82479_ / 16.0D) * 16;
-         int l = Mth.m_14107_(vec3.f_82481_ / 16.0D) * 16;
+         boolean flag = blockpos.getY() > this.f_109465_.getMinBuildHeight();
+         long j = flag ? this.f_109465_.getMaxBuildHeight() - 8 : this.f_109465_.getMinBuildHeight() + 8;
+         me.alphamode.mclong.math.BigInteger k = Mth.lfloor(vec3.getX().divide(me.alphamode.mclong.core.BigConstants.SIXTEEN)).multiply(me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN);
+         me.alphamode.mclong.math.BigInteger l = Mth.lfloor(vec3.getZ().divide(me.alphamode.mclong.core.BigConstants.SIXTEEN)).multiply(me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN);
          List<LevelRenderer.RenderChunkInfo> list = Lists.newArrayList();
 
          for(int i1 = -this.f_109438_; i1 <= this.f_109438_; ++i1) {
             for(int j1 = -this.f_109438_; j1 <= this.f_109438_; ++j1) {
-               ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk1 = this.f_109469_.m_110866_(new BlockPos(k + SectionPos.m_175554_(i1, 8), j, l + SectionPos.m_175554_(j1, 8)));
+               ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk1 = this.f_109469_.m_110866_(new BlockPos(k.add(SectionPos.sectionToBlockCoord(i1, 8)), j, l.add(SectionPos.sectionToBlockCoord(j1, 8))));
                if (chunkrenderdispatcher$renderchunk1 != null) {
                   list.add(new LevelRenderer.RenderChunkInfo(chunkrenderdispatcher$renderchunk1, (Direction)null, 0));
                }
@@ -912,7 +_,7 @@
          }
 
          list.sort(Comparator.comparingDouble((p_234303_) -> {
-            return blockpos.m_123331_(p_234303_.f_109839_.m_112839_().m_7918_(8, 8, 8));
+            return blockpos.distSqr(p_234303_.f_109839_.m_112839_().offset(8, 8, 8));
          }));
          p_194345_.addAll(list);
       } else {
@@ -927,15 +_,15 @@
 
    private void m_194362_(LinkedHashSet<LevelRenderer.RenderChunkInfo> p_194363_, LevelRenderer.RenderInfoMap p_194364_, Vec3 p_194365_, Queue<LevelRenderer.RenderChunkInfo> p_194366_, boolean p_194367_) {
       int i = 16;
-      BlockPos blockpos = new BlockPos(Mth.m_14107_(p_194365_.f_82479_ / 16.0D) * 16, Mth.m_14107_(p_194365_.f_82480_ / 16.0D) * 16, Mth.m_14107_(p_194365_.f_82481_ / 16.0D) * 16);
-      BlockPos blockpos1 = blockpos.m_7918_(8, 8, 8);
+      BlockPos blockpos = new BlockPos(Mth.lfloor(p_194365_.getX().divide(me.alphamode.mclong.core.BigConstants.SIXTEEN)).multiply(me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN), Mth.lfloor(p_194365_.getY().divide(me.alphamode.mclong.core.BigConstants.SIXTEEN)).multiply(me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN), Mth.lfloor(p_194365_.getZ().divide(me.alphamode.mclong.core.BigConstants.SIXTEEN)).multiply(me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN));
+      BlockPos blockpos1 = blockpos.offset(8, 8, 8);
       Entity.m_20103_(Mth.m_14008_((double)this.f_109461_.f_91066_.m_193772_() / 8.0D, 1.0D, 2.5D) * this.f_109461_.f_91066_.m_232018_().m_231551_());
 
       while(!p_194366_.isEmpty()) {
          LevelRenderer.RenderChunkInfo levelrenderer$renderchunkinfo = p_194366_.poll();
          ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk = levelrenderer$renderchunkinfo.f_109839_;
          p_194363_.add(levelrenderer$renderchunkinfo);
-         boolean flag = Math.abs(chunkrenderdispatcher$renderchunk.m_112839_().m_123341_() - blockpos.m_123341_()) > 60 || Math.abs(chunkrenderdispatcher$renderchunk.m_112839_().m_123342_() - blockpos.m_123342_()) > 60 || Math.abs(chunkrenderdispatcher$renderchunk.m_112839_().m_123343_() - blockpos.m_123343_()) > 60;
+         boolean flag = chunkrenderdispatcher$renderchunk.m_112839_().getBigX().subtract(blockpos.getBigX()).abs().compareTo(me.alphamode.mclong.core.BigConstants.Ints.SIXTY) > 0 || Math.abs(chunkrenderdispatcher$renderchunk.m_112839_().getY() - blockpos.getY()) > 60 || Math.abs(chunkrenderdispatcher$renderchunk.m_112839_().getZ() - blockpos.getZ()) > 60;
 
          for(Direction direction : f_109434_) {
             ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk1 = this.m_109728_(blockpos, chunkrenderdispatcher$renderchunk, direction);
@@ -963,10 +_,10 @@
                      label125: {
                         blockpos2 = chunkrenderdispatcher$renderchunk1.m_112839_();
                         if (direction.m_122434_() == Direction.Axis.X) {
-                           if (blockpos1.m_123341_() > blockpos2.m_123341_()) {
+                           if (blockpos1.getBigX().compareTo(blockpos2.getBigX()) > 0) {
                               break label125;
                            }
-                        } else if (blockpos1.m_123341_() < blockpos2.m_123341_()) {
+                        } else if (blockpos1.getBigX().compareTo(blockpos2.getBigX()) < 0) {
                            break label125;
                         }
 
@@ -981,10 +_,10 @@
                   label118: {
                      label117: {
                         if (direction.m_122434_() == Direction.Axis.Y) {
-                           if (blockpos1.m_123342_() > blockpos2.m_123342_()) {
+                           if (blockpos1.getBigY().compareTo(blockpos2.getBigY()) > 0) {
                               break label117;
                            }
-                        } else if (blockpos1.m_123342_() < blockpos2.m_123342_()) {
+                        } else if (blockpos1.getBigY().compareTo(blockpos2.getBigY()) < 0) {
                            break label117;
                         }
 
@@ -999,10 +_,10 @@
                   label110: {
                      label109: {
                         if (direction.m_122434_() == Direction.Axis.Z) {
-                           if (blockpos1.m_123343_() > blockpos2.m_123343_()) {
+                           if (blockpos1.getBigZ().compareTo(blockpos2.getBigZ()) > 0) {
                               break label109;
                            }
-                        } else if (blockpos1.m_123343_() < blockpos2.m_123343_()) {
+                        } else if (blockpos1.getBigZ().compareTo(blockpos2.getBigZ()) < 0) {
                            break label109;
                         }
 
@@ -1013,18 +_,18 @@
                      b2 = 16;
                   }
 
-                  BlockPos blockpos3 = blockpos2.m_7918_(b0, b1, b2);
-                  Vec3 vec31 = new Vec3((double)blockpos3.m_123341_(), (double)blockpos3.m_123342_(), (double)blockpos3.m_123343_());
+                  BlockPos blockpos3 = blockpos2.offset(b0, b1, b2);
+                  Vec3 vec31 = new Vec3(blockpos3.getBigDecX(), blockpos3.getBigDecY(), blockpos3.getBigDecZ());
                   Vec3 vec3 = p_194365_.m_82546_(vec31).m_82541_().m_82490_(f_194304_);
                   boolean flag2 = true;
 
                   while(p_194365_.m_82546_(vec31).m_82556_() > 3600.0D) {
                      vec31 = vec31.m_82549_(vec3);
-                     if (vec31.f_82480_ > (double)this.f_109465_.m_151558_() || vec31.f_82480_ < (double)this.f_109465_.m_141937_()) {
+                     if (vec31.getY().compareTo(this.f_109465_.getMaxBuildHeight()) > 0 || vec31.getY().compareTo(this.f_109465_.getMinBuildHeight()) < 0) {
                         break;
                      }
 
-                     ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk2 = this.f_109469_.m_110866_(BlockPos.m_274561_(vec31.f_82479_, vec31.f_82480_, vec31.f_82481_));
+                     ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk2 = this.f_109469_.m_110866_(BlockPos.containing(vec31.getX(), vec31.getY(), vec31.getZ()));
                      if (chunkrenderdispatcher$renderchunk2 == null || p_194364_.m_173035_(chunkrenderdispatcher$renderchunk2) == null) {
                         flag2 = false;
                         break;
@@ -1058,25 +_,25 @@
    @Nullable
    private ChunkRenderDispatcher.RenderChunk m_109728_(BlockPos p_109729_, ChunkRenderDispatcher.RenderChunk p_109730_, Direction p_109731_) {
       BlockPos blockpos = p_109730_.m_112824_(p_109731_);
-      if (Mth.m_14040_(p_109729_.m_123341_() - blockpos.m_123341_()) > this.f_109438_ * 16) {
+      if (Mth.abs(p_109729_.getBigX().subtract(blockpos.getBigX()).longValue()) > this.f_109438_ * 16) {
          return null;
-      } else if (Mth.m_14040_(p_109729_.m_123342_() - blockpos.m_123342_()) <= this.f_109438_ * 16 && blockpos.m_123342_() >= this.f_109465_.m_141937_() && blockpos.m_123342_() < this.f_109465_.m_151558_()) {
-         return Mth.m_14040_(p_109729_.m_123343_() - blockpos.m_123343_()) > this.f_109438_ * 16 ? null : this.f_109469_.m_110866_(blockpos);
+      } else if (Mth.abs(p_109729_.getBigY().subtract(blockpos.getBigY()).longValue()) <= this.f_109438_ * 16 && blockpos.getY() >= this.f_109465_.getMinBuildHeight() && blockpos.getY() < this.f_109465_.getMaxBuildHeight()) {
+         return Mth.abs(p_109729_.getBigZ().subtract(blockpos.getBigZ()).longValue()) > this.f_109438_ * 16 ? null : this.f_109469_.m_110866_(blockpos);
       } else {
          return null;
       }
    }
 
    private boolean m_194359_(BlockPos p_194360_, ChunkRenderDispatcher.RenderChunk p_194361_) {
-      int i = SectionPos.m_123171_(p_194360_.m_123341_());
-      int j = SectionPos.m_123171_(p_194360_.m_123343_());
+      me.alphamode.mclong.math.BigInteger i = SectionPos.blockToSectionCoord(p_194360_.getBigX());
+      me.alphamode.mclong.math.BigInteger j = SectionPos.blockToSectionCoord(p_194360_.getBigZ());
       BlockPos blockpos = p_194361_.m_112839_();
-      int k = SectionPos.m_123171_(blockpos.m_123341_());
-      int l = SectionPos.m_123171_(blockpos.m_123343_());
-      return !ChunkMap.m_200878_(k, l, i, j, this.f_109438_ - 3);
+      me.alphamode.mclong.math.BigInteger k = SectionPos.blockToSectionCoord(blockpos.getBigX());
+      me.alphamode.mclong.math.BigInteger l = SectionPos.blockToSectionCoord(blockpos.getBigZ());
+      return !ChunkMap.isChunkInRange(k, l, i, j, this.f_109438_ - 2);
    }
 
-   private void m_252964_(Matrix4f p_253756_, Matrix4f p_253787_, double p_254187_, double p_253833_, double p_254547_, Frustum p_253954_) {
+   private void captureFrustum(Matrix4f p_253756_, Matrix4f p_253787_, me.alphamode.mclong.math.BigDecimal p_254187_, me.alphamode.mclong.math.BigDecimal p_253833_, me.alphamode.mclong.math.BigDecimal p_254547_, Frustum p_253954_) {
       this.f_109442_ = p_253954_;
       Matrix4f matrix4f = new Matrix4f(p_253787_);
       matrix4f.mul(p_253756_);
@@ -1102,11 +_,11 @@
 
    public void m_253210_(PoseStack p_253986_, Vec3 p_253766_, Matrix4f p_254341_) {
       Matrix4f matrix4f = p_253986_.m_85850_().m_252922_();
-      double d0 = p_253766_.m_7096_();
-      double d1 = p_253766_.m_7098_();
-      double d2 = p_253766_.m_7094_();
+      me.alphamode.mclong.math.BigDecimal d0 = p_253766_.getX();
+      me.alphamode.mclong.math.BigDecimal d1 = p_253766_.getY();
+      me.alphamode.mclong.math.BigDecimal d2 = p_253766_.getZ();
       this.f_172938_ = new Frustum(matrix4f, p_254341_);
-      this.f_172938_.m_113002_(d0, d1, d2);
+      this.f_172938_.prepare(d0, d1, d2);
    }
 
    public void m_109599_(PoseStack p_109600_, float p_109601_, long p_109602_, boolean p_109603_, Camera p_109604_, GameRenderer p_109605_, LightTexture p_109606_, Matrix4f p_254120_) {
@@ -1119,23 +_,23 @@
       profilerfiller.m_6182_("light_updates");
       this.f_109465_.m_7726_().m_7827_().m_9323_();
       Vec3 vec3 = p_109604_.m_90583_();
-      double d0 = vec3.m_7096_();
-      double d1 = vec3.m_7098_();
-      double d2 = vec3.m_7094_();
+      me.alphamode.mclong.math.BigDecimal d0 = vec3.getX();
+      me.alphamode.mclong.math.BigDecimal d1 = vec3.getY();
+      me.alphamode.mclong.math.BigDecimal d2 = vec3.getZ();
       Matrix4f matrix4f = p_109600_.m_85850_().m_252922_();
       profilerfiller.m_6182_("culling");
       boolean flag = this.f_109442_ != null;
       Frustum frustum;
       if (flag) {
          frustum = this.f_109442_;
-         frustum.m_113002_(this.f_109444_.x, this.f_109444_.y, this.f_109444_.z);
+         frustum.prepare(this.f_109444_.x, this.f_109444_.y, this.f_109444_.z);
       } else {
          frustum = this.f_172938_;
       }
 
       this.f_109461_.m_91307_().m_6182_("captureFrustum");
       if (this.f_109441_) {
-         this.m_252964_(matrix4f, p_254120_, vec3.f_82479_, vec3.f_82480_, vec3.f_82481_, flag ? new Frustum(matrix4f, p_254120_) : frustum);
+         this.captureFrustum(matrix4f, p_254120_, vec3.getX(), vec3.getY(), vec3.getZ(), flag ? new Frustum(matrix4f, p_254120_) : frustum);
          this.f_109441_ = false;
       }
 
@@ -1144,7 +_,7 @@
       FogRenderer.m_109036_();
       RenderSystem.clear(16640, Minecraft.f_91002_);
       float f = p_109605_.m_109152_();
-      boolean flag1 = this.f_109461_.f_91073_.m_104583_().m_5781_(Mth.m_14107_(d0), Mth.m_14107_(d1)) || this.f_109461_.f_91065_.m_93090_().m_93715_();
+      boolean flag1 = this.f_109461_.f_91073_.m_104583_().isFoggyAt(Mth.lfloor(d0), Mth.lfloor(d1)) || this.f_109461_.f_91065_.m_93090_().m_93715_();
       profilerfiller.m_6182_("sky");
       RenderSystem.setShader(GameRenderer::m_172808_);
       this.m_202423_(p_109600_, p_254120_, p_109601_, p_109604_, flag1, () -> {
@@ -1157,9 +_,9 @@
       profilerfiller.m_6182_("compilechunks");
       this.m_194370_(p_109604_);
       profilerfiller.m_6182_("terrain");
-      this.m_172993_(RenderType.m_110451_(), p_109600_, d0, d1, d2, p_254120_);
-      this.m_172993_(RenderType.m_110457_(), p_109600_, d0, d1, d2, p_254120_);
-      this.m_172993_(RenderType.m_110463_(), p_109600_, d0, d1, d2, p_254120_);
+      this.renderChunkLayer(RenderType.m_110451_(), p_109600_, d0, d1, d2, p_254120_);
+      this.renderChunkLayer(RenderType.m_110457_(), p_109600_, d0, d1, d2, p_254120_);
+      this.renderChunkLayer(RenderType.m_110463_(), p_109600_, d0, d1, d2, p_254120_);
       if (this.f_109465_.m_104583_().m_108885_()) {
          Lighting.m_252995_(p_109600_.m_85850_().m_252922_());
       } else {
@@ -1188,14 +_,14 @@
       MultiBufferSource.BufferSource multibuffersource$buffersource = this.f_109464_.m_110104_();
 
       for(Entity entity : this.f_109465_.m_104735_()) {
-         if (this.f_109463_.m_114397_(entity, frustum, d0, d1, d2) || entity.m_20367_(this.f_109461_.f_91074_)) {
+         if (this.f_109463_.shouldRender(entity, frustum, d0, d1, d2) || entity.m_20367_(this.f_109461_.f_91074_)) {
             BlockPos blockpos = entity.m_20183_();
-            if ((this.f_109465_.m_151562_(blockpos.m_123342_()) || this.m_202430_(blockpos)) && (entity != p_109604_.m_90592_() || p_109604_.m_90594_() || p_109604_.m_90592_() instanceof LivingEntity && ((LivingEntity)p_109604_.m_90592_()).m_5803_()) && (!(entity instanceof LocalPlayer) || p_109604_.m_90592_() == entity)) {
+            if ((this.f_109465_.isOutsideBuildHeight(blockpos.getY()) || this.m_202430_(blockpos)) && (entity != p_109604_.m_90592_() || p_109604_.m_90594_() || p_109604_.m_90592_() instanceof LivingEntity && ((LivingEntity)p_109604_.m_90592_()).m_5803_()) && (!(entity instanceof LocalPlayer) || p_109604_.m_90592_() == entity)) {
                ++this.f_109439_;
                if (entity.f_19797_ == 0) {
-                  entity.f_19790_ = entity.m_20185_();
-                  entity.f_19791_ = entity.m_20186_();
-                  entity.f_19792_ = entity.m_20189_();
+                  entity.f_19790_ = entity.getBigX();
+                  entity.f_19791_ = entity.getBigY();
+                  entity.f_19792_ = entity.getBigZ();
                }
 
                MultiBufferSource multibuffersource;
@@ -1209,7 +_,7 @@
                   multibuffersource = multibuffersource$buffersource;
                }
 
-               this.m_109517_(entity, d0, d1, d2, p_109601_, p_109600_, multibuffersource);
+               this.renderEntity(entity, d0, d1, d2, p_109601_, p_109600_, multibuffersource);
             }
          }
       }
@@ -1229,8 +_,8 @@
                BlockPos blockpos4 = blockentity1.m_58899_();
                MultiBufferSource multibuffersource1 = multibuffersource$buffersource;
                p_109600_.m_85836_();
-               p_109600_.m_85837_((double)blockpos4.m_123341_() - d0, (double)blockpos4.m_123342_() - d1, (double)blockpos4.m_123343_() - d2);
-               SortedSet<BlockDestructionProgress> sortedset = this.f_109409_.get(blockpos4.m_121878_());
+               p_109600_.m_85837_(new me.alphamode.mclong.math.BigDecimal(blockpos4.getBigX()).subtract(d0).doubleValue(), new me.alphamode.mclong.math.BigDecimal(blockpos4.getBigY()).subtract(d1).doubleValue(), new me.alphamode.mclong.math.BigDecimal(blockpos4.getBigZ()).subtract(d2).doubleValue());
+               SortedSet<BlockDestructionProgress> sortedset = this.f_109409_.get(blockpos4);
                if (sortedset != null && !sortedset.isEmpty()) {
                   int j = sortedset.last().m_139988_();
                   if (j >= 0) {
@@ -1253,7 +_,7 @@
          for(BlockEntity blockentity : this.f_109468_) {
             BlockPos blockpos3 = blockentity.m_58899_();
             p_109600_.m_85836_();
-            p_109600_.m_85837_((double)blockpos3.m_123341_() - d0, (double)blockpos3.m_123342_() - d1, (double)blockpos3.m_123343_() - d2);
+            p_109600_.m_85837_(new me.alphamode.mclong.math.BigDecimal(blockpos3.getBigX()).subtract(d0).doubleValue(), new me.alphamode.mclong.math.BigDecimal(blockpos3.getBigY()).subtract(d1).doubleValue(), new me.alphamode.mclong.math.BigDecimal(blockpos3.getBigZ()).subtract(d2).doubleValue());
             this.f_172946_.m_112267_(blockentity, p_109601_, p_109600_, multibuffersource$buffersource);
             p_109600_.m_85849_();
          }
@@ -1278,17 +_,17 @@
 
       profilerfiller.m_6182_("destroyProgress");
 
-      for(Long2ObjectMap.Entry<SortedSet<BlockDestructionProgress>> entry : this.f_109409_.long2ObjectEntrySet()) {
-         BlockPos blockpos2 = BlockPos.m_122022_(entry.getLongKey());
-         double d3 = (double)blockpos2.m_123341_() - d0;
-         double d4 = (double)blockpos2.m_123342_() - d1;
-         double d5 = (double)blockpos2.m_123343_() - d2;
-         if (!(d3 * d3 + d4 * d4 + d5 * d5 > 1024.0D)) {
+      for(it.unimi.dsi.fastutil.objects.Object2ObjectMap.Entry<BlockPos, SortedSet<BlockDestructionProgress>> entry : this.f_109409_.object2ObjectEntrySet()) {
+         BlockPos blockpos2 = entry.getKey();
+         me.alphamode.mclong.math.BigDecimal d3 = new me.alphamode.mclong.math.BigDecimal(blockpos2.getBigX()).subtract(d0);
+         me.alphamode.mclong.math.BigDecimal d4 = new me.alphamode.mclong.math.BigDecimal(blockpos2.getBigY()).subtract(d1);
+         me.alphamode.mclong.math.BigDecimal d5 = new me.alphamode.mclong.math.BigDecimal(blockpos2.getBigZ()).subtract(d2);
+         if (!(d3.multiply(d3).add(d4.multiply(d4)).add(d5.multiply(d5)).compareTo(me.alphamode.mclong.core.BigConstants.BREAK_PROGRESS) > 0)) {
             SortedSet<BlockDestructionProgress> sortedset1 = entry.getValue();
             if (sortedset1 != null && !sortedset1.isEmpty()) {
                int k = sortedset1.last().m_139988_();
                p_109600_.m_85836_();
-               p_109600_.m_85837_((double)blockpos2.m_123341_() - d0, (double)blockpos2.m_123342_() - d1, (double)blockpos2.m_123343_() - d2);
+               p_109600_.m_85837_(d3.doubleValue(), d4.doubleValue(), d5.doubleValue());
                PoseStack.Pose posestack$pose1 = p_109600_.m_85850_();
                VertexConsumer vertexconsumer1 = new SheetedDecalTextureGenerator(this.f_109464_.m_110108_().m_6299_(ModelBakery.f_119229_.get(k)), posestack$pose1.m_252922_(), posestack$pose1.m_252943_(), 1.0F);
                this.f_109461_.m_91289_().m_110918_(this.f_109465_.m_8055_(blockpos2), blockpos2, this.f_109465_, p_109600_, vertexconsumer1);
@@ -1305,11 +_,11 @@
          BlockState blockstate = this.f_109465_.m_8055_(blockpos1);
          if (!blockstate.m_60795_() && this.f_109465_.m_6857_().m_61937_(blockpos1)) {
             VertexConsumer vertexconsumer2 = multibuffersource$buffersource.m_6299_(RenderType.m_110504_());
-            this.m_109637_(p_109600_, vertexconsumer2, p_109604_.m_90592_(), d0, d1, d2, blockpos1, blockstate);
+            this.renderHitOutline(p_109600_, vertexconsumer2, p_109604_.m_90592_(), d0, d1, d2, blockpos1, blockstate);
          }
       }
 
-      this.f_109461_.f_91064_.m_113457_(p_109600_, multibuffersource$buffersource, d0, d1, d2);
+      this.f_109461_.f_91064_.render(p_109600_, multibuffersource$buffersource, d0, d1, d2);
       multibuffersource$buffersource.m_173043_();
       PoseStack posestack = RenderSystem.getModelViewStack();
       RenderSystem.applyModelViewMatrix();
@@ -1331,9 +_,9 @@
          this.f_109413_.m_83954_(Minecraft.f_91002_);
          this.f_109413_.m_83945_(this.f_109461_.m_91385_());
          profilerfiller.m_6182_("translucent");
-         this.m_172993_(RenderType.m_110466_(), p_109600_, d0, d1, d2, p_254120_);
+         this.renderChunkLayer(RenderType.m_110466_(), p_109600_, d0, d1, d2, p_254120_);
          profilerfiller.m_6182_("string");
-         this.m_172993_(RenderType.m_110503_(), p_109600_, d0, d1, d2, p_254120_);
+         this.renderChunkLayer(RenderType.m_110503_(), p_109600_, d0, d1, d2, p_254120_);
          this.f_109415_.m_83954_(Minecraft.f_91002_);
          this.f_109415_.m_83945_(this.f_109461_.m_91385_());
          RenderStateShard.f_110126_.m_110185_();
@@ -1346,11 +_,11 @@
             this.f_109413_.m_83954_(Minecraft.f_91002_);
          }
 
-         this.m_172993_(RenderType.m_110466_(), p_109600_, d0, d1, d2, p_254120_);
+         this.renderChunkLayer(RenderType.m_110466_(), p_109600_, d0, d1, d2, p_254120_);
          multibuffersource$buffersource.m_109912_(RenderType.m_110504_());
          multibuffersource$buffersource.m_109911_();
          profilerfiller.m_6182_("string");
-         this.m_172993_(RenderType.m_110503_(), p_109600_, d0, d1, d2, p_254120_);
+         this.renderChunkLayer(RenderType.m_110503_(), p_109600_, d0, d1, d2, p_254120_);
          profilerfiller.m_6182_("particles");
          this.f_109461_.f_91061_.m_107336_(p_109600_, multibuffersource$buffersource, p_109606_, p_109604_, p_109601_);
       }
@@ -1363,28 +_,28 @@
             this.f_109417_.m_83954_(Minecraft.f_91002_);
             RenderStateShard.f_110128_.m_110185_();
             profilerfiller.m_6182_("clouds");
-            this.m_253054_(p_109600_, p_254120_, p_109601_, d0, d1, d2);
+            this.renderClouds(p_109600_, p_254120_, p_109601_, d0, d1, d2);
             RenderStateShard.f_110128_.m_110188_();
          } else {
             profilerfiller.m_6182_("clouds");
             RenderSystem.setShader(GameRenderer::m_172838_);
-            this.m_253054_(p_109600_, p_254120_, p_109601_, d0, d1, d2);
+            this.renderClouds(p_109600_, p_254120_, p_109601_, d0, d1, d2);
          }
       }
 
       if (this.f_109418_ != null) {
          RenderStateShard.f_110127_.m_110185_();
          profilerfiller.m_6182_("weather");
-         this.m_109703_(p_109606_, p_109601_, d0, d1, d2);
-         this.m_173012_(p_109604_);
+         this.m_109703_(p_109606_, p_109601_, d0.doubleValue(), d1.doubleValue(), d2.doubleValue());
+//         this.renderWorldBorder(p_109604_);
          RenderStateShard.f_110127_.m_110188_();
          this.f_109418_.m_110023_(p_109601_);
          this.f_109461_.m_91385_().m_83947_(false);
       } else {
          RenderSystem.depthMask(false);
          profilerfiller.m_6182_("weather");
-         this.m_109703_(p_109606_, p_109601_, d0, d1, d2);
-         this.m_173012_(p_109604_);
+         this.m_109703_(p_109606_, p_109601_, d0.doubleValue(), d1.doubleValue(), d2.doubleValue());
+//         this.renderWorldBorder(p_109604_);
          RenderSystem.depthMask(true);
       }
 
@@ -1403,34 +_,35 @@
       }
    }
 
-   private void m_109517_(Entity p_109518_, double p_109519_, double p_109520_, double p_109521_, float p_109522_, PoseStack p_109523_, MultiBufferSource p_109524_) {
-      double d0 = Mth.m_14139_((double)p_109522_, p_109518_.f_19790_, p_109518_.m_20185_());
-      double d1 = Mth.m_14139_((double)p_109522_, p_109518_.f_19791_, p_109518_.m_20186_());
-      double d2 = Mth.m_14139_((double)p_109522_, p_109518_.f_19792_, p_109518_.m_20189_());
+   private void renderEntity(Entity p_109518_, me.alphamode.mclong.math.BigDecimal p_109519_, me.alphamode.mclong.math.BigDecimal p_109520_, me.alphamode.mclong.math.BigDecimal p_109521_, float p_109522_, PoseStack p_109523_, MultiBufferSource p_109524_) {
+      var lerp = me.alphamode.mclong.math.BigDecimal.valueOf(p_109522_);
+      me.alphamode.mclong.math.BigDecimal d0 = Mth.lerp(lerp, p_109518_.f_19790_, p_109518_.getBigX());
+      me.alphamode.mclong.math.BigDecimal d1 = Mth.lerp(lerp, p_109518_.f_19791_, p_109518_.getBigY());
+      me.alphamode.mclong.math.BigDecimal d2 = Mth.lerp(lerp, p_109518_.f_19792_, p_109518_.getBigZ());
       float f = Mth.m_14179_(p_109522_, p_109518_.f_19859_, p_109518_.m_146908_());
-      this.f_109463_.m_114384_(p_109518_, d0 - p_109519_, d1 - p_109520_, d2 - p_109521_, f, p_109522_, p_109523_, p_109524_, this.f_109463_.m_114394_(p_109518_, p_109522_));
+      this.f_109463_.m_114384_(p_109518_, d0.subtract(p_109519_).doubleValue(), d1.subtract(p_109520_).doubleValue(), d2.subtract(p_109521_).doubleValue(), f, p_109522_, p_109523_, p_109524_, this.f_109463_.m_114394_(p_109518_, p_109522_));
    }
 
-   private void m_172993_(RenderType p_172994_, PoseStack p_172995_, double p_172996_, double p_172997_, double p_172998_, Matrix4f p_254039_) {
+   private void renderChunkLayer(RenderType p_172994_, PoseStack p_172995_, me.alphamode.mclong.math.BigDecimal p_172996_, me.alphamode.mclong.math.BigDecimal p_172997_, me.alphamode.mclong.math.BigDecimal p_172998_, Matrix4f p_254039_) {
       RenderSystem.assertOnRenderThread();
       p_172994_.m_110185_();
       if (p_172994_ == RenderType.m_110466_()) {
          this.f_109461_.m_91307_().m_6180_("translucent_sort");
-         double d0 = p_172996_ - this.f_109445_;
-         double d1 = p_172997_ - this.f_109446_;
-         double d2 = p_172998_ - this.f_109447_;
-         if (d0 * d0 + d1 * d1 + d2 * d2 > 1.0D) {
-            int j = SectionPos.m_175552_(p_172996_);
-            int k = SectionPos.m_175552_(p_172997_);
-            int l = SectionPos.m_175552_(p_172998_);
-            boolean flag = j != SectionPos.m_175552_(this.f_109445_) || l != SectionPos.m_175552_(this.f_109447_) || k != SectionPos.m_175552_(this.f_109446_);
+         me.alphamode.mclong.math.BigDecimal d0 = p_172996_.subtract(this.f_109445_);
+         me.alphamode.mclong.math.BigDecimal d1 = p_172997_.subtract(this.f_109446_);
+         me.alphamode.mclong.math.BigDecimal d2 = p_172998_.subtract(this.f_109447_);
+         if (d0.multiply(d0).add(d1.multiply(d1)).add(d2.multiply(d2)).compareTo(me.alphamode.mclong.math.BigDecimal.ONE) > 0) {
+            me.alphamode.mclong.math.BigInteger j = SectionPos.posToSectionCoord(p_172996_);
+            me.alphamode.mclong.math.BigInteger k = SectionPos.posToSectionCoord(p_172997_);
+            me.alphamode.mclong.math.BigInteger l = SectionPos.posToSectionCoord(p_172998_);
+            boolean flag = !j.equals(SectionPos.posToSectionCoord(this.f_109445_)) || !l.equals(SectionPos.posToSectionCoord(this.f_109447_)) || !k.equals(SectionPos.posToSectionCoord(this.f_109446_));
             this.f_109445_ = p_172996_;
             this.f_109446_ = p_172997_;
             this.f_109447_ = p_172998_;
             int i1 = 0;
 
             for(LevelRenderer.RenderChunkInfo levelrenderer$renderchunkinfo : this.f_194297_) {
-               if (i1 < 15 && (flag || levelrenderer$renderchunkinfo.m_274540_(j, k, l)) && levelrenderer$renderchunkinfo.f_109839_.m_112809_(p_172994_, this.f_109436_)) {
+               if (i1 < 15 && (flag || levelrenderer$renderchunkinfo.isAxisAlignedWith(j, k, l)) && levelrenderer$renderchunkinfo.f_109839_.m_112809_(p_172994_, this.f_109436_)) {
                   ++i1;
                }
             }
@@ -1511,7 +_,7 @@
             VertexBuffer vertexbuffer = chunkrenderdispatcher$renderchunk.m_112807_(p_172994_);
             BlockPos blockpos = chunkrenderdispatcher$renderchunk.m_112839_();
             if (uniform != null) {
-               uniform.m_5889_((float)((double)blockpos.m_123341_() - p_172996_), (float)((double)blockpos.m_123342_() - p_172997_), (float)((double)blockpos.m_123343_() - p_172998_));
+               uniform.m_5889_(new me.alphamode.mclong.math.BigDecimal(blockpos.getBigX()).subtract(p_172996_).floatValue(), new me.alphamode.mclong.math.BigDecimal(blockpos.getBigY()).subtract(p_172997_).floatValue(), new me.alphamode.mclong.math.BigDecimal(blockpos.getBigZ()).subtract(p_172998_).floatValue());
                uniform.m_85633_();
             }
 
@@ -1532,15 +_,15 @@
 
    private void m_269240_(PoseStack p_271014_, MultiBufferSource p_270107_, Camera p_270483_) {
       if (this.f_109461_.f_90978_ || this.f_109461_.f_90979_) {
-         double d0 = p_270483_.m_90583_().m_7096_();
-         double d1 = p_270483_.m_90583_().m_7098_();
-         double d2 = p_270483_.m_90583_().m_7094_();
+         me.alphamode.mclong.math.BigDecimal d0 = p_270483_.m_90583_().getX();
+         me.alphamode.mclong.math.BigDecimal d1 = p_270483_.m_90583_().getY();
+         me.alphamode.mclong.math.BigDecimal d2 = p_270483_.m_90583_().getZ();
 
          for(LevelRenderer.RenderChunkInfo levelrenderer$renderchunkinfo : this.f_194297_) {
             ChunkRenderDispatcher.RenderChunk chunkrenderdispatcher$renderchunk = levelrenderer$renderchunkinfo.f_109839_;
             BlockPos blockpos = chunkrenderdispatcher$renderchunk.m_112839_();
             p_271014_.m_85836_();
-            p_271014_.m_85837_((double)blockpos.m_123341_() - d0, (double)blockpos.m_123342_() - d1, (double)blockpos.m_123343_() - d2);
+            p_271014_.m_85837_(blockpos.getBigDecX().subtract(d0).doubleValue(), blockpos.getBigDecY().subtract(d1).doubleValue(), blockpos.getBigDecZ().subtract(d2).doubleValue());
             Matrix4f matrix4f = p_271014_.m_85850_().m_252922_();
             if (this.f_109461_.f_90978_) {
                VertexConsumer vertexconsumer1 = p_270107_.m_6299_(RenderType.m_110504_());
@@ -1610,7 +_,7 @@
 
       if (this.f_109442_ != null) {
          p_271014_.m_85836_();
-         p_271014_.m_252880_((float)(this.f_109444_.x - p_270483_.m_90583_().f_82479_), (float)(this.f_109444_.y - p_270483_.m_90583_().f_82480_), (float)(this.f_109444_.z - p_270483_.m_90583_().f_82481_));
+         p_271014_.m_252880_(this.f_109444_.x.subtract(p_270483_.m_90583_().getX()).floatValue(), this.f_109444_.y.subtract(p_270483_.m_90583_().getY()).floatValue(), this.f_109444_.z.subtract(p_270483_.m_90583_().getZ()).floatValue());
          Matrix4f matrix4f1 = p_271014_.m_85850_().m_252922_();
          VertexConsumer vertexconsumer = p_270107_.m_6299_(RenderType.m_269166_());
          this.m_269092_(vertexconsumer, matrix4f1, 0, 1, 2, 3, 0, 1, 1);
@@ -1687,7 +_,7 @@
    }
 
    private void m_109765_(BlockDestructionProgress p_109766_) {
-      long i = p_109766_.m_139985_().m_121878_();
+      BlockPos i = p_109766_.m_139985_();
       Set<BlockDestructionProgress> set = this.f_109409_.get(i);
       set.remove(p_109766_);
       if (set.isEmpty()) {
@@ -1749,9 +_,9 @@
                this.m_109780_(p_202424_);
             } else if (this.f_109461_.f_91073_.m_104583_().m_108883_() == DimensionSpecialEffects.SkyType.NORMAL) {
                Vec3 vec3 = this.f_109465_.m_171660_(this.f_109461_.f_91063_.m_109153_().m_90583_(), p_202426_);
-               float f = (float)vec3.f_82479_;
-               float f1 = (float)vec3.f_82480_;
-               float f2 = (float)vec3.f_82481_;
+               float f = (float)vec3.m_7096_();
+               float f1 = (float)vec3.m_7098_();
+               float f2 = (float)vec3.m_7094_();
                FogRenderer.m_109036_();
                BufferBuilder bufferbuilder = Tesselator.m_85913_().m_85915_();
                RenderSystem.depthMask(false);
@@ -1835,7 +_,7 @@
                RenderSystem.defaultBlendFunc();
                p_202424_.m_85849_();
                RenderSystem.setShaderColor(0.0F, 0.0F, 0.0F, 1.0F);
-               double d0 = this.f_109461_.f_91074_.m_20299_(p_202426_).f_82480_ - this.f_109465_.m_6106_().m_171687_(this.f_109465_);
+               double d0 = this.f_109461_.f_91074_.m_20299_(p_202426_).m_7098_() - this.f_109465_.m_6106_().m_171687_(this.f_109465_);
                if (d0 < 0.0D) {
                   p_202424_.m_85836_();
                   p_202424_.m_252880_(0.0F, 12.0F, 0.0F);
@@ -1861,7 +_,7 @@
       }
    }
 
-   public void m_253054_(PoseStack p_254145_, Matrix4f p_254537_, float p_254364_, double p_253843_, double p_253663_, double p_253795_) {
+   public void renderClouds(PoseStack p_254145_, Matrix4f p_254537_, float p_254364_, me.alphamode.mclong.math.BigDecimal p_253843_, me.alphamode.mclong.math.BigDecimal p_253663_, me.alphamode.mclong.math.BigDecimal p_253795_) {
       float f = this.f_109465_.m_104583_().m_108871_();
       if (!Float.isNaN(f)) {
          RenderSystem.disableCull();
@@ -1873,19 +_,19 @@
          float f2 = 4.0F;
          double d0 = 2.0E-4D;
          double d1 = (double)(((float)this.f_109477_ + p_254364_) * 0.03F);
-         double d2 = (p_253843_ + d1) / 12.0D;
-         double d3 = (double)(f - (float)p_253663_ + 0.33F);
-         double d4 = p_253795_ / 12.0D + (double)0.33F;
-         d2 -= (double)(Mth.m_14107_(d2 / 2048.0D) * 2048);
-         d4 -= (double)(Mth.m_14107_(d4 / 2048.0D) * 2048);
-         float f3 = (float)(d2 - (double)Mth.m_14107_(d2));
-         float f4 = (float)(d3 / 4.0D - (double)Mth.m_14107_(d3 / 4.0D)) * 4.0F;
-         float f5 = (float)(d4 - (double)Mth.m_14107_(d4));
+         me.alphamode.mclong.math.BigDecimal d2 = (p_253843_.add(d1)).divide(me.alphamode.mclong.core.BigConstants.TWELVE, java.math.RoundingMode.HALF_UP);
+         me.alphamode.mclong.math.BigDecimal d3 = (me.alphamode.mclong.math.BigDecimal.valueOf(f).subtract(p_253663_.add(0.33F)));
+         me.alphamode.mclong.math.BigDecimal d4 = p_253795_.divide(me.alphamode.mclong.core.BigConstants.TWELVE, java.math.RoundingMode.HALF_UP).add(0.33F);
+         d2 = d2.subtract((d2.divide(2048.0D).setScale(0, java.math.RoundingMode.FLOOR).multiply(2048)));
+         d4 = d4.subtract((d4.divide(2048.0D).setScale(0, java.math.RoundingMode.FLOOR).multiply(2048)));
+         float f3 = (float)(d2.subtract(Mth.lfloor(d2).toBigDecimal())).floatValue();
+         float f4 = (float)(d3.divide(me.alphamode.mclong.core.BigConstants.FOUR).subtract(Mth.lfloor(d3.divide(me.alphamode.mclong.core.BigConstants.FOUR, java.math.RoundingMode.HALF_UP)).toBigDecimal())).multiply(me.alphamode.mclong.core.BigConstants.FOUR).floatValue();
+         float f5 = (float)(d4.subtract(Mth.lfloor(d4).toBigDecimal())).floatValue();
          Vec3 vec3 = this.f_109465_.m_104808_(p_254364_);
-         int i = (int)Math.floor(d2);
-         int j = (int)Math.floor(d3 / 4.0D);
-         int k = (int)Math.floor(d4);
-         if (i != this.f_109430_ || j != this.f_109431_ || k != this.f_109432_ || this.f_109461_.f_91066_.m_92174_() != this.f_109435_ || this.f_109433_.m_82557_(vec3) > 2.0E-4D) {
+         me.alphamode.mclong.math.BigInteger i = d2.setScale(0, java.math.RoundingMode.FLOOR).toBigInteger();
+         me.alphamode.mclong.math.BigInteger j = d3.divide(me.alphamode.mclong.core.BigConstants.FOUR, java.math.RoundingMode.HALF_UP).setScale(0, java.math.RoundingMode.FLOOR).toBigInteger();
+         me.alphamode.mclong.math.BigInteger k = d4.setScale(0, java.math.RoundingMode.FLOOR).toBigInteger();
+         if (!i.equals(this.f_109430_) || !j.equals(this.f_109431_) || !k.equals(this.f_109432_) || this.f_109461_.f_91066_.m_92174_() != this.f_109435_ || this.f_109433_.m_82557_(vec3) > 2.0E-4D) {
             this.f_109430_ = i;
             this.f_109431_ = j;
             this.f_109432_ = k;
@@ -1902,7 +_,7 @@
             }
 
             this.f_109475_ = new VertexBuffer(VertexBuffer.Usage.STATIC);
-            BufferBuilder.RenderedBuffer bufferbuilder$renderedbuffer = this.m_234261_(bufferbuilder, d2, d3, d4, vec3);
+            BufferBuilder.RenderedBuffer bufferbuilder$renderedbuffer = this.m_234261_(bufferbuilder, d2.doubleValue(), d3.doubleValue(), d4.doubleValue(), vec3);
             this.f_109475_.m_85921_();
             this.f_109475_.m_231221_(bufferbuilder$renderedbuffer);
             VertexBuffer.m_85931_();
@@ -1947,9 +_,9 @@
       float f2 = 9.765625E-4F;
       float f3 = (float)Mth.m_14107_(p_234263_) * 0.00390625F;
       float f4 = (float)Mth.m_14107_(p_234265_) * 0.00390625F;
-      float f5 = (float)p_234266_.f_82479_;
-      float f6 = (float)p_234266_.f_82480_;
-      float f7 = (float)p_234266_.f_82481_;
+      float f5 = (float)p_234266_.m_7096_();
+      float f6 = (float)p_234266_.m_7098_();
+      float f7 = (float)p_234266_.m_7094_();
       float f8 = f5 * 0.9F;
       float f9 = f6 * 0.9F;
       float f10 = f7 * 0.9F;
@@ -2048,8 +_,8 @@
          if (chunkrenderdispatcher$renderchunk.m_112841_() && levellightengine.m_284439_(sectionpos)) {
             boolean flag = false;
             if (this.f_109461_.f_91066_.m_232080_().m_231551_() == PrioritizeChunkUpdates.NEARBY) {
-               BlockPos blockpos1 = chunkrenderdispatcher$renderchunk.m_112839_().m_7918_(8, 8, 8);
-               flag = blockpos1.m_123331_(blockpos) < 768.0D || chunkrenderdispatcher$renderchunk.m_112842_();
+               BlockPos blockpos1 = chunkrenderdispatcher$renderchunk.m_112839_().offset(8, 8, 8);
+               flag = blockpos1.distSqr(blockpos) < 768.0D || chunkrenderdispatcher$renderchunk.m_112842_();
             } else if (this.f_109461_.f_91066_.m_232080_().m_231551_() == PrioritizeChunkUpdates.PLAYER_AFFECTED) {
                flag = chunkrenderdispatcher$renderchunk.m_112842_();
             }
@@ -2081,12 +_,12 @@
       BufferBuilder bufferbuilder = Tesselator.m_85913_().m_85915_();
       WorldBorder worldborder = this.f_109465_.m_6857_();
       double d0 = (double)(this.f_109461_.f_91066_.m_193772_() * 16);
-      if (!(p_173013_.m_90583_().f_82479_ < worldborder.m_61957_() - d0) || !(p_173013_.m_90583_().f_82479_ > worldborder.m_61955_() + d0) || !(p_173013_.m_90583_().f_82481_ < worldborder.m_61958_() - d0) || !(p_173013_.m_90583_().f_82481_ > worldborder.m_61956_() + d0)) {
-         double d1 = 1.0D - worldborder.m_61941_(p_173013_.m_90583_().f_82479_, p_173013_.m_90583_().f_82481_) / d0;
+      if (!(p_173013_.m_90583_().m_7096_() < worldborder.m_61957_() - d0) || !(p_173013_.m_90583_().m_7096_() > worldborder.m_61955_() + d0) || !(p_173013_.m_90583_().m_7094_() < worldborder.m_61958_() - d0) || !(p_173013_.m_90583_().m_7094_() > worldborder.m_61956_() + d0)) {
+         double d1 = 1.0D - worldborder.m_61941_(p_173013_.m_90583_().m_7096_(), p_173013_.m_90583_().m_7094_()) / d0;
          d1 = Math.pow(d1, 4.0D);
          d1 = Mth.m_14008_(d1, 0.0D, 1.0D);
-         double d2 = p_173013_.m_90583_().f_82479_;
-         double d3 = p_173013_.m_90583_().f_82481_;
+         double d2 = p_173013_.m_90583_().m_7096_();
+         double d3 = p_173013_.m_90583_().m_7094_();
          double d4 = (double)this.f_109461_.f_91063_.m_172790_();
          RenderSystem.enableBlend();
          RenderSystem.enableDepthTest();
@@ -2106,11 +_,11 @@
          RenderSystem.enablePolygonOffset();
          RenderSystem.disableCull();
          float f3 = (float)(Util.m_137550_() % 3000L) / 3000.0F;
-         float f4 = (float)(-Mth.m_14185_(p_173013_.m_90583_().f_82480_ * 0.5D));
+         float f4 = (float)(-Mth.m_14185_(p_173013_.m_90583_().m_7098_() * 0.5D));
          float f5 = f4 + (float)d4;
          bufferbuilder.m_166779_(VertexFormat.Mode.QUADS, DefaultVertexFormat.f_85817_);
-         double d5 = Math.max((double)Mth.m_14107_(d3 - d0), worldborder.m_61956_());
-         double d6 = Math.min((double)Mth.m_14165_(d3 + d0), worldborder.m_61958_());
+         double d5 = Math.max((double)Mth.m_14134_(d3 - d0), worldborder.m_61956_());
+         double d6 = Math.min((double)Mth.lceil(d3 + d0), worldborder.m_61958_());
          float f6 = (float)(Mth.m_14107_(d5) & 1) * 0.5F;
          if (d2 > worldborder.m_61957_() - d0) {
             float f7 = f6;
@@ -2140,8 +_,8 @@
             }
          }
 
-         d5 = Math.max((double)Mth.m_14107_(d2 - d0), worldborder.m_61955_());
-         d6 = Math.min((double)Mth.m_14165_(d2 + d0), worldborder.m_61957_());
+         d5 = Math.max((double)Mth.m_14134_(d2 - d0), worldborder.m_61955_());
+         d6 = Math.min((double)Mth.lceil(d2 + d0), worldborder.m_61957_());
          f6 = (float)(Mth.m_14107_(d5) & 1) * 0.5F;
          if (d3 > worldborder.m_61958_() - d0) {
             float f10 = f6;
@@ -2184,8 +_,8 @@
       }
    }
 
-   private void m_109637_(PoseStack p_109638_, VertexConsumer p_109639_, Entity p_109640_, double p_109641_, double p_109642_, double p_109643_, BlockPos p_109644_, BlockState p_109645_) {
-      m_109782_(p_109638_, p_109639_, p_109645_.m_60651_(this.f_109465_, p_109644_, CollisionContext.m_82750_(p_109640_)), (double)p_109644_.m_123341_() - p_109641_, (double)p_109644_.m_123342_() - p_109642_, (double)p_109644_.m_123343_() - p_109643_, 0.0F, 0.0F, 0.0F, 0.4F);
+   private void renderHitOutline(PoseStack p_109638_, VertexConsumer p_109639_, Entity p_109640_, me.alphamode.mclong.math.BigDecimal p_109641_, me.alphamode.mclong.math.BigDecimal p_109642_, me.alphamode.mclong.math.BigDecimal p_109643_, BlockPos p_109644_, BlockState p_109645_) {
+      renderShape(p_109638_, p_109639_, p_109645_.m_60651_(this.f_109465_, p_109644_, CollisionContext.m_82750_(p_109640_)), new me.alphamode.mclong.math.BigDecimal(p_109644_.getBigX()).subtract(p_109641_), new me.alphamode.mclong.math.BigDecimal(p_109644_.getBigY()).subtract(p_109642_), new me.alphamode.mclong.math.BigDecimal(p_109644_.getBigZ()).subtract(p_109643_), 0.0F, 0.0F, 0.0F, 0.4F);
    }
 
    private static Vec3 m_285956_(float p_286899_) {
@@ -2224,38 +_,38 @@
       Vec3 vec31 = m_285956_((p_286590_ + 0.33333334F) % 1.0F).m_82490_((double)p_286536_);
       Vec3 vec32 = m_285956_((p_286590_ + 0.6666667F) % 1.0F).m_82490_((double)p_286318_);
       Vec3 vec33 = vec3.m_82549_(vec31).m_82549_(vec32);
-      double d0 = Math.max(Math.max(1.0D, vec33.f_82479_), Math.max(vec33.f_82480_, vec33.f_82481_));
-      return new Vec3(vec33.f_82479_ / d0, vec33.f_82480_ / d0, vec33.f_82481_ / d0);
+      double d0 = Math.max(Math.max(1.0D, vec33.m_7096_()), Math.max(vec33.m_7098_(), vec33.m_7094_()));
+      return new Vec3(vec33.m_7096_() / d0, vec33.m_7098_() / d0, vec33.m_7094_() / d0);
    }
 
-   public static void m_285900_(PoseStack p_286791_, VertexConsumer p_286416_, VoxelShape p_286863_, double p_286432_, double p_286836_, double p_286774_, float p_286612_, float p_286516_, float p_286787_, float p_286300_, boolean p_286443_) {
+   public static void renderVoxelShape(PoseStack p_286791_, VertexConsumer p_286416_, VoxelShape p_286863_, me.alphamode.mclong.math.BigDecimal p_286432_, me.alphamode.mclong.math.BigDecimal p_286836_, me.alphamode.mclong.math.BigDecimal p_286774_, float p_286612_, float p_286516_, float p_286787_, float p_286300_, boolean p_286443_) {
       List<AABB> list = p_286863_.m_83299_();
       if (!list.isEmpty()) {
          int i = p_286443_ ? list.size() : list.size() * 8;
-         m_109782_(p_286791_, p_286416_, Shapes.m_83064_(list.get(0)), p_286432_, p_286836_, p_286774_, p_286612_, p_286516_, p_286787_, p_286300_);
+         renderShape(p_286791_, p_286416_, Shapes.m_83064_(list.get(0)), p_286432_, p_286836_, p_286774_, p_286612_, p_286516_, p_286787_, p_286300_);
 
          for(int j = 1; j < list.size(); ++j) {
             AABB aabb = list.get(j);
             float f = (float)j / (float)i;
             Vec3 vec3 = m_285739_(p_286612_, p_286516_, p_286787_, f);
-            m_109782_(p_286791_, p_286416_, Shapes.m_83064_(aabb), p_286432_, p_286836_, p_286774_, (float)vec3.f_82479_, (float)vec3.f_82480_, (float)vec3.f_82481_, p_286300_);
+            renderShape(p_286791_, p_286416_, Shapes.m_83064_(aabb), p_286432_, p_286836_, p_286774_, (float)vec3.m_7096_(), (float)vec3.m_7098_(), (float)vec3.m_7094_(), p_286300_);
          }
 
       }
    }
 
-   private static void m_109782_(PoseStack p_109783_, VertexConsumer p_109784_, VoxelShape p_109785_, double p_109786_, double p_109787_, double p_109788_, float p_109789_, float p_109790_, float p_109791_, float p_109792_) {
+   private static void renderShape(PoseStack p_109783_, VertexConsumer p_109784_, VoxelShape p_109785_, me.alphamode.mclong.math.BigDecimal p_109786_, me.alphamode.mclong.math.BigDecimal p_109787_, me.alphamode.mclong.math.BigDecimal p_109788_, float p_109789_, float p_109790_, float p_109791_, float p_109792_) {
       PoseStack.Pose posestack$pose = p_109783_.m_85850_();
-      p_109785_.m_83224_((p_234280_, p_234281_, p_234282_, p_234283_, p_234284_, p_234285_) -> {
-         float f = (float)(p_234283_ - p_234280_);
-         float f1 = (float)(p_234284_ - p_234281_);
-         float f2 = (float)(p_234285_ - p_234282_);
+      p_109785_.forAllEdges((p_234280_, p_234281_, p_234282_, p_234283_, p_234284_, p_234285_) -> {
+         float f = p_234283_.subtract(p_234280_).floatValue();
+         float f1 = p_234284_.subtract(p_234281_).floatValue();
+         float f2 = p_234285_.subtract(p_234282_).floatValue();
          float f3 = Mth.m_14116_(f * f + f1 * f1 + f2 * f2);
          f /= f3;
          f1 /= f3;
          f2 /= f3;
-         p_109784_.m_252986_(posestack$pose.m_252922_(), (float)(p_234280_ + p_109786_), (float)(p_234281_ + p_109787_), (float)(p_234282_ + p_109788_)).m_85950_(p_109789_, p_109790_, p_109791_, p_109792_).m_252939_(posestack$pose.m_252943_(), f, f1, f2).m_5752_();
-         p_109784_.m_252986_(posestack$pose.m_252922_(), (float)(p_234283_ + p_109786_), (float)(p_234284_ + p_109787_), (float)(p_234285_ + p_109788_)).m_85950_(p_109789_, p_109790_, p_109791_, p_109792_).m_252939_(posestack$pose.m_252943_(), f, f1, f2).m_5752_();
+         p_109784_.m_252986_(posestack$pose.m_252922_(), (float)(p_234280_.add(p_109786_).floatValue()), (float)(p_234281_.add(p_109787_).floatValue()), (float)(p_234282_.add(p_109788_).floatValue())).m_85950_(p_109789_, p_109790_, p_109791_, p_109792_).m_252939_(posestack$pose.m_252943_(), f, f1, f2).m_5752_();
+         p_109784_.m_252986_(posestack$pose.m_252922_(), (float)(p_234283_.add(p_109786_).floatValue()), (float)(p_234284_.add(p_109787_).floatValue()), (float)(p_234285_.add(p_109788_).floatValue())).m_85950_(p_109789_, p_109790_, p_109791_, p_109792_).m_252939_(posestack$pose.m_252943_(), f, f1, f2).m_5752_();
       });
    }
 
@@ -2264,7 +_,7 @@
    }
 
    public static void m_109646_(PoseStack p_109647_, VertexConsumer p_109648_, AABB p_109649_, float p_109650_, float p_109651_, float p_109652_, float p_109653_) {
-      m_109621_(p_109647_, p_109648_, p_109649_.f_82288_, p_109649_.f_82289_, p_109649_.f_82290_, p_109649_.f_82291_, p_109649_.f_82292_, p_109649_.f_82293_, p_109650_, p_109651_, p_109652_, p_109653_, p_109650_, p_109651_, p_109652_);
+      m_109621_(p_109647_, p_109648_, p_109649_.f_82288_.doubleValue(), p_109649_.f_82289_.doubleValue(), p_109649_.f_82290_.doubleValue(), p_109649_.f_82291_.doubleValue(), p_109649_.f_82292_.doubleValue(), p_109649_.f_82293_.doubleValue(), p_109650_, p_109651_, p_109652_, p_109653_, p_109650_, p_109651_, p_109652_);
    }
 
    public static void m_109608_(PoseStack p_109609_, VertexConsumer p_109610_, double p_109611_, double p_109612_, double p_109613_, double p_109614_, double p_109615_, double p_109616_, float p_109617_, float p_109618_, float p_109619_, float p_109620_) {
@@ -2349,21 +_,21 @@
    }
 
    private void m_109732_(BlockPos p_109733_, boolean p_109734_) {
-      for(int i = p_109733_.m_123343_() - 1; i <= p_109733_.m_123343_() + 1; ++i) {
-         for(int j = p_109733_.m_123341_() - 1; j <= p_109733_.m_123341_() + 1; ++j) {
-            for(int k = p_109733_.m_123342_() - 1; k <= p_109733_.m_123342_() + 1; ++k) {
-               this.m_109501_(SectionPos.m_123171_(j), SectionPos.m_123171_(k), SectionPos.m_123171_(i), p_109734_);
+      for(me.alphamode.mclong.math.BigInteger i = p_109733_.getBigZ().subtract(me.alphamode.mclong.math.BigInteger.ONE); i.compareTo(p_109733_.getBigZ().add(me.alphamode.mclong.math.BigInteger.ONE)) <= 0; i = i.add()) {
+         for(me.alphamode.mclong.math.BigInteger j = p_109733_.getBigX().subtract(me.alphamode.mclong.math.BigInteger.ONE); j.compareTo(p_109733_.getBigX().add(me.alphamode.mclong.math.BigInteger.ONE)) <= 0; j = j.add()) {
+            for(me.alphamode.mclong.math.BigInteger k = p_109733_.getBigY().subtract(me.alphamode.mclong.math.BigInteger.ONE); k.compareTo(p_109733_.getBigY().add(me.alphamode.mclong.math.BigInteger.ONE)) <= 0; k = k.add()) {
+               this.setSectionDirty(SectionPos.blockToSectionCoord(j), SectionPos.blockToSectionCoord(k), SectionPos.blockToSectionCoord(i), p_109734_);
             }
          }
       }
 
    }
 
-   public void m_109494_(int p_109495_, int p_109496_, int p_109497_, int p_109498_, int p_109499_, int p_109500_) {
-      for(int i = p_109497_ - 1; i <= p_109500_ + 1; ++i) {
-         for(int j = p_109495_ - 1; j <= p_109498_ + 1; ++j) {
-            for(int k = p_109496_ - 1; k <= p_109499_ + 1; ++k) {
-               this.m_109770_(SectionPos.m_123171_(j), SectionPos.m_123171_(k), SectionPos.m_123171_(i));
+   public void setBlocksDirty(me.alphamode.mclong.math.BigInteger p_109495_, me.alphamode.mclong.math.BigInteger p_109496_, me.alphamode.mclong.math.BigInteger p_109497_, me.alphamode.mclong.math.BigInteger p_109498_, me.alphamode.mclong.math.BigInteger p_109499_, me.alphamode.mclong.math.BigInteger p_109500_) {
+      for(me.alphamode.mclong.math.BigInteger i = p_109497_.subtract(); i.compareTo(p_109500_.add()) <= 0; i = i.add()) {
+         for(me.alphamode.mclong.math.BigInteger j = p_109495_.subtract(); j.compareTo(p_109498_.add()) <= 0; j = j.add()) {
+            for(me.alphamode.mclong.math.BigInteger k = p_109496_.subtract(); k.compareTo(p_109499_.add()) <= 0; k = k.add()) {
+               this.setSectionDirty(SectionPos.blockToSectionCoord(j), SectionPos.blockToSectionCoord(k), SectionPos.blockToSectionCoord(i));
             }
          }
       }
@@ -2372,28 +_,28 @@
 
    public void m_109721_(BlockPos p_109722_, BlockState p_109723_, BlockState p_109724_) {
       if (this.f_109461_.m_91304_().m_119415_(p_109723_, p_109724_)) {
-         this.m_109494_(p_109722_.m_123341_(), p_109722_.m_123342_(), p_109722_.m_123343_(), p_109722_.m_123341_(), p_109722_.m_123342_(), p_109722_.m_123343_());
+         this.setBlocksDirty(p_109722_.getBigX(), p_109722_.getBigY(), p_109722_.getBigZ(), p_109722_.getBigX(), p_109722_.getBigY(), p_109722_.getBigZ());
       }
 
    }
 
-   public void m_109490_(int p_109491_, int p_109492_, int p_109493_) {
-      for(int i = p_109493_ - 1; i <= p_109493_ + 1; ++i) {
-         for(int j = p_109491_ - 1; j <= p_109491_ + 1; ++j) {
-            for(int k = p_109492_ - 1; k <= p_109492_ + 1; ++k) {
-               this.m_109770_(j, k, i);
+   public void setSectionDirtyWithNeighbors(me.alphamode.mclong.math.BigInteger p_109491_, me.alphamode.mclong.math.BigInteger p_109492_, me.alphamode.mclong.math.BigInteger p_109493_) {
+      for(me.alphamode.mclong.math.BigInteger i = p_109493_.subtract(); i.compareTo(p_109493_.add()) <= 0; i = i.add()) {
+         for(me.alphamode.mclong.math.BigInteger j = p_109491_.subtract(); j.compareTo(p_109491_.add()) <= 0; j = j.add()) {
+            for(me.alphamode.mclong.math.BigInteger k = p_109492_.subtract(); k.compareTo(p_109492_.add()) <= 0; k = k.add()) {
+               this.setSectionDirty(j, k, i);
             }
          }
       }
 
    }
 
-   public void m_109770_(int p_109771_, int p_109772_, int p_109773_) {
-      this.m_109501_(p_109771_, p_109772_, p_109773_, false);
+   public void setSectionDirty(me.alphamode.mclong.math.BigInteger p_109771_, me.alphamode.mclong.math.BigInteger p_109772_, me.alphamode.mclong.math.BigInteger p_109773_) {
+      this.setSectionDirty(p_109771_, p_109772_, p_109773_, false);
    }
 
-   private void m_109501_(int p_109502_, int p_109503_, int p_109504_, boolean p_109505_) {
-      this.f_109469_.m_110859_(p_109502_, p_109503_, p_109504_, p_109505_);
+   private void setSectionDirty(me.alphamode.mclong.math.BigInteger p_109502_, me.alphamode.mclong.math.BigInteger p_109503_, me.alphamode.mclong.math.BigInteger p_109504_, boolean p_109505_) {
+      this.f_109469_.setDirty(p_109502_, p_109503_, p_109504_, p_109505_);
    }
 
    public void m_109514_(@Nullable SoundEvent p_109515_, BlockPos p_109516_) {
@@ -2409,7 +_,7 @@
             this.f_109461_.f_91065_.m_93055_(recorditem.m_43050_());
          }
 
-         SoundInstance simplesoundinstance = SimpleSoundInstance.m_246411_(p_109515_, Vec3.m_82512_(p_109516_));
+         SoundInstance simplesoundinstance = SimpleSoundInstance.m_246411_(p_109515_, Vec3.atCenterOf(p_109516_));
          this.f_109410_.put(p_109516_, simplesoundinstance);
          this.f_109461_.m_91106_().m_120367_(simplesoundinstance);
       }
@@ -2424,44 +_,44 @@
 
    }
 
-   public void m_109743_(ParticleOptions p_109744_, boolean p_109745_, double p_109746_, double p_109747_, double p_109748_, double p_109749_, double p_109750_, double p_109751_) {
-      this.m_109752_(p_109744_, p_109745_, false, p_109746_, p_109747_, p_109748_, p_109749_, p_109750_, p_109751_);
+   public void addParticle(ParticleOptions p_109744_, boolean p_109745_, me.alphamode.mclong.math.BigDecimal p_109746_, me.alphamode.mclong.math.BigDecimal p_109747_, me.alphamode.mclong.math.BigDecimal p_109748_, double p_109749_, double p_109750_, double p_109751_) {
+      this.addParticle(p_109744_, p_109745_, false, p_109746_, p_109747_, p_109748_, p_109749_, p_109750_, p_109751_);
    }
 
-   public void m_109752_(ParticleOptions p_109753_, boolean p_109754_, boolean p_109755_, double p_109756_, double p_109757_, double p_109758_, double p_109759_, double p_109760_, double p_109761_) {
+   public void addParticle(ParticleOptions p_109753_, boolean p_109754_, boolean p_109755_, me.alphamode.mclong.math.BigDecimal p_109756_, me.alphamode.mclong.math.BigDecimal p_109757_, me.alphamode.mclong.math.BigDecimal p_109758_, double p_109759_, double p_109760_, double p_109761_) {
       try {
-         this.m_109804_(p_109753_, p_109754_, p_109755_, p_109756_, p_109757_, p_109758_, p_109759_, p_109760_, p_109761_);
+         this.addParticleInternal(p_109753_, p_109754_, p_109755_, p_109756_, p_109757_, p_109758_, p_109759_, p_109760_, p_109761_);
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.m_127521_(throwable, "Exception while adding particle");
          CrashReportCategory crashreportcategory = crashreport.m_127514_("Particle being added");
          crashreportcategory.m_128159_("ID", BuiltInRegistries.f_257034_.m_7981_(p_109753_.m_6012_()));
          crashreportcategory.m_128159_("Parameters", p_109753_.m_5942_());
          crashreportcategory.m_128165_("Position", () -> {
-            return CrashReportCategory.m_178937_(this.f_109465_, p_109756_, p_109757_, p_109758_);
+            return CrashReportCategory.formatLocation(this.f_109465_, p_109756_, p_109757_, p_109758_);
          });
          throw new ReportedException(crashreport);
       }
    }
 
-   private <T extends ParticleOptions> void m_109735_(T p_109736_, double p_109737_, double p_109738_, double p_109739_, double p_109740_, double p_109741_, double p_109742_) {
-      this.m_109743_(p_109736_, p_109736_.m_6012_().m_123742_(), p_109737_, p_109738_, p_109739_, p_109740_, p_109741_, p_109742_);
-   }
-
-   @Nullable
-   private Particle m_109795_(ParticleOptions p_109796_, boolean p_109797_, double p_109798_, double p_109799_, double p_109800_, double p_109801_, double p_109802_, double p_109803_) {
-      return this.m_109804_(p_109796_, p_109797_, false, p_109798_, p_109799_, p_109800_, p_109801_, p_109802_, p_109803_);
-   }
-
-   @Nullable
-   private Particle m_109804_(ParticleOptions p_109805_, boolean p_109806_, boolean p_109807_, double p_109808_, double p_109809_, double p_109810_, double p_109811_, double p_109812_, double p_109813_) {
+   private <T extends ParticleOptions> void addParticle(T p_109736_, me.alphamode.mclong.math.BigDecimal p_109737_, me.alphamode.mclong.math.BigDecimal p_109738_, me.alphamode.mclong.math.BigDecimal p_109739_, double p_109740_, double p_109741_, double p_109742_) {
+      this.addParticle(p_109736_, p_109736_.m_6012_().m_123742_(), p_109737_, p_109738_, p_109739_, p_109740_, p_109741_, p_109742_);
+   }
+
+   @Nullable
+   private Particle addParticleInternal(ParticleOptions p_109796_, boolean p_109797_, me.alphamode.mclong.math.BigDecimal p_109798_, me.alphamode.mclong.math.BigDecimal p_109799_, me.alphamode.mclong.math.BigDecimal p_109800_, double p_109801_, double p_109802_, double p_109803_) {
+      return this.addParticleInternal(p_109796_, p_109797_, false, p_109798_, p_109799_, p_109800_, p_109801_, p_109802_, p_109803_);
+   }
+
+   @Nullable
+   private Particle addParticleInternal(ParticleOptions p_109805_, boolean p_109806_, boolean p_109807_, me.alphamode.mclong.math.BigDecimal p_109808_, me.alphamode.mclong.math.BigDecimal p_109809_, me.alphamode.mclong.math.BigDecimal p_109810_, double p_109811_, double p_109812_, double p_109813_) {
       Camera camera = this.f_109461_.f_91063_.m_109153_();
       ParticleStatus particlestatus = this.m_109767_(p_109807_);
       if (p_109806_) {
-         return this.f_109461_.f_91061_.m_107370_(p_109805_, p_109808_, p_109809_, p_109810_, p_109811_, p_109812_, p_109813_);
-      } else if (camera.m_90583_().m_82531_(p_109808_, p_109809_, p_109810_) > 1024.0D) {
+         return this.f_109461_.f_91061_.createParticle(p_109805_, p_109808_, p_109809_, p_109810_, p_109811_, p_109812_, p_109813_);
+      } else if (camera.m_90583_().distanceToSqr(p_109808_, p_109809_, p_109810_).compareTo(me.alphamode.mclong.math.BigDecimal.valueOf(1024.0D)) > 0) {
          return null;
       } else {
-         return particlestatus == ParticleStatus.MINIMAL ? null : this.f_109461_.f_91061_.m_107370_(p_109805_, p_109808_, p_109809_, p_109810_, p_109811_, p_109812_, p_109813_);
+         return particlestatus == ParticleStatus.MINIMAL ? null : this.f_109461_.f_91061_.createParticle(p_109805_, p_109808_, p_109809_, p_109810_, p_109811_, p_109812_, p_109813_);
       }
    }
 
@@ -2488,25 +_,25 @@
          case 1038:
             Camera camera = this.f_109461_.f_91063_.m_109153_();
             if (camera.m_90593_()) {
-               double d0 = (double)p_109508_.m_123341_() - camera.m_90583_().f_82479_;
-               double d1 = (double)p_109508_.m_123342_() - camera.m_90583_().f_82480_;
-               double d2 = (double)p_109508_.m_123343_() - camera.m_90583_().f_82481_;
-               double d3 = Math.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
-               double d4 = camera.m_90583_().f_82479_;
-               double d5 = camera.m_90583_().f_82480_;
-               double d6 = camera.m_90583_().f_82481_;
-               if (d3 > 0.0D) {
-                  d4 += d0 / d3 * 2.0D;
-                  d5 += d1 / d3 * 2.0D;
-                  d6 += d2 / d3 * 2.0D;
+               me.alphamode.mclong.math.BigDecimal d0 = p_109508_.getBigDecX().subtract(camera.m_90583_().getX());
+               me.alphamode.mclong.math.BigDecimal d1 = p_109508_.getBigDecY().subtract(camera.m_90583_().getY());
+               me.alphamode.mclong.math.BigDecimal d2 = p_109508_.getBigDecZ().subtract(camera.m_90583_().getZ());
+               me.alphamode.mclong.math.BigDecimal d3 = d0.multiply(d0).add(d1.multiply(d1)).add(d2.multiply(d2)).sqrt();
+               me.alphamode.mclong.math.BigDecimal d4 = camera.m_90583_().getX();
+               me.alphamode.mclong.math.BigDecimal d5 = camera.m_90583_().getY();
+               me.alphamode.mclong.math.BigDecimal d6 = camera.m_90583_().getZ();
+               if (d3.compareTo(me.alphamode.mclong.math.BigDecimal.ZERO) > 0) {
+                  d4 = d4.add(d0.divide(d3).multiply(me.alphamode.mclong.core.BigConstants.TWO));
+                  d5 = d5.add(d1.divide(d3).multiply(me.alphamode.mclong.core.BigConstants.TWO));
+                  d6 = d6.add(d2.divide(d3).multiply(me.alphamode.mclong.core.BigConstants.TWO));
                }
 
                if (p_109507_ == 1023) {
-                  this.f_109465_.m_7785_(d4, d5, d6, SoundEvents.f_12563_, SoundSource.HOSTILE, 1.0F, 1.0F, false);
+                  this.f_109465_.playLocalSound(d4, d5, d6, SoundEvents.f_12563_, SoundSource.HOSTILE, 1.0F, 1.0F, false);
                } else if (p_109507_ == 1038) {
-                  this.f_109465_.m_7785_(d4, d5, d6, SoundEvents.f_11860_, SoundSource.HOSTILE, 1.0F, 1.0F, false);
+                  this.f_109465_.playLocalSound(d4, d5, d6, SoundEvents.f_11860_, SoundSource.HOSTILE, 1.0F, 1.0F, false);
                } else {
-                  this.f_109465_.m_7785_(d4, d5, d6, SoundEvents.f_11891_, SoundSource.HOSTILE, 5.0F, 1.0F, false);
+                  this.f_109465_.playLocalSound(d4, d5, d6, SoundEvents.f_11891_, SoundSource.HOSTILE, 5.0F, 1.0F, false);
                }
             }
          default:
@@ -2641,27 +_,27 @@
             this.f_109465_.m_245747_(p_234306_, SoundEvents.f_12031_, SoundSource.BLOCKS, 0.5F, 2.6F + (randomsource.m_188501_() - randomsource.m_188501_()) * 0.8F, false);
 
             for(int j3 = 0; j3 < 8; ++j3) {
-               this.f_109465_.m_7106_(ParticleTypes.f_123755_, (double)p_234306_.m_123341_() + randomsource.m_188500_(), (double)p_234306_.m_123342_() + 1.2D, (double)p_234306_.m_123343_() + randomsource.m_188500_(), 0.0D, 0.0D, 0.0D);
+               this.f_109465_.addParticle(ParticleTypes.f_123755_, p_234306_.getBigDecX().add(randomsource.m_188500_()), p_234306_.getBigDecY().add(1.2D), p_234306_.getBigDecZ().add(randomsource.m_188500_()), 0.0D, 0.0D, 0.0D);
             }
             break;
          case 1502:
             this.f_109465_.m_245747_(p_234306_, SoundEvents.f_12374_, SoundSource.BLOCKS, 0.5F, 2.6F + (randomsource.m_188501_() - randomsource.m_188501_()) * 0.8F, false);
 
             for(int i3 = 0; i3 < 5; ++i3) {
-               double d16 = (double)p_234306_.m_123341_() + randomsource.m_188500_() * 0.6D + 0.2D;
-               double d22 = (double)p_234306_.m_123342_() + randomsource.m_188500_() * 0.6D + 0.2D;
-               double d27 = (double)p_234306_.m_123343_() + randomsource.m_188500_() * 0.6D + 0.2D;
-               this.f_109465_.m_7106_(ParticleTypes.f_123762_, d16, d22, d27, 0.0D, 0.0D, 0.0D);
+               me.alphamode.mclong.math.BigDecimal d16 = p_234306_.getBigDecX().add(randomsource.m_188500_() * 0.6D + 0.2D);
+               me.alphamode.mclong.math.BigDecimal d22 = p_234306_.getBigDecY().add(randomsource.m_188500_() * 0.6D + 0.2D);
+               me.alphamode.mclong.math.BigDecimal d27 = p_234306_.getBigDecZ().add(randomsource.m_188500_() * 0.6D + 0.2D);
+               this.f_109465_.addParticle(ParticleTypes.f_123762_, d16, d22, d27, 0.0D, 0.0D, 0.0D);
             }
             break;
          case 1503:
             this.f_109465_.m_245747_(p_234306_, SoundEvents.f_11859_, SoundSource.BLOCKS, 1.0F, 1.0F, false);
 
             for(int l2 = 0; l2 < 16; ++l2) {
-               double d15 = (double)p_234306_.m_123341_() + (5.0D + randomsource.m_188500_() * 6.0D) / 16.0D;
-               double d21 = (double)p_234306_.m_123342_() + 0.8125D;
-               double d26 = (double)p_234306_.m_123343_() + (5.0D + randomsource.m_188500_() * 6.0D) / 16.0D;
-               this.f_109465_.m_7106_(ParticleTypes.f_123762_, d15, d21, d26, 0.0D, 0.0D, 0.0D);
+               me.alphamode.mclong.math.BigDecimal d15 = p_234306_.getBigDecX().add((5.0D + randomsource.m_188500_() * 6.0D) / 16.0D);
+               me.alphamode.mclong.math.BigDecimal d21 = p_234306_.getBigDecY().add(0.8125D);
+               me.alphamode.mclong.math.BigDecimal d26 = p_234306_.getBigDecZ().add((5.0D + randomsource.m_188500_() * 6.0D) / 16.0D);
+               this.f_109465_.addParticle(ParticleTypes.f_123762_, d15, d21, d26, 0.0D, 0.0D, 0.0D);
             }
             break;
          case 1504:
@@ -2676,19 +_,19 @@
             int j = direction1.m_122429_();
             int i1 = direction1.m_122430_();
             int k1 = direction1.m_122431_();
-            double d10 = (double)p_234306_.m_123341_() + (double)j * 0.6D + 0.5D;
-            double d14 = (double)p_234306_.m_123342_() + (double)i1 * 0.6D + 0.5D;
-            double d20 = (double)p_234306_.m_123343_() + (double)k1 * 0.6D + 0.5D;
+            me.alphamode.mclong.math.BigDecimal d10 = p_234306_.getBigDecX().add((double)j * 0.6D + 0.5D);
+            me.alphamode.mclong.math.BigDecimal d14 = p_234306_.getBigDecY().add((double)i1 * 0.6D + 0.5D);
+            me.alphamode.mclong.math.BigDecimal d20 = p_234306_.getBigDecZ().add((double)k1 * 0.6D + 0.5D);
 
             for(int i4 = 0; i4 < 10; ++i4) {
                double d28 = randomsource.m_188500_() * 0.2D + 0.01D;
-               double d2 = d10 + (double)j * 0.01D + (randomsource.m_188500_() - 0.5D) * (double)k1 * 0.5D;
-               double d3 = d14 + (double)i1 * 0.01D + (randomsource.m_188500_() - 0.5D) * (double)i1 * 0.5D;
-               double d32 = d20 + (double)k1 * 0.01D + (randomsource.m_188500_() - 0.5D) * (double)j * 0.5D;
+               me.alphamode.mclong.math.BigDecimal d2 = d10.add((double)j * 0.01D + (randomsource.m_188500_() - 0.5D) * (double)k1 * 0.5D);
+               me.alphamode.mclong.math.BigDecimal d3 = d14.add((double)i1 * 0.01D + (randomsource.m_188500_() - 0.5D) * (double)i1 * 0.5D);
+               me.alphamode.mclong.math.BigDecimal d32 = d20.add((double)k1 * 0.01D + (randomsource.m_188500_() - 0.5D) * (double)j * 0.5D);
                double d4 = (double)j * d28 + randomsource.m_188583_() * 0.01D;
                double d5 = (double)i1 * d28 + randomsource.m_188583_() * 0.01D;
                double d6 = (double)k1 * d28 + randomsource.m_188583_() * 0.01D;
-               this.m_109735_(ParticleTypes.f_123762_, d2, d3, d32, d4, d5, d6);
+               this.addParticle(ParticleTypes.f_123762_, d2, d3, d32, d4, d5, d6);
             }
             break;
          case 2001:
@@ -2702,10 +_,10 @@
             break;
          case 2002:
          case 2007:
-            Vec3 vec3 = Vec3.m_82539_(p_234306_);
+            Vec3 vec3 = Vec3.atBottomCenterOf(p_234306_);
 
             for(int i = 0; i < 8; ++i) {
-               this.m_109735_(new ItemParticleOption(ParticleTypes.f_123752_, new ItemStack(Items.f_42736_)), vec3.f_82479_, vec3.f_82480_, vec3.f_82481_, randomsource.m_188583_() * 0.15D, randomsource.m_188500_() * 0.2D, randomsource.m_188583_() * 0.15D);
+               this.addParticle(new ItemParticleOption(ParticleTypes.f_123752_, new ItemStack(Items.f_42736_)), vec3.getX(), vec3.getY(), vec3.getZ(), randomsource.m_188583_() * 0.15D, randomsource.m_188500_() * 0.2D, randomsource.m_188583_() * 0.15D);
             }
 
             float f3 = (float)(p_234307_ >> 16 & 255) / 255.0F;
@@ -2719,7 +_,7 @@
                double d25 = Math.cos(d19) * d13;
                double d30 = 0.01D + randomsource.m_188500_() * 0.5D;
                double d31 = Math.sin(d19) * d13;
-               Particle particle1 = this.m_109795_(particleoptions, particleoptions.m_6012_().m_123742_(), vec3.f_82479_ + d25 * 0.1D, vec3.f_82480_ + 0.3D, vec3.f_82481_ + d31 * 0.1D, d25, d30, d31);
+               Particle particle1 = this.addParticleInternal(particleoptions, particleoptions.m_6012_().m_123742_(), vec3.getX().add(d25 * 0.1D), vec3.getY().add(0.3D), vec3.getZ().add(d31 * 0.1D), d25, d30, d31);
                if (particle1 != null) {
                   float f2 = 0.75F + randomsource.m_188501_() * 0.25F;
                   particle1.m_107253_(f3 * f2, f4 * f2, f6 * f2);
@@ -2730,26 +_,26 @@
             this.f_109465_.m_245747_(p_234306_, SoundEvents.f_12436_, SoundSource.NEUTRAL, 1.0F, randomsource.m_188501_() * 0.1F + 0.9F, false);
             break;
          case 2003:
-            double d0 = (double)p_234306_.m_123341_() + 0.5D;
-            double d7 = (double)p_234306_.m_123342_();
-            double d9 = (double)p_234306_.m_123343_() + 0.5D;
+            me.alphamode.mclong.math.BigDecimal d0 = p_234306_.getBigDecX().add(me.alphamode.mclong.core.BigConstants.AABB);
+            me.alphamode.mclong.math.BigDecimal d7 = p_234306_.getBigDecY();
+            me.alphamode.mclong.math.BigDecimal d9 = p_234306_.getBigDecZ().add(me.alphamode.mclong.core.BigConstants.AABB);
 
             for(int k3 = 0; k3 < 8; ++k3) {
-               this.m_109735_(new ItemParticleOption(ParticleTypes.f_123752_, new ItemStack(Items.f_42545_)), d0, d7, d9, randomsource.m_188583_() * 0.15D, randomsource.m_188500_() * 0.2D, randomsource.m_188583_() * 0.15D);
+               this.addParticle(new ItemParticleOption(ParticleTypes.f_123752_, new ItemStack(Items.f_42545_)), d0, d7, d9, randomsource.m_188583_() * 0.15D, randomsource.m_188500_() * 0.2D, randomsource.m_188583_() * 0.15D);
             }
 
             for(double d12 = 0.0D; d12 < (Math.PI * 2D); d12 += 0.15707963267948966D) {
-               this.m_109735_(ParticleTypes.f_123760_, d0 + Math.cos(d12) * 5.0D, d7 - 0.4D, d9 + Math.sin(d12) * 5.0D, Math.cos(d12) * -5.0D, 0.0D, Math.sin(d12) * -5.0D);
-               this.m_109735_(ParticleTypes.f_123760_, d0 + Math.cos(d12) * 5.0D, d7 - 0.4D, d9 + Math.sin(d12) * 5.0D, Math.cos(d12) * -7.0D, 0.0D, Math.sin(d12) * -7.0D);
+               this.addParticle(ParticleTypes.f_123760_, d0.add(me.alphamode.mclong.math.BigDecimal.valueOf(Math.cos(d12)).multiply(me.alphamode.mclong.core.BigConstants.FIVE)), d7.subtract(0.4D), d9.add(me.alphamode.mclong.math.BigDecimal.valueOf(Math.sin(d12)).multiply(me.alphamode.mclong.core.BigConstants.FIVE)), Math.cos(d12) * -5.0D, 0.0D, Math.sin(d12) * -5.0D);
+               this.addParticle(ParticleTypes.f_123760_, d0.add(me.alphamode.mclong.math.BigDecimal.valueOf(Math.cos(d12)).multiply(me.alphamode.mclong.core.BigConstants.FIVE)), d7.subtract(0.4D), d9.add(me.alphamode.mclong.math.BigDecimal.valueOf(Math.sin(d12)).multiply(me.alphamode.mclong.core.BigConstants.FIVE)), Math.cos(d12) * -7.0D, 0.0D, Math.sin(d12) * -7.0D);
             }
             break;
          case 2004:
             for(int l = 0; l < 20; ++l) {
-               double d8 = (double)p_234306_.m_123341_() + 0.5D + (randomsource.m_188500_() - 0.5D) * 2.0D;
-               double d11 = (double)p_234306_.m_123342_() + 0.5D + (randomsource.m_188500_() - 0.5D) * 2.0D;
-               double d17 = (double)p_234306_.m_123343_() + 0.5D + (randomsource.m_188500_() - 0.5D) * 2.0D;
-               this.f_109465_.m_7106_(ParticleTypes.f_123762_, d8, d11, d17, 0.0D, 0.0D, 0.0D);
-               this.f_109465_.m_7106_(ParticleTypes.f_123744_, d8, d11, d17, 0.0D, 0.0D, 0.0D);
+               me.alphamode.mclong.math.BigDecimal d8 = p_234306_.getBigDecX().add(0.5D + (randomsource.m_188500_() - 0.5D) * 2.0D);
+               me.alphamode.mclong.math.BigDecimal d11 = p_234306_.getBigDecY().add(0.5D + (randomsource.m_188500_() - 0.5D) * 2.0D);
+               me.alphamode.mclong.math.BigDecimal d17 = p_234306_.getBigDecZ().add(0.5D + (randomsource.m_188500_() - 0.5D) * 2.0D);
+               this.f_109465_.addParticle(ParticleTypes.f_123762_, d8, d11, d17, 0.0D, 0.0D, 0.0D);
+               this.f_109465_.addParticle(ParticleTypes.f_123744_, d8, d11, d17, 0.0D, 0.0D, 0.0D);
             }
             break;
          case 2005:
@@ -2762,7 +_,7 @@
                double d18 = (double)(Mth.m_14089_(f11) * f10);
                double d24 = 0.01D + randomsource.m_188500_() * 0.5D;
                double d29 = (double)(Mth.m_14031_(f11) * f10);
-               Particle particle = this.m_109795_(ParticleTypes.f_123799_, false, (double)p_234306_.m_123341_() + d18 * 0.1D, (double)p_234306_.m_123342_() + 0.3D, (double)p_234306_.m_123343_() + d29 * 0.1D, d18, d24, d29);
+               Particle particle = this.addParticleInternal(ParticleTypes.f_123799_, false, p_234306_.getBigDecX().add(d18 * 0.1D), p_234306_.getBigDecY().add(0.3D), p_234306_.getBigDecZ().add(d29 * 0.1D), d18, d24, d29);
                if (particle != null) {
                   particle.m_107268_(f10);
                }
@@ -2773,15 +_,15 @@
             }
             break;
          case 2008:
-            this.f_109465_.m_7106_(ParticleTypes.f_123813_, (double)p_234306_.m_123341_() + 0.5D, (double)p_234306_.m_123342_() + 0.5D, (double)p_234306_.m_123343_() + 0.5D, 0.0D, 0.0D, 0.0D);
+            this.f_109465_.addParticle(ParticleTypes.f_123813_, p_234306_.getBigDecX().add(me.alphamode.mclong.core.BigConstants.AABB), p_234306_.getBigDecY().add(me.alphamode.mclong.core.BigConstants.AABB), p_234306_.getBigDecZ().add(me.alphamode.mclong.core.BigConstants.AABB), 0.0D, 0.0D, 0.0D);
             break;
          case 2009:
             for(int i2 = 0; i2 < 8; ++i2) {
-               this.f_109465_.m_7106_(ParticleTypes.f_123796_, (double)p_234306_.m_123341_() + randomsource.m_188500_(), (double)p_234306_.m_123342_() + 1.2D, (double)p_234306_.m_123343_() + randomsource.m_188500_(), 0.0D, 0.0D, 0.0D);
+               this.f_109465_.addParticle(ParticleTypes.f_123796_, p_234306_.getBigDecX().add(randomsource.m_188500_()), p_234306_.getBigDecY().add(1.2D), p_234306_.getBigDecZ().add(randomsource.m_188500_()), 0.0D, 0.0D, 0.0D);
             }
             break;
          case 3000:
-            this.f_109465_.m_6493_(ParticleTypes.f_123812_, true, (double)p_234306_.m_123341_() + 0.5D, (double)p_234306_.m_123342_() + 0.5D, (double)p_234306_.m_123343_() + 0.5D, 0.0D, 0.0D, 0.0D);
+            this.f_109465_.addParticle(ParticleTypes.f_123812_, true, p_234306_.getBigDecX().add(me.alphamode.mclong.core.BigConstants.AABB), p_234306_.getBigDecY().add(me.alphamode.mclong.core.BigConstants.AABB), p_234306_.getBigDecZ().add(me.alphamode.mclong.core.BigConstants.AABB), 0.0D, 0.0D, 0.0D);
             this.f_109465_.m_245747_(p_234306_, SoundEvents.f_11858_, SoundSource.BLOCKS, 10.0F, (1.0F + (this.f_109465_.f_46441_.m_188501_() - this.f_109465_.f_46441_.m_188501_()) * 0.2F) * 0.7F, false);
             break;
          case 3001:
@@ -2843,20 +_,20 @@
                   float f12 = 2.0F * randomsource.m_188501_() - 1.0F;
                   float f14 = 2.0F * randomsource.m_188501_() - 1.0F;
                   float f15 = 2.0F * randomsource.m_188501_() - 1.0F;
-                  this.f_109465_.m_7106_(ParticleTypes.f_235900_, (double)p_234306_.m_123341_() + 0.5D + (double)(f12 * f8), (double)p_234306_.m_123342_() + 0.5D + (double)(f14 * f8), (double)p_234306_.m_123343_() + 0.5D + (double)(f15 * f8), (double)(f12 * 0.07F), (double)(f14 * 0.07F), (double)(f15 * 0.07F));
+                  this.f_109465_.addParticle(ParticleTypes.f_235900_, p_234306_.getBigDecX().add(0.5D + (double)(f12 * f9)), p_234306_.getBigDecY().add(0.5D + (double)(f14 * f9)), p_234306_.getBigDecZ().add(0.5D + (double)(f15 * f9)), (double)(f12 * 0.07F), (double)(f14 * 0.07F), (double)(f15 * 0.07F));
                }
             }
             break;
          case 3007:
             for(int j1 = 0; j1 < 10; ++j1) {
-               this.f_109465_.m_6493_(new ShriekParticleOption(j1 * 5), false, (double)p_234306_.m_123341_() + 0.5D, (double)p_234306_.m_123342_() + SculkShriekerBlock.f_222156_, (double)p_234306_.m_123343_() + 0.5D, 0.0D, 0.0D, 0.0D);
+               this.f_109465_.addParticle(new ShriekParticleOption(j1 * 5), false, p_234306_.getBigDecX().add(me.alphamode.mclong.core.BigConstants.AABB), p_234306_.getBigDecY().add(SculkShriekerBlock.f_222156_), p_234306_.getBigDecZ().add(me.alphamode.mclong.core.BigConstants.AABB), 0.0D, 0.0D, 0.0D);
             }
 
             BlockState blockstate2 = this.f_109465_.m_8055_(p_234306_);
             boolean flag = blockstate2.m_61138_(BlockStateProperties.f_61362_) && blockstate2.m_61143_(BlockStateProperties.f_61362_);
             if (!flag) {
-               this.f_109465_.m_7785_((double)p_234306_.m_123341_() + 0.5D, (double)p_234306_.m_123342_() + SculkShriekerBlock.f_222156_, (double)p_234306_.m_123343_() + 0.5D, SoundEvents.f_215750_, SoundSource.BLOCKS, 2.0F, 0.6F + this.f_109465_.f_46441_.m_188501_() * 0.4F, false);
             }
+            this.f_109465_.playLocalSound(p_234306_.getBigDecX().add(me.alphamode.mclong.core.BigConstants.AABB), p_234306_.getBigDecY().add(SculkShriekerBlock.f_222156_), p_234306_.getBigDecZ().add(me.alphamode.mclong.core.BigConstants.AABB), SoundEvents.f_215750_, SoundSource.BLOCKS, 2.0F, 0.6F + this.f_109465_.f_46441_.m_188501_() * 0.4F, false);
             break;
          case 3008:
             BlockState blockstate = Block.m_49803_(p_234307_);
@@ -2880,14 +_,14 @@
             this.m_109765_(blockdestructionprogress1);
          }
 
-         if (blockdestructionprogress1 == null || blockdestructionprogress1.m_139985_().m_123341_() != p_109776_.m_123341_() || blockdestructionprogress1.m_139985_().m_123342_() != p_109776_.m_123342_() || blockdestructionprogress1.m_139985_().m_123343_() != p_109776_.m_123343_()) {
+         if (blockdestructionprogress1 == null || !blockdestructionprogress1.m_139985_().getBigX().equals(p_109776_.getBigX()) || !blockdestructionprogress1.m_139985_().getBigY().equals(p_109776_.getBigY()) || !blockdestructionprogress1.m_139985_().getBigZ().equals(p_109776_.getBigZ())) {
             blockdestructionprogress1 = new BlockDestructionProgress(p_109775_, p_109776_);
             this.f_109408_.put(p_109775_, blockdestructionprogress1);
          }
 
          blockdestructionprogress1.m_139981_(p_109777_);
          blockdestructionprogress1.m_139986_(this.f_109477_);
-         this.f_109409_.computeIfAbsent(blockdestructionprogress1.m_139985_().m_121878_(), (p_234254_) -> {
+         this.f_109409_.computeIfAbsent(blockdestructionprogress1.m_139985_(), (p_234254_) -> {
             return Sets.newTreeSet();
          }).add(blockdestructionprogress1);
       } else {
@@ -3005,9 +_,9 @@
          return this.f_173020_ != 0;
       }
 
-      public boolean m_274540_(int p_275489_, int p_275424_, int p_275596_) {
+      public boolean isAxisAlignedWith(me.alphamode.mclong.math.BigInteger p_275489_, me.alphamode.mclong.math.BigInteger p_275424_, me.alphamode.mclong.math.BigInteger p_275596_) {
          BlockPos blockpos = this.f_109839_.m_112839_();
-         return p_275489_ == blockpos.m_123341_() / 16 || p_275596_ == blockpos.m_123343_() / 16 || p_275424_ == blockpos.m_123342_() / 16;
+         return p_275489_.equals(blockpos.getBigX().divide(me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN)) || p_275596_.equals(blockpos.getBigZ().divide(me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN)) || p_275424_.equals(blockpos.getBigY().divide(me.alphamode.mclong.core.BigConstants.Ints.SIXTEEN));
       }
 
       public int hashCode() {
@@ -3043,13 +_,13 @@
       }
 
       public void m_173037_(ChunkRenderDispatcher.RenderChunk p_173038_, LevelRenderer.RenderChunkInfo p_173039_) {
-         this.f_173030_[p_173038_.f_173717_] = p_173039_;
+         this.f_173030_[(int) p_173038_.f_173717_] = p_173039_;
       }
 
       @Nullable
       public LevelRenderer.RenderChunkInfo m_173035_(ChunkRenderDispatcher.RenderChunk p_173036_) {
-         int i = p_173036_.f_173717_;
-         return i >= 0 && i < this.f_173030_.length ? this.f_173030_[i] : null;
+         long i = p_173036_.f_173717_;
+         return i >= 0 && i < this.f_173030_.length ? this.f_173030_[(int) i] : null;
       }
    }
 
