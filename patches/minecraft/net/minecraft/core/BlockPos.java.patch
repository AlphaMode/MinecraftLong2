--- a/net/minecraft/core/BlockPos.java
+++ b/net/minecraft/core/BlockPos.java
@@ -27,13 +_,14 @@
 import org.slf4j.Logger;
 
 @Immutable
-public class BlockPos extends Vec3i {
-   public static final Codec<BlockPos> f_121852_ = Codec.INT_STREAM.comapFlatMap((p_121967_) -> {
-      return Util.m_137539_(p_121967_, 3).map((p_175270_) -> {
+public class BlockPos extends me.alphamode.mclong.core.Vec3l {
+   public static final BlockPos MAX_VALUE = new BlockPos(java.lang.Long.MAX_VALUE, java.lang.Long.MAX_VALUE, java.lang.Long.MAX_VALUE);
+   public static final Codec<BlockPos> f_121852_ = Codec.LONG_STREAM.comapFlatMap((p_121967_) -> {
+      return Util.m_287262_(p_121967_, 3).map((p_175270_) -> {
          return new BlockPos(p_175270_[0], p_175270_[1], p_175270_[2]);
       });
    }, (p_121924_) -> {
-      return IntStream.of(p_121924_.m_123341_(), p_121924_.m_123342_(), p_121924_.m_123343_());
+      return java.util.stream.LongStream.of(p_121924_.getX(), p_121924_.getY(), p_121924_.getZ());
    }).stable();
    private static final Logger f_121854_ = LogUtils.getLogger();
    public static final BlockPos f_121853_ = new BlockPos(0, 0, 0);
@@ -47,51 +_,71 @@
    private static final int f_121861_ = f_121857_;
    private static final int f_121862_ = f_121857_ + f_121856_;
 
-   public BlockPos(int p_121869_, int p_121870_, int p_121871_) {
-      super(p_121869_, p_121870_, p_121871_);
-   }
-
-   public BlockPos(Vec3i p_121877_) {
-      this(p_121877_.m_123341_(), p_121877_.m_123342_(), p_121877_.m_123343_());
+   public BlockPos(long p_121869_, long p_121870_, long p_121871_) {
+      super(p_121869_, p_121870_, p_121871_);
+   }
+
+   public BlockPos(me.alphamode.mclong.math.BigDecimal p_121869_, me.alphamode.mclong.math.BigDecimal p_121870_, me.alphamode.mclong.math.BigDecimal p_121871_) {
+      super(p_121869_, p_121870_, p_121871_);
+   }
+
+   public BlockPos(me.alphamode.mclong.math.BigInteger p_121869_, me.alphamode.mclong.math.BigInteger p_121870_, me.alphamode.mclong.math.BigInteger p_121871_) {
+      super(p_121869_, p_121870_, p_121871_);
+   }
+
+   public BlockPos(me.alphamode.mclong.math.BigInteger p_121869_, long p_121870_, me.alphamode.mclong.math.BigInteger p_121871_) {
+      super(p_121869_, me.alphamode.mclong.math.BigInteger.valueOf(p_121870_), p_121871_);
+   }
+
+   public BlockPos(me.alphamode.mclong.core.Vec3l p_121877_) {
+      this(p_121877_.getBigX(), p_121877_.getBigY(), p_121877_.getBigZ());
    }
 
    public static long m_121915_(long p_121916_, Direction p_121917_) {
-      return m_121910_(p_121916_, p_121917_.m_122429_(), p_121917_.m_122430_(), p_121917_.m_122431_());
-   }
-
-   public static long m_121910_(long p_121911_, int p_121912_, int p_121913_, int p_121914_) {
-      return m_121882_(m_121983_(p_121911_) + p_121912_, m_122008_(p_121911_) + p_121913_, m_122015_(p_121911_) + p_121914_);
-   }
-
-   public static int m_121983_(long p_121984_) {
-      return (int)(p_121984_ << 64 - f_121862_ - f_121855_ >> 64 - f_121855_);
-   }
-
-   public static int m_122008_(long p_122009_) {
-      return (int)(p_122009_ << 64 - f_121857_ >> 64 - f_121857_);
-   }
-
-   public static int m_122015_(long p_122016_) {
-      return (int)(p_122016_ << 64 - f_121861_ - f_121856_ >> 64 - f_121856_);
+      return offset(p_121916_, p_121917_.m_122429_(), p_121917_.m_122430_(), p_121917_.m_122431_());
+   }
+
+   public static long offset(long p_121911_, long p_121912_, long p_121913_, long p_121914_) {
+      return asLong(getX(p_121911_) + p_121912_, getY(p_121911_) + p_121913_, getZ(p_121911_) + p_121914_);
+   }
+
+   public static long getX(long p_121984_) {
+      return (p_121984_ << 64 - f_121862_ - f_121855_ >> 64 - f_121855_);
+   }
+
+   public static long getY(long p_122009_) {
+      return (p_122009_ << 64 - f_121857_ >> 64 - f_121857_);
+   }
+
+   public static long getZ(long p_122016_) {
+      return (p_122016_ << 64 - f_121861_ - f_121856_ >> 64 - f_121856_);
    }
 
    public static BlockPos m_122022_(long p_122023_) {
-      return new BlockPos(m_121983_(p_122023_), m_122008_(p_122023_), m_122015_(p_122023_));
+      return new BlockPos(getX(p_122023_), getY(p_122023_), getZ(p_122023_));
    }
 
    public static BlockPos m_274561_(double p_275310_, double p_275414_, double p_275737_) {
-      return new BlockPos(Mth.m_14107_(p_275310_), Mth.m_14107_(p_275414_), Mth.m_14107_(p_275737_));
+      return new BlockPos(Mth.m_14134_(p_275310_), Mth.m_14134_(p_275414_), Mth.m_14134_(p_275737_));
+   }
+
+   public static BlockPos containing(me.alphamode.mclong.math.BigDecimal x, me.alphamode.mclong.math.BigDecimal y, me.alphamode.mclong.math.BigDecimal z) {
+      return new BlockPos(Mth.lfloor(x), Mth.lfloor(y), Mth.lfloor(z));
    }
 
    public static BlockPos m_274446_(Position p_275443_) {
-      return m_274561_(p_275443_.m_7096_(), p_275443_.m_7098_(), p_275443_.m_7094_());
+      return containing(p_275443_.getX(), p_275443_.getY(), p_275443_.getZ());
+   }
+
+   public static BlockPos containing(Vec3 pos) {
+      return new BlockPos(pos.getX(), pos.getY(), pos.getZ());
    }
 
    public long m_121878_() {
-      return m_121882_(this.m_123341_(), this.m_123342_(), this.m_123343_());
+      return asLong(this.getX(), this.getY(), this.getZ());
    }
 
-   public static long m_121882_(int p_121883_, int p_121884_, int p_121885_) {
+   public static long asLong(long p_121883_, long p_121884_, long p_121885_) {
       long i = 0L;
       i |= ((long)p_121883_ & f_121858_) << f_121862_;
       i |= ((long)p_121884_ & f_121859_) << 0;
@@ -102,94 +_,102 @@
       return p_122028_ & -16L;
    }
 
-   public BlockPos m_7918_(int p_121973_, int p_121974_, int p_121975_) {
-      return p_121973_ == 0 && p_121974_ == 0 && p_121975_ == 0 ? this : new BlockPos(this.m_123341_() + p_121973_, this.m_123342_() + p_121974_, this.m_123343_() + p_121975_);
+   public BlockPos offset(long p_121973_, long p_121974_, long p_121975_) {
+      return p_121973_ == 0 && p_121974_ == 0 && p_121975_ == 0 ? this : new BlockPos(this.getBigX().add(me.alphamode.mclong.math.BigInteger.valueOf(p_121973_)), this.getBigY().add(me.alphamode.mclong.math.BigInteger.valueOf(p_121974_)), this.getBigZ().add(me.alphamode.mclong.math.BigInteger.valueOf(p_121975_)));
+   }
+
+   public BlockPos offset(me.alphamode.mclong.math.BigInteger x, me.alphamode.mclong.math.BigInteger y, me.alphamode.mclong.math.BigInteger z) {
+      return x.equals(me.alphamode.mclong.math.BigInteger.ZERO) && y.equals(me.alphamode.mclong.math.BigInteger.ZERO) && z.equals(me.alphamode.mclong.math.BigInteger.ZERO) ? this : new BlockPos(this.getBigX().add(x), this.getBigY().add(y), this.getBigZ().add(z));
    }
 
    public Vec3 m_252807_() {
-      return Vec3.m_82512_(this);
+      return Vec3.atCenterOf(this);
+   }
+
+   public BlockPos offset(me.alphamode.mclong.core.Vec3l p_121956_) {
+      return this.offset(p_121956_.getBigX(), p_121956_.getBigY(), p_121956_.getBigZ());
    }
 
    public BlockPos m_121955_(Vec3i p_121956_) {
-      return this.m_7918_(p_121956_.m_123341_(), p_121956_.m_123342_(), p_121956_.m_123343_());
-   }
-
-   public BlockPos m_121996_(Vec3i p_121997_) {
-      return this.m_7918_(-p_121997_.m_123341_(), -p_121997_.m_123342_(), -p_121997_.m_123343_());
-   }
-
-   public BlockPos m_142393_(int p_175263_) {
+      return this.offset(p_121956_.m_123341_(), p_121956_.m_123342_(), p_121956_.m_123343_());
+   }
+
+   public BlockPos subtract(me.alphamode.mclong.core.Vec3l p_121997_) {
+      return this.offset(p_121997_.getBigX().negate(), p_121997_.getBigY().negate(), p_121997_.getBigZ().negate());
+   }
+
+   public BlockPos multiply(long p_175263_) {
       if (p_175263_ == 1) {
          return this;
       } else {
-         return p_175263_ == 0 ? f_121853_ : new BlockPos(this.m_123341_() * p_175263_, this.m_123342_() * p_175263_, this.m_123343_() * p_175263_);
+         return p_175263_ == 0 ? f_121853_ : new BlockPos(this.getBigX().multiply(p_175263_), this.getBigY().multiply(p_175263_), this.getBigZ().multiply(p_175263_));
       }
    }
 
-   public BlockPos m_7494_() {
-      return this.m_121945_(Direction.UP);
-   }
-
-   public BlockPos m_6630_(int p_121972_) {
-      return this.m_5484_(Direction.UP, p_121972_);
-   }
-
-   public BlockPos m_7495_() {
-      return this.m_121945_(Direction.DOWN);
-   }
-
-   public BlockPos m_6625_(int p_122000_) {
-      return this.m_5484_(Direction.DOWN, p_122000_);
-   }
-
-   public BlockPos m_122012_() {
-      return this.m_121945_(Direction.NORTH);
-   }
-
-   public BlockPos m_122013_(int p_122014_) {
-      return this.m_5484_(Direction.NORTH, p_122014_);
-   }
-
-   public BlockPos m_122019_() {
-      return this.m_121945_(Direction.SOUTH);
-   }
-
-   public BlockPos m_122020_(int p_122021_) {
-      return this.m_5484_(Direction.SOUTH, p_122021_);
-   }
-
-   public BlockPos m_122024_() {
-      return this.m_121945_(Direction.WEST);
-   }
-
-   public BlockPos m_122025_(int p_122026_) {
-      return this.m_5484_(Direction.WEST, p_122026_);
-   }
-
-   public BlockPos m_122029_() {
-      return this.m_121945_(Direction.EAST);
-   }
-
-   public BlockPos m_122030_(int p_122031_) {
-      return this.m_5484_(Direction.EAST, p_122031_);
-   }
-
-   public BlockPos m_121945_(Direction p_121946_) {
-      return new BlockPos(this.m_123341_() + p_121946_.m_122429_(), this.m_123342_() + p_121946_.m_122430_(), this.m_123343_() + p_121946_.m_122431_());
-   }
-
-   public BlockPos m_5484_(Direction p_121948_, int p_121949_) {
-      return p_121949_ == 0 ? this : new BlockPos(this.m_123341_() + p_121948_.m_122429_() * p_121949_, this.m_123342_() + p_121948_.m_122430_() * p_121949_, this.m_123343_() + p_121948_.m_122431_() * p_121949_);
-   }
-
-   public BlockPos m_5487_(Direction.Axis p_121943_, int p_121944_) {
+   public BlockPos above() {
+      return this.relative(Direction.UP);
+   }
+
+   public BlockPos above(long p_121972_) {
+      return this.relative(Direction.UP, p_121972_);
+   }
+
+   public BlockPos below() {
+      return this.relative(Direction.DOWN);
+   }
+
+   public BlockPos below(long p_122000_) {
+      return this.relative(Direction.DOWN, p_122000_);
+   }
+
+   public BlockPos north() {
+      return this.relative(Direction.NORTH);
+   }
+
+   public BlockPos north(long p_122014_) {
+      return this.relative(Direction.NORTH, p_122014_);
+   }
+
+   public BlockPos south() {
+      return this.relative(Direction.SOUTH);
+   }
+
+   public BlockPos south(long p_122021_) {
+      return this.relative(Direction.SOUTH, p_122021_);
+   }
+
+   public BlockPos west() {
+      return this.relative(Direction.WEST);
+   }
+
+   public BlockPos west(long p_122026_) {
+      return this.relative(Direction.WEST, p_122026_);
+   }
+
+   public BlockPos east() {
+      return this.relative(Direction.EAST);
+   }
+
+   public BlockPos east(long p_122031_) {
+      return this.relative(Direction.EAST, p_122031_);
+   }
+
+   public BlockPos relative(Direction p_121946_) {
+      return new BlockPos(this.getBigX().add(p_121946_.m_122429_()), this.getBigY().add(p_121946_.m_122430_()), this.getBigZ().add(p_121946_.m_122431_()));
+   }
+
+   public BlockPos relative(Direction p_121948_, long p_121949_) {
+      return p_121949_ == 0 ? this : new BlockPos(this.getBigX().add(p_121948_.m_122429_() * p_121949_), this.getBigY().add(p_121948_.m_122430_() * p_121949_), this.getBigZ().add(p_121948_.m_122431_() * p_121949_));
+   }
+
+   public BlockPos relative(Direction.Axis p_121943_, long p_121944_) {
       if (p_121944_ == 0) {
          return this;
       } else {
-         int i = p_121943_ == Direction.Axis.X ? p_121944_ : 0;
-         int j = p_121943_ == Direction.Axis.Y ? p_121944_ : 0;
-         int k = p_121943_ == Direction.Axis.Z ? p_121944_ : 0;
-         return new BlockPos(this.m_123341_() + i, this.m_123342_() + j, this.m_123343_() + k);
+         long i = p_121943_ == Direction.Axis.X ? p_121944_ : 0;
+         long j = p_121943_ == Direction.Axis.Y ? p_121944_ : 0;
+         long k = p_121943_ == Direction.Axis.Z ? p_121944_ : 0;
+         return new BlockPos(this.getBigX().add(i), this.getBigY().add(j), this.getBigZ().add(k));
       }
    }
 
@@ -199,20 +_,20 @@
          default:
             return this;
          case CLOCKWISE_90:
-            return new BlockPos(-this.m_123343_(), this.m_123342_(), this.m_123341_());
+            return new BlockPos(this.getBigZ().negate(), this.getBigY(), this.getBigX());
          case CLOCKWISE_180:
-            return new BlockPos(-this.m_123341_(), this.m_123342_(), -this.m_123343_());
+            return new BlockPos(this.getBigX().negate(), this.getBigY(), this.getBigZ().negate());
          case COUNTERCLOCKWISE_90:
-            return new BlockPos(this.m_123343_(), this.m_123342_(), -this.m_123341_());
+            return new BlockPos(this.getBigZ(), this.getBigY(), this.getBigX().negate());
       }
    }
 
-   public BlockPos m_7724_(Vec3i p_122011_) {
-      return new BlockPos(this.m_123342_() * p_122011_.m_123343_() - this.m_123343_() * p_122011_.m_123342_(), this.m_123343_() * p_122011_.m_123341_() - this.m_123341_() * p_122011_.m_123343_(), this.m_123341_() * p_122011_.m_123342_() - this.m_123342_() * p_122011_.m_123341_());
+   public BlockPos cross(me.alphamode.mclong.core.Vec3l p_122011_) {
+      return new BlockPos(this.getY() * p_122011_.getZ() - this.getZ() * p_122011_.getY(), this.getZ() * p_122011_.getX() - this.getX() * p_122011_.getZ(), this.getX() * p_122011_.getY() - this.getY() * p_122011_.getX());
    }
 
-   public BlockPos m_175288_(int p_175289_) {
-      return new BlockPos(this.m_123341_(), p_175289_, this.m_123343_());
+   public BlockPos atY(long p_175289_) {
+      return new BlockPos(this.getBigX(), me.alphamode.mclong.math.BigInteger.valueOf(p_175289_), this.getBigZ());
    }
 
    public BlockPos m_7949_() {
@@ -220,33 +_,33 @@
    }
 
    public BlockPos.MutableBlockPos m_122032_() {
-      return new BlockPos.MutableBlockPos(this.m_123341_(), this.m_123342_(), this.m_123343_());
+      return new BlockPos.MutableBlockPos(this.getBigX(), this.getBigY(), this.getBigZ());
    }
 
    public static Iterable<BlockPos> m_235650_(RandomSource p_235651_, int p_235652_, BlockPos p_235653_, int p_235654_) {
-      return m_235641_(p_235651_, p_235652_, p_235653_.m_123341_() - p_235654_, p_235653_.m_123342_() - p_235654_, p_235653_.m_123343_() - p_235654_, p_235653_.m_123341_() + p_235654_, p_235653_.m_123342_() + p_235654_, p_235653_.m_123343_() + p_235654_);
+      return randomBetweenClosed(p_235651_, p_235652_, p_235653_.getX() - p_235654_, p_235653_.getY() - p_235654_, p_235653_.getZ() - p_235654_, p_235653_.getX() + p_235654_, p_235653_.getY() + p_235654_, p_235653_.getZ() + p_235654_);
    }
 
    /** @deprecated */
    @Deprecated
    public static Stream<BlockPos> m_284476_(BlockPos p_284978_) {
-      return Stream.of(p_284978_, p_284978_.m_122019_(), p_284978_.m_122029_(), p_284978_.m_122019_().m_122029_());
+      return Stream.of(p_284978_, p_284978_.south(), p_284978_.east(), p_284978_.south().east());
    }
 
-   public static Iterable<BlockPos> m_235641_(RandomSource p_235642_, int p_235643_, int p_235644_, int p_235645_, int p_235646_, int p_235647_, int p_235648_, int p_235649_) {
-      int i = p_235647_ - p_235644_ + 1;
-      int j = p_235648_ - p_235645_ + 1;
-      int k = p_235649_ - p_235646_ + 1;
+   public static Iterable<BlockPos> randomBetweenClosed(RandomSource p_235642_, long p_235643_, long p_235644_, long p_235645_, long p_235646_, long p_235647_, long p_235648_, long p_235649_) {
+      long i = p_235647_ - p_235644_ + 1;
+      long j = p_235648_ - p_235645_ + 1;
+      long k = p_235649_ - p_235646_ + 1;
       return () -> {
          return new AbstractIterator<BlockPos>() {
             final BlockPos.MutableBlockPos f_122039_ = new BlockPos.MutableBlockPos();
-            int f_122040_ = p_235643_;
+            long f_122040_ = p_235643_;
 
             protected BlockPos computeNext() {
                if (this.f_122040_ <= 0) {
                   return this.endOfData();
                } else {
-                  BlockPos blockpos = this.f_122039_.m_122178_(p_235644_ + p_235642_.m_188503_(i), p_235645_ + p_235642_.m_188503_(j), p_235646_ + p_235642_.m_188503_(k));
+                  BlockPos blockpos = this.f_122039_.set(p_235644_ + p_235642_.nextLong(i), p_235645_ + p_235642_.nextLong(j), p_235646_ + p_235642_.nextLong(k));
                   --this.f_122040_;
                   return blockpos;
                }
@@ -255,51 +_,51 @@
       };
    }
 
-   public static Iterable<BlockPos> m_121925_(BlockPos p_121926_, int p_121927_, int p_121928_, int p_121929_) {
-      int i = p_121927_ + p_121928_ + p_121929_;
-      int j = p_121926_.m_123341_();
-      int k = p_121926_.m_123342_();
-      int l = p_121926_.m_123343_();
+   public static Iterable<BlockPos> withinManhattan(BlockPos p_121926_, long p_121927_, long p_121928_, long p_121929_) {
+      long i = p_121927_ + p_121928_ + p_121929_;
+      me.alphamode.mclong.math.BigInteger j = p_121926_.getBigX();
+      me.alphamode.mclong.math.BigInteger k = p_121926_.getBigY();
+      me.alphamode.mclong.math.BigInteger l = p_121926_.getBigZ();
       return () -> {
          return new AbstractIterator<BlockPos>() {
             private final BlockPos.MutableBlockPos f_122067_ = new BlockPos.MutableBlockPos();
             private int f_122068_;
-            private int f_122069_;
-            private int f_122070_;
-            private int f_122071_;
-            private int f_122072_;
+            private me.alphamode.mclong.math.BigInteger f_122069_ = me.alphamode.mclong.math.BigInteger.ZERO;
+            private me.alphamode.mclong.math.BigInteger f_122070_ = me.alphamode.mclong.math.BigInteger.ZERO;
+            private me.alphamode.mclong.math.BigInteger f_122071_ = me.alphamode.mclong.math.BigInteger.ZERO;
+            private me.alphamode.mclong.math.BigInteger f_122072_ = me.alphamode.mclong.math.BigInteger.ZERO;
             private boolean f_122073_;
 
             protected BlockPos computeNext() {
                if (this.f_122073_) {
                   this.f_122073_ = false;
-                  this.f_122067_.m_142443_(l - (this.f_122067_.m_123343_() - l));
+                  this.f_122067_.setZ(l.subtract((this.f_122067_.getBigZ().subtract(l))));
                   return this.f_122067_;
                } else {
                   BlockPos blockpos;
-                  for(blockpos = null; blockpos == null; ++this.f_122072_) {
-                     if (this.f_122072_ > this.f_122070_) {
-                        ++this.f_122071_;
-                        if (this.f_122071_ > this.f_122069_) {
+                  for(blockpos = null; blockpos == null; this.f_122072_ = this.f_122072_.add()) {
+                     if (this.f_122072_.compareTo(this.f_122070_) > 0) {
+                        this.f_122071_ = this.f_122071_.add();
+                        if (this.f_122071_.compareTo(this.f_122069_) > 0) {
                            ++this.f_122068_;
                            if (this.f_122068_ > i) {
                               return this.endOfData();
                            }
 
-                           this.f_122069_ = Math.min(p_121927_, this.f_122068_);
-                           this.f_122071_ = -this.f_122069_;
+                           this.f_122069_ = me.alphamode.mclong.math.BigInteger.valueOf(Math.min(p_121927_, this.f_122068_));
+                           this.f_122071_ = this.f_122069_.negate();
                         }
 
-                        this.f_122070_ = Math.min(p_121928_, this.f_122068_ - Math.abs(this.f_122071_));
-                        this.f_122072_ = -this.f_122070_;
+                        this.f_122070_ = me.alphamode.mclong.math.BigInteger.valueOf(p_121928_).min(me.alphamode.mclong.math.BigInteger.valueOf(this.f_122068_).subtract(this.f_122071_.abs()));
+                        this.f_122072_ = this.f_122070_.negate();
                      }
 
-                     int i1 = this.f_122071_;
-                     int j1 = this.f_122072_;
-                     int k1 = this.f_122068_ - Math.abs(i1) - Math.abs(j1);
+                     me.alphamode.mclong.math.BigInteger i1 = this.f_122071_;
+                     me.alphamode.mclong.math.BigInteger j1 = this.f_122072_;
+                     long k1 = me.alphamode.mclong.math.BigInteger.valueOf(this.f_122068_).subtract(i1.abs()).subtract(j1.abs()).longValue();
                      if (k1 <= p_121929_) {
                         this.f_122073_ = k1 != 0;
-                        blockpos = this.f_122067_.m_122178_(j + i1, k + j1, l + k1);
+                        blockpos = this.f_122067_.set(j.add(i1), k.add(j1), l.add(k1));
                      }
                   }
 
@@ -311,7 +_,7 @@
    }
 
    public static Optional<BlockPos> m_121930_(BlockPos p_121931_, int p_121932_, int p_121933_, Predicate<BlockPos> p_121934_) {
-      for(BlockPos blockpos : m_121925_(p_121931_, p_121932_, p_121933_, p_121932_)) {
+      for(BlockPos blockpos : withinManhattan(p_121931_, p_121932_, p_121933_, p_121932_)) {
          if (p_121934_.test(blockpos)) {
             return Optional.of(blockpos);
          }
@@ -320,12 +_,12 @@
       return Optional.empty();
    }
 
-   public static Stream<BlockPos> m_121985_(BlockPos p_121986_, int p_121987_, int p_121988_, int p_121989_) {
-      return StreamSupport.stream(m_121925_(p_121986_, p_121987_, p_121988_, p_121989_).spliterator(), false);
+   public static Stream<BlockPos> withinManhattanStream(BlockPos p_121986_, long p_121987_, long p_121988_, long p_121989_) {
+      return StreamSupport.stream(withinManhattan(p_121986_, p_121987_, p_121988_, p_121989_).spliterator(), false);
    }
 
    public static Iterable<BlockPos> m_121940_(BlockPos p_121941_, BlockPos p_121942_) {
-      return m_121976_(Math.min(p_121941_.m_123341_(), p_121942_.m_123341_()), Math.min(p_121941_.m_123342_(), p_121942_.m_123342_()), Math.min(p_121941_.m_123343_(), p_121942_.m_123343_()), Math.max(p_121941_.m_123341_(), p_121942_.m_123341_()), Math.max(p_121941_.m_123342_(), p_121942_.m_123342_()), Math.max(p_121941_.m_123343_(), p_121942_.m_123343_()));
+      return betweenClosed(p_121941_.getBigX().min(p_121942_.getBigX()), p_121941_.getBigY().min(p_121942_.getBigY()),p_121941_.getBigZ().min(p_121942_.getBigZ()), p_121941_.getBigX().max(p_121942_.getBigX()), p_121941_.getBigY().max(p_121942_.getBigY()), p_121941_.getBigZ().max(p_121942_.getBigZ()));
    }
 
    public static Stream<BlockPos> m_121990_(BlockPos p_121991_, BlockPos p_121992_) {
@@ -333,22 +_,22 @@
    }
 
    public static Stream<BlockPos> m_121919_(BoundingBox p_121920_) {
-      return m_121886_(Math.min(p_121920_.m_162395_(), p_121920_.m_162399_()), Math.min(p_121920_.m_162396_(), p_121920_.m_162400_()), Math.min(p_121920_.m_162398_(), p_121920_.m_162401_()), Math.max(p_121920_.m_162395_(), p_121920_.m_162399_()), Math.max(p_121920_.m_162396_(), p_121920_.m_162400_()), Math.max(p_121920_.m_162398_(), p_121920_.m_162401_()));
+      return betweenClosedStream(p_121920_.minBigX().min(p_121920_.maxBigX()), p_121920_.minBigY().min(p_121920_.maxBigY()), p_121920_.minBigZ().min(p_121920_.maxBigZ()), p_121920_.minBigX().max(p_121920_.maxBigX()), p_121920_.minBigY().max(p_121920_.maxBigY()), p_121920_.minBigZ().max(p_121920_.maxBigZ()));
    }
 
    public static Stream<BlockPos> m_121921_(AABB p_121922_) {
-      return m_121886_(Mth.m_14107_(p_121922_.f_82288_), Mth.m_14107_(p_121922_.f_82289_), Mth.m_14107_(p_121922_.f_82290_), Mth.m_14107_(p_121922_.f_82291_), Mth.m_14107_(p_121922_.f_82292_), Mth.m_14107_(p_121922_.f_82293_));
-   }
-
-   public static Stream<BlockPos> m_121886_(int p_121887_, int p_121888_, int p_121889_, int p_121890_, int p_121891_, int p_121892_) {
-      return StreamSupport.stream(m_121976_(p_121887_, p_121888_, p_121889_, p_121890_, p_121891_, p_121892_).spliterator(), false);
-   }
-
-   public static Iterable<BlockPos> m_121976_(int p_121977_, int p_121978_, int p_121979_, int p_121980_, int p_121981_, int p_121982_) {
-      int i = p_121980_ - p_121977_ + 1;
-      int j = p_121981_ - p_121978_ + 1;
-      int k = p_121982_ - p_121979_ + 1;
-      int l = i * j * k;
+      return betweenClosedStream(p_121922_.f_82288_.floor(), p_121922_.f_82289_.floor(), p_121922_.f_82290_.floor(), p_121922_.f_82291_.floor(), p_121922_.f_82292_.floor(), p_121922_.f_82293_.floor());
+   }
+
+   public static Stream<BlockPos> betweenClosedStream(me.alphamode.mclong.math.BigInteger p_121887_, me.alphamode.mclong.math.BigInteger p_121888_, me.alphamode.mclong.math.BigInteger p_121889_, me.alphamode.mclong.math.BigInteger p_121890_, me.alphamode.mclong.math.BigInteger p_121891_, me.alphamode.mclong.math.BigInteger p_121892_) {
+      return StreamSupport.stream(betweenClosed(p_121887_, p_121888_, p_121889_, p_121890_, p_121891_, p_121892_).spliterator(), false);
+   }
+
+   public static Iterable<BlockPos> betweenClosed(me.alphamode.mclong.math.BigInteger p_121977_, me.alphamode.mclong.math.BigInteger p_121978_, me.alphamode.mclong.math.BigInteger p_121979_, me.alphamode.mclong.math.BigInteger p_121980_, me.alphamode.mclong.math.BigInteger p_121981_, me.alphamode.mclong.math.BigInteger p_121982_) {
+      long i = p_121980_.subtract(p_121977_).add(me.alphamode.mclong.math.BigInteger.ONE).longValue();
+      long j = p_121981_.subtract(p_121978_).add(me.alphamode.mclong.math.BigInteger.ONE).longValue();
+      long k = p_121982_.subtract(p_121979_).add(me.alphamode.mclong.math.BigInteger.ONE).longValue();
+      long l = i * j * k;
       return () -> {
          return new AbstractIterator<BlockPos>() {
             private final BlockPos.MutableBlockPos f_122090_ = new BlockPos.MutableBlockPos();
@@ -358,49 +_,75 @@
                if (this.f_122091_ == l) {
                   return this.endOfData();
                } else {
-                  int i1 = this.f_122091_ % i;
-                  int j1 = this.f_122091_ / i;
-                  int k1 = j1 % j;
-                  int l1 = j1 / j;
+                  long i1 = this.f_122091_ % i;
+                  long j1 = this.f_122091_ / i;
+                  long k1 = j1 % j;
+                  long l1 = j1 / j;
                   ++this.f_122091_;
-                  return this.f_122090_.m_122178_(p_121977_ + i1, p_121978_ + k1, p_121979_ + l1);
-               }
-            }
-         };
-      };
-   }
-
-   public static Iterable<BlockPos.MutableBlockPos> m_121935_(BlockPos p_121936_, int p_121937_, Direction p_121938_, Direction p_121939_) {
+                  return this.f_122090_.set(p_121977_.add(i1), p_121978_.add(k1), p_121979_.add(l1));
+               }
+            }
+         };
+      };
+   }
+
+   public static Iterable<BlockPos> betweenClosed(long p_121977_, long p_121978_, long p_121979_, long p_121980_, long p_121981_, long p_121982_) {
+      long i = p_121980_ - p_121977_ + 1;
+      long j = p_121981_ - p_121978_ + 1;
+      long k = p_121982_ - p_121979_ + 1;
+      long l = i * j * k;
+      return () -> {
+         return new AbstractIterator<BlockPos>() {
+            private final BlockPos.MutableBlockPos f_122106_ = new BlockPos.MutableBlockPos();
+            private int index;
+
+            protected BlockPos computeNext() {
+               if (this.index == l) {
+                  return this.endOfData();
+               } else {
+                  long i1 = this.index % i;
+                  long j1 = this.index / i;
+                  long k1 = j1 % j;
+                  long l1 = j1 / j;
+                  ++this.index;
+                  return this.f_122106_.set(p_121977_ + i1, p_121978_ + k1, p_121979_ + l1);
+               }
+            }
+         };
+      };
+   }
+
+   public static Iterable<BlockPos.MutableBlockPos> spiralAround(BlockPos p_121936_, long p_121937_, Direction p_121938_, Direction p_121939_) {
       Validate.validState(p_121938_.m_122434_() != p_121939_.m_122434_(), "The two directions cannot be on the same axis");
       return () -> {
          return new AbstractIterator<BlockPos.MutableBlockPos>() {
-            private final Direction[] f_122105_ = new Direction[]{p_121938_, p_121939_, p_121938_.m_122424_(), p_121939_.m_122424_()};
-            private final BlockPos.MutableBlockPos f_122106_ = p_121936_.m_122032_().m_122173_(p_121939_);
-            private final int f_122107_ = 4 * p_121937_;
-            private int f_122108_ = -1;
-            private int f_122109_;
-            private int f_122110_;
-            private int f_122111_ = this.f_122106_.m_123341_();
-            private int f_122112_ = this.f_122106_.m_123342_();
-            private int f_122113_ = this.f_122106_.m_123343_();
+            private final Direction[] directions = new Direction[]{p_121938_, p_121939_, p_121938_.m_122424_(), p_121939_.m_122424_()};
+            private final BlockPos.MutableBlockPos cursor = p_121936_.m_122032_().m_122173_(p_121939_);
+            private final long legs = 4 * p_121937_;
+            private int leg = -1;
+            private int legSize;
+            private int legIndex;
+            private me.alphamode.mclong.math.BigInteger lastX = this.cursor.getBigX();
+            private me.alphamode.mclong.math.BigInteger lastY = this.cursor.getBigY();
+            private me.alphamode.mclong.math.BigInteger lastZ = this.cursor.getBigZ();
 
             protected BlockPos.MutableBlockPos computeNext() {
-               this.f_122106_.m_122178_(this.f_122111_, this.f_122112_, this.f_122113_).m_122173_(this.f_122105_[(this.f_122108_ + 4) % 4]);
-               this.f_122111_ = this.f_122106_.m_123341_();
-               this.f_122112_ = this.f_122106_.m_123342_();
-               this.f_122113_ = this.f_122106_.m_123343_();
-               if (this.f_122110_ >= this.f_122109_) {
-                  if (this.f_122108_ >= this.f_122107_) {
+               this.cursor.set(this.lastX, this.lastY, this.lastZ).m_122173_(this.directions[(this.leg + 4) % 4]);
+               this.lastX = this.cursor.getBigX();
+               this.lastY = this.cursor.getBigY();
+               this.lastZ = this.cursor.getBigZ();
+               if (this.legIndex >= this.legSize) {
+                  if (this.leg >= this.legs) {
                      return this.endOfData();
                   }
 
-                  ++this.f_122108_;
-                  this.f_122110_ = 0;
-                  this.f_122109_ = this.f_122108_ / 2 + 1;
+                  ++this.leg;
+                  this.legIndex = 0;
+                  this.legSize = this.leg / 2 + 1;
                }
 
-               ++this.f_122110_;
-               return this.f_122106_;
+               ++this.legIndex;
+               return this.cursor;
             }
          };
       };
@@ -408,7 +_,7 @@
 
    public static int m_276833_(BlockPos p_278078_, int p_277385_, int p_277666_, BiConsumer<BlockPos, Consumer<BlockPos>> p_277755_, Predicate<BlockPos> p_278094_) {
       Queue<Pair<BlockPos, Integer>> queue = new ArrayDeque<>();
-      LongSet longset = new LongOpenHashSet();
+      it.unimi.dsi.fastutil.objects.ObjectSet<BlockPos> longset = new it.unimi.dsi.fastutil.objects.ObjectOpenHashSet<>();
       queue.add(Pair.of(p_278078_, 0));
       int i = 0;
 
@@ -416,8 +_,7 @@
          Pair<BlockPos, Integer> pair = queue.poll();
          BlockPos blockpos = pair.getLeft();
          int j = pair.getRight();
-         long k = blockpos.m_121878_();
-         if (longset.add(k) && p_278094_.test(blockpos)) {
+         if (longset.add(blockpos) && p_278094_.test(blockpos)) {
             ++i;
             if (i >= p_277666_) {
                return i;
@@ -439,110 +_,161 @@
          this(0, 0, 0);
       }
 
-      public MutableBlockPos(int p_122130_, int p_122131_, int p_122132_) {
+      public MutableBlockPos(me.alphamode.mclong.math.BigInteger x, me.alphamode.mclong.math.BigInteger y, me.alphamode.mclong.math.BigInteger z) {
+         super(x, y, z);
+      }
+
+      public MutableBlockPos(long p_122130_, long p_122131_, long p_122132_) {
          super(p_122130_, p_122131_, p_122132_);
       }
 
+      public MutableBlockPos(me.alphamode.mclong.math.BigDecimal p_122126_, me.alphamode.mclong.math.BigDecimal p_122127_, me.alphamode.mclong.math.BigDecimal p_122128_) {
+         this(Mth.lfloor(p_122126_), Mth.lfloor(p_122127_), Mth.lfloor(p_122128_));
+      }
+
       public MutableBlockPos(double p_122126_, double p_122127_, double p_122128_) {
-         this(Mth.m_14107_(p_122126_), Mth.m_14107_(p_122127_), Mth.m_14107_(p_122128_));
-      }
-
-      public BlockPos m_7918_(int p_122163_, int p_122164_, int p_122165_) {
-         return super.m_7918_(p_122163_, p_122164_, p_122165_).m_7949_();
-      }
-
-      public BlockPos m_142393_(int p_175305_) {
-         return super.m_142393_(p_175305_).m_7949_();
-      }
-
-      public BlockPos m_5484_(Direction p_122152_, int p_122153_) {
-         return super.m_5484_(p_122152_, p_122153_).m_7949_();
-      }
-
-      public BlockPos m_5487_(Direction.Axis p_122145_, int p_122146_) {
-         return super.m_5487_(p_122145_, p_122146_).m_7949_();
+         this(Mth.m_14134_(p_122126_), Mth.m_14134_(p_122127_), Mth.m_14134_(p_122128_));
+      }
+
+      public BlockPos offset(long p_122163_, long p_122164_, long p_122165_) {
+         return super.offset(p_122163_, p_122164_, p_122165_).m_7949_();
+      }
+
+      public BlockPos multiply(long p_175305_) {
+         return super.multiply(p_175305_).m_7949_();
+      }
+
+      public BlockPos relative(Direction p_122152_, long p_122153_) {
+         return super.relative(p_122152_, p_122153_).m_7949_();
+      }
+
+      public BlockPos relative(Direction.Axis p_122145_, long p_122146_) {
+         return super.relative(p_122145_, p_122146_).m_7949_();
       }
 
       public BlockPos m_7954_(Rotation p_122138_) {
          return super.m_7954_(p_122138_).m_7949_();
       }
 
-      public BlockPos.MutableBlockPos m_122178_(int p_122179_, int p_122180_, int p_122181_) {
-         this.m_142451_(p_122179_);
-         this.m_142448_(p_122180_);
-         this.m_142443_(p_122181_);
+      public BlockPos.MutableBlockPos set(long p_122179_, long p_122180_, long p_122181_) {
+         this.setX(p_122179_);
+         this.setY(p_122180_);
+         this.setZ(p_122181_);
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos set(me.alphamode.mclong.math.BigInteger p_122179_, me.alphamode.mclong.math.BigInteger p_122180_, me.alphamode.mclong.math.BigInteger p_122181_) {
+         this.setX(p_122179_);
+         this.setY(p_122180_);
+         this.setZ(p_122181_);
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos set(me.alphamode.mclong.math.BigInteger p_122179_, long p_122180_, me.alphamode.mclong.math.BigInteger p_122181_) {
+         this.setX(p_122179_);
+         this.setY(p_122180_);
+         this.setZ(p_122181_);
          return this;
       }
 
       public BlockPos.MutableBlockPos m_122169_(double p_122170_, double p_122171_, double p_122172_) {
-         return this.m_122178_(Mth.m_14107_(p_122170_), Mth.m_14107_(p_122171_), Mth.m_14107_(p_122172_));
-      }
-
-      public BlockPos.MutableBlockPos m_122190_(Vec3i p_122191_) {
-         return this.m_122178_(p_122191_.m_123341_(), p_122191_.m_123342_(), p_122191_.m_123343_());
+         return this.set(Mth.m_14134_(p_122170_), Mth.m_14134_(p_122171_), Mth.m_14134_(p_122172_));
+      }
+
+      public BlockPos.MutableBlockPos set(me.alphamode.mclong.math.BigDecimal x, me.alphamode.mclong.math.BigDecimal y, me.alphamode.mclong.math.BigDecimal z) {
+         this.setX(x.setScale(0, java.math.RoundingMode.FLOOR).toBigInteger());
+         this.setY(y.setScale(0, java.math.RoundingMode.FLOOR).toBigInteger());
+         this.setZ(z.setScale(0, java.math.RoundingMode.FLOOR).toBigInteger());
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos set(me.alphamode.mclong.math.BigDecimal x, double y, me.alphamode.mclong.math.BigDecimal z) {
+         this.setX(x.setScale(0, java.math.RoundingMode.FLOOR).toBigInteger());
+         this.setY(Mth.m_14134_(y));
+         this.setZ(z.setScale(0, java.math.RoundingMode.FLOOR).toBigInteger());
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos set(me.alphamode.mclong.core.Vec3l p_122191_) {
+         return this.set(p_122191_.getBigX(), p_122191_.getBigY(), p_122191_.getBigZ());
       }
 
       public BlockPos.MutableBlockPos m_122188_(long p_122189_) {
-         return this.m_122178_(m_121983_(p_122189_), m_122008_(p_122189_), m_122015_(p_122189_));
-      }
-
-      public BlockPos.MutableBlockPos m_122139_(AxisCycle p_122140_, int p_122141_, int p_122142_, int p_122143_) {
-         return this.m_122178_(p_122140_.m_7758_(p_122141_, p_122142_, p_122143_, Direction.Axis.X), p_122140_.m_7758_(p_122141_, p_122142_, p_122143_, Direction.Axis.Y), p_122140_.m_7758_(p_122141_, p_122142_, p_122143_, Direction.Axis.Z));
-      }
-
-      public BlockPos.MutableBlockPos m_122159_(Vec3i p_122160_, Direction p_122161_) {
-         return this.m_122178_(p_122160_.m_123341_() + p_122161_.m_122429_(), p_122160_.m_123342_() + p_122161_.m_122430_(), p_122160_.m_123343_() + p_122161_.m_122431_());
-      }
-
-      public BlockPos.MutableBlockPos m_122154_(Vec3i p_122155_, int p_122156_, int p_122157_, int p_122158_) {
-         return this.m_122178_(p_122155_.m_123341_() + p_122156_, p_122155_.m_123342_() + p_122157_, p_122155_.m_123343_() + p_122158_);
-      }
-
-      public BlockPos.MutableBlockPos m_175306_(Vec3i p_175307_, Vec3i p_175308_) {
-         return this.m_122178_(p_175307_.m_123341_() + p_175308_.m_123341_(), p_175307_.m_123342_() + p_175308_.m_123342_(), p_175307_.m_123343_() + p_175308_.m_123343_());
+         return this.set(getX(p_122189_), getY(p_122189_), getZ(p_122189_));
+      }
+
+      public BlockPos.MutableBlockPos set(AxisCycle p_122140_, long p_122141_, long p_122142_, long p_122143_) {
+         return this.m_122169_(p_122140_.m_142567_(p_122141_, p_122142_, p_122143_, Direction.Axis.X), p_122140_.m_142567_(p_122141_, p_122142_, p_122143_, Direction.Axis.Y), p_122140_.m_142567_(p_122141_, p_122142_, p_122143_, Direction.Axis.Z));
+      }
+
+      public BlockPos.MutableBlockPos setWithOffset(me.alphamode.mclong.core.Vec3l p_122160_, Direction p_122161_) {
+         return this.set(p_122160_.getBigX().add(p_122161_.m_122429_()), p_122160_.getBigY().add(p_122161_.m_122430_()), p_122160_.getBigZ().add(p_122161_.m_122431_()));
+      }
+
+      public BlockPos.MutableBlockPos setWithOffset(me.alphamode.mclong.core.Vec3l p_122155_, long p_122156_, long p_122157_, long p_122158_) {
+         return this.set(p_122155_.getBigX().add(p_122156_), p_122155_.getBigY().add(p_122157_), p_122155_.getBigZ().add(p_122158_));
+      }
+
+      public BlockPos.MutableBlockPos setWithOffset(me.alphamode.mclong.core.Vec3l p_175307_, me.alphamode.mclong.core.Vec3l p_175308_) {
+         return this.set(p_175307_.getBigX().add(p_175308_.getBigX()), p_175307_.getBigY().add(p_175308_.getBigY()), p_175307_.getBigZ().add(p_175308_.getBigZ()));
       }
 
       public BlockPos.MutableBlockPos m_122173_(Direction p_122174_) {
-         return this.m_122175_(p_122174_, 1);
-      }
-
-      public BlockPos.MutableBlockPos m_122175_(Direction p_122176_, int p_122177_) {
-         return this.m_122178_(this.m_123341_() + p_122176_.m_122429_() * p_122177_, this.m_123342_() + p_122176_.m_122430_() * p_122177_, this.m_123343_() + p_122176_.m_122431_() * p_122177_);
-      }
-
-      public BlockPos.MutableBlockPos m_122184_(int p_122185_, int p_122186_, int p_122187_) {
-         return this.m_122178_(this.m_123341_() + p_122185_, this.m_123342_() + p_122186_, this.m_123343_() + p_122187_);
-      }
-
-      public BlockPos.MutableBlockPos m_122193_(Vec3i p_122194_) {
-         return this.m_122178_(this.m_123341_() + p_122194_.m_123341_(), this.m_123342_() + p_122194_.m_123342_(), this.m_123343_() + p_122194_.m_123343_());
-      }
-
-      public BlockPos.MutableBlockPos m_122147_(Direction.Axis p_122148_, int p_122149_, int p_122150_) {
+         return this.move(p_122174_, 1);
+      }
+
+      public BlockPos.MutableBlockPos move(Direction p_122176_, long p_122177_) {
+         return this.set(this.getBigX().add(p_122176_.m_122429_() * p_122177_), this.getBigY().add(p_122176_.m_122430_() * p_122177_), this.getBigZ().add(p_122176_.m_122431_() * p_122177_));
+      }
+
+      public BlockPos.MutableBlockPos move(long p_122185_, long p_122186_, long p_122187_) {
+         return this.set(this.getBigX().add(p_122185_), this.getBigY().add(p_122186_), this.getBigZ().add(p_122187_));
+      }
+
+      public BlockPos.MutableBlockPos move(me.alphamode.mclong.core.Vec3l p_122194_) {
+         return this.set(this.getBigX().add(p_122194_.getBigX()), this.getBigY().add(p_122194_.getY()), this.getBigZ().add(p_122194_.getBigZ()));
+      }
+
+      public BlockPos.MutableBlockPos clamp(Direction.Axis p_122148_, me.alphamode.mclong.math.BigInteger p_122149_, me.alphamode.mclong.math.BigInteger p_122150_) {
          switch (p_122148_) {
             case X:
-               return this.m_122178_(Mth.m_14045_(this.m_123341_(), p_122149_, p_122150_), this.m_123342_(), this.m_123343_());
+               return this.set(Mth.clamp(this.getBigX(), p_122149_, p_122150_), this.getBigY(), this.getBigZ());
             case Y:
-               return this.m_122178_(this.m_123341_(), Mth.m_14045_(this.m_123342_(), p_122149_, p_122150_), this.m_123343_());
+               return this.set(this.getBigX(), Mth.clamp(this.getBigY(), p_122149_, p_122150_), this.getBigZ());
             case Z:
-               return this.m_122178_(this.m_123341_(), this.m_123342_(), Mth.m_14045_(this.m_123343_(), p_122149_, p_122150_));
+               return this.set(this.getBigX(), this.getBigY(), Mth.clamp(this.getBigZ(), p_122149_, p_122150_));
             default:
                throw new IllegalStateException("Unable to clamp axis " + p_122148_);
          }
       }
 
-      public BlockPos.MutableBlockPos m_142451_(int p_175341_) {
-         super.m_142451_(p_175341_);
-         return this;
-      }
-
-      public BlockPos.MutableBlockPos m_142448_(int p_175343_) {
-         super.m_142448_(p_175343_);
-         return this;
-      }
-
-      public BlockPos.MutableBlockPos m_142443_(int p_175345_) {
-         super.m_142443_(p_175345_);
+      public BlockPos.MutableBlockPos setX(long p_175341_) {
+         super.setX(p_175341_);
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos setY(long p_175343_) {
+         super.setY(p_175343_);
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos setZ(long p_175345_) {
+         super.setZ(p_175345_);
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos setX(me.alphamode.mclong.math.BigInteger x) {
+         super.setX(x);
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos setY(me.alphamode.mclong.math.BigInteger y) {
+         super.setY(y);
+         return this;
+      }
+
+      public BlockPos.MutableBlockPos setZ(me.alphamode.mclong.math.BigInteger z) {
+         super.setZ(z);
          return this;
       }
 
