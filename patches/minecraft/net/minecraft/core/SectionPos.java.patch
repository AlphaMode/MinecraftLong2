--- a/net/minecraft/core/SectionPos.java
+++ b/net/minecraft/core/SectionPos.java
@@ -10,7 +_,7 @@
 import net.minecraft.world.level.chunk.ChunkAccess;
 import net.minecraft.world.level.entity.EntityAccess;
 
-public class SectionPos extends Vec3i {
+public class SectionPos extends me.alphamode.mclong.core.Vec3l {
    public static final int f_175535_ = 4;
    public static final int f_175536_ = 16;
    public static final int f_175539_ = 15;
@@ -29,20 +_,40 @@
    private static final int f_175550_ = 0;
    private static final int f_175551_ = 4;
 
+   SectionPos(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ) {
+      super(pX, pY, pZ);
+   }
+
+   SectionPos(me.alphamode.mclong.math.BigInteger pX, long pY, me.alphamode.mclong.math.BigInteger pZ) {
+      super(pX, me.alphamode.mclong.math.BigInteger.valueOf(pY), pZ);
+   }
+
+   SectionPos(long pX, long pY, long pZ) {
+      super(pX, pY, pZ);
+   }
+
    SectionPos(int p_123162_, int p_123163_, int p_123164_) {
       super(p_123162_, p_123163_, p_123164_);
    }
 
-   public static SectionPos m_123173_(int p_123174_, int p_123175_, int p_123176_) {
-      return new SectionPos(p_123174_, p_123175_, p_123176_);
+   public static SectionPos of(me.alphamode.mclong.math.BigInteger x, me.alphamode.mclong.math.BigInteger y, me.alphamode.mclong.math.BigInteger z) {
+      return new SectionPos(x, y, z);
+   }
+
+   public static SectionPos of(me.alphamode.mclong.math.BigInteger x, long y, me.alphamode.mclong.math.BigInteger z) {
+      return new SectionPos(x, y, z);
+   }
+
+   public static SectionPos of(long pChunkX, long pChunkY, long pChunkZ) {
+      return new SectionPos(pChunkX, pChunkY, pChunkZ);
    }
 
    public static SectionPos m_123199_(BlockPos p_123200_) {
-      return new SectionPos(m_123171_(p_123200_.m_123341_()), m_123171_(p_123200_.m_123342_()), m_123171_(p_123200_.m_123343_()));
+      return new SectionPos(blockToSectionCoord(p_123200_.getBigX()), blockToSectionCoord(p_123200_.getBigY()), blockToSectionCoord(p_123200_.getBigZ()));
    }
 
-   public static SectionPos m_123196_(ChunkPos p_123197_, int p_123198_) {
-      return new SectionPos(p_123197_.f_45578_, p_123198_, p_123197_.f_45579_);
+   public static SectionPos of(ChunkPos pChunkPos, long pY) {
+      return new SectionPos(pChunkPos.getX(), me.alphamode.mclong.math.BigInteger.valueOf(pY), pChunkPos.getZ());
    }
 
    public static SectionPos m_235861_(EntityAccess p_235862_) {
@@ -50,46 +_,74 @@
    }
 
    public static SectionPos m_235863_(Position p_235864_) {
-      return new SectionPos(m_235865_(p_235864_.m_7096_()), m_235865_(p_235864_.m_7098_()), m_235865_(p_235864_.m_7094_()));
+      return new SectionPos(blockToSectionCoord(p_235864_.getX()), blockToSectionCoord(p_235864_.getY()), blockToSectionCoord(p_235864_.getZ()));
    }
 
    public static SectionPos m_123184_(long p_123185_) {
-      return new SectionPos(m_123213_(p_123185_), m_123225_(p_123185_), m_123230_(p_123185_));
+      return new SectionPos(x(p_123185_), y(p_123185_), z(p_123185_));
    }
 
    public static SectionPos m_175562_(ChunkAccess p_175563_) {
-      return m_123196_(p_175563_.m_7697_(), p_175563_.m_151560_());
+      return of(p_175563_.m_7697_(), p_175563_.getMinSection());
    }
 
    public static long m_123191_(long p_123192_, Direction p_123193_) {
-      return m_123186_(p_123192_, p_123193_.m_122429_(), p_123193_.m_122430_(), p_123193_.m_122431_());
-   }
-
-   public static long m_123186_(long p_123187_, int p_123188_, int p_123189_, int p_123190_) {
-      return m_123209_(m_123213_(p_123187_) + p_123188_, m_123225_(p_123187_) + p_123189_, m_123230_(p_123187_) + p_123190_);
-   }
-
-   public static int m_175552_(double p_175553_) {
-      return m_123171_(Mth.m_14107_(p_175553_));
-   }
-
-   public static int m_123171_(int p_123172_) {
-      return p_123172_ >> 4;
-   }
-
-   public static int m_235865_(double p_235866_) {
-      return Mth.m_14107_(p_235866_) >> 4;
-   }
-
-   public static int m_123207_(int p_123208_) {
-      return p_123208_ & 15;
+      return offset(p_123192_, p_123193_.m_122429_(), p_123193_.m_122430_(), p_123193_.m_122431_());
+   }
+
+   public static long offset(long pPacked, long pDx, long pDy, long pDz) {
+      return asLong(x(pPacked) + pDx, y(pPacked) + pDy, z(pPacked) + pDz);
+   }
+
+   public SectionPos offset(long num) {
+      return of(getBigX(), getBigY().add(num), getBigZ().add(num));
+   }
+
+   public SectionPos relative(Direction pDirection) {
+      return this.relative(pDirection, 1);
+   }
+
+   public SectionPos relative(Direction pDirection, long pDistance) {
+      return pDistance == 0 ? this : new SectionPos(this.getBigX().add(pDirection.m_122429_() * pDistance), this.getBigY().add(pDirection.m_122430_() * pDistance), this.getBigZ().add(pDirection.m_122431_() * pDistance));
+   }
+
+   public static long posToSectionCoord(double pPos) {
+      return blockToSectionCoord(Mth.m_14134_(pPos));
+   }
+
+   public static me.alphamode.mclong.math.BigInteger posToSectionCoord(me.alphamode.mclong.math.BigDecimal val) {
+      return blockToSectionCoord(Mth.lfloor(val));
+   }
+
+   public static me.alphamode.mclong.math.BigInteger blockToSectionCoord(me.alphamode.mclong.math.BigInteger block) {
+      return block.shiftRight(4);
+   }
+
+   public static long blockToSectionCoord(long pBlockCoord) {
+      return pBlockCoord >> 4;
+   }
+
+   public static long blockToSectionCoord(double pCoord) {
+      return Mth.m_14134_(pCoord) >> 4;
+   }
+
+   public static me.alphamode.mclong.math.BigInteger blockToSectionCoord(me.alphamode.mclong.math.BigDecimal blockCord) {
+      return Mth.lfloor(blockCord).shiftRight(4);
+   }
+
+   public static long sectionRelative(long pRel) {
+      return pRel & 15;
+   }
+
+   public static me.alphamode.mclong.math.BigInteger sectionRelative(me.alphamode.mclong.math.BigInteger pRel) {
+      return pRel.and(me.alphamode.mclong.core.BigConstants.Ints.FIFTEEN);
    }
 
    public static short m_123218_(BlockPos p_123219_) {
-      int i = m_123207_(p_123219_.m_123341_());
-      int j = m_123207_(p_123219_.m_123342_());
-      int k = m_123207_(p_123219_.m_123343_());
-      return (short)(i << 8 | k << 4 | j << 0);
+      me.alphamode.mclong.math.BigInteger i = sectionRelative(p_123219_.getBigX());
+      me.alphamode.mclong.math.BigInteger j = sectionRelative(p_123219_.getBigY());
+      me.alphamode.mclong.math.BigInteger k = sectionRelative(p_123219_.getBigZ());
+      return (short)(i.shiftLeft(8).or(k.shiftLeft(4)).or(j.shiftLeft(0))).shortValue();
    }
 
    public static int m_123204_(short p_123205_) {
@@ -104,84 +_,128 @@
       return p_123228_ >>> 4 & 15;
    }
 
-   public int m_123232_(short p_123233_) {
-      return this.m_123229_() + m_123204_(p_123233_);
-   }
-
-   public int m_123237_(short p_123238_) {
-      return this.m_123234_() + m_123220_(p_123238_);
-   }
-
-   public int m_123242_(short p_123243_) {
-      return this.m_123239_() + m_123227_(p_123243_);
+   public me.alphamode.mclong.math.BigInteger relativeToBlockX(short pX) {
+      return this.minBlockX().add(m_123204_(pX));
+   }
+
+   public me.alphamode.mclong.math.BigInteger relativeToBlockY(short pY) {
+      return this.minBlockY().add(m_123220_(pY));
+   }
+
+   public me.alphamode.mclong.math.BigInteger relativeToBlockZ(short pZ) {
+      return this.minBlockZ().add(m_123227_(pZ));
    }
 
    public BlockPos m_123245_(short p_123246_) {
-      return new BlockPos(this.m_123232_(p_123246_), this.m_123237_(p_123246_), this.m_123242_(p_123246_));
-   }
-
-   public static int m_123223_(int p_123224_) {
-      return p_123224_ << 4;
-   }
-
-   public static int m_175554_(int p_175555_, int p_175556_) {
-      return m_123223_(p_175555_) + p_175556_;
-   }
-
-   public static int m_123213_(long p_123214_) {
-      return (int)(p_123214_ << 0 >> 42);
-   }
-
-   public static int m_123225_(long p_123226_) {
-      return (int)(p_123226_ << 44 >> 44);
-   }
-
-   public static int m_123230_(long p_123231_) {
-      return (int)(p_123231_ << 22 >> 42);
-   }
-
-   public int m_123170_() {
-      return this.m_123341_();
-   }
-
-   public int m_123206_() {
-      return this.m_123342_();
-   }
-
-   public int m_123222_() {
-      return this.m_123343_();
-   }
-
-   public int m_123229_() {
-      return m_123223_(this.m_123170_());
-   }
-
-   public int m_123234_() {
-      return m_123223_(this.m_123206_());
-   }
-
-   public int m_123239_() {
-      return m_123223_(this.m_123222_());
-   }
-
-   public int m_123244_() {
-      return m_175554_(this.m_123170_(), 15);
-   }
-
-   public int m_123247_() {
-      return m_175554_(this.m_123206_(), 15);
-   }
-
-   public int m_123248_() {
-      return m_175554_(this.m_123222_(), 15);
+      return new BlockPos(this.relativeToBlockX(p_123246_), this.relativeToBlockY(p_123246_), this.relativeToBlockZ(p_123246_));
+   }
+
+   public static long sectionToBlockCoord(long pSectionCoord) {
+      return pSectionCoord << 4;
+   }
+
+   public static me.alphamode.mclong.math.BigInteger sectionToBlockCoord(me.alphamode.mclong.math.BigInteger pSectionCoord) {
+      return pSectionCoord.shiftLeft(4);
+   }
+
+   public static me.alphamode.mclong.math.BigInteger sectionToBlockCoord(me.alphamode.mclong.math.BigInteger blockCord, long offset) {
+      return sectionToBlockCoord(blockCord).add(me.alphamode.mclong.math.BigInteger.valueOf(offset));
+   }
+
+   public static me.alphamode.mclong.math.BigInteger sectionToBlockCoord(me.alphamode.mclong.math.BigInteger blockCord, me.alphamode.mclong.math.BigInteger offset) {
+      return sectionToBlockCoord(blockCord).add(offset);
+   }
+
+   public static me.alphamode.mclong.math.BigInteger sectionToBlockCoord(me.alphamode.mclong.math.BigInteger blockCord, int offset) {
+      return sectionToBlockCoord(blockCord).add(offset);
+   }
+
+   public static long sectionToBlockCoord(long pPos, long pOffset) {
+      return sectionToBlockCoord(pPos) + pOffset;
+   }
+
+   public static long x(long pPacked) {
+      return (pPacked << 0 >> 42);
+   }
+
+   public static long y(long pPacked) {
+      return (pPacked << 44 >> 44);
+   }
+
+   public static long z(long pPacked) {
+      return (pPacked << 22 >> 42);
+   }
+
+   public long x() {
+      return this.getX();
+   }
+
+   public long y() {
+      return this.getY();
+   }
+
+   public long z() {
+      return this.getZ();
+   }
+
+   public me.alphamode.mclong.math.BigInteger minBlockX() {
+      return sectionToBlockCoord(this.getBigX());
+   }
+
+   public me.alphamode.mclong.math.BigInteger minBlockY() {
+      return sectionToBlockCoord(this.getBigY());
+   }
+
+   public me.alphamode.mclong.math.BigInteger minBlockZ() {
+      return sectionToBlockCoord(this.getBigZ());
+   }
+
+   public me.alphamode.mclong.math.BigInteger minBlockBigX() {
+      return sectionToBlockCoord(this.getBigX());
+   }
+
+   public me.alphamode.mclong.math.BigInteger minBlockBigY() {
+      return sectionToBlockCoord(this.getBigY());
+   }
+
+   public me.alphamode.mclong.math.BigInteger minBlockBigZ() {
+      return sectionToBlockCoord(this.getBigZ());
+   }
+
+   public long maxBlockX() {
+      return sectionToBlockCoord(this.x(), 15);
+   }
+
+   public long maxBlockY() {
+      return sectionToBlockCoord(this.y(), 15);
+   }
+
+   public long maxBlockZ() {
+      return sectionToBlockCoord(this.z(), 15);
+   }
+
+   public me.alphamode.mclong.math.BigInteger maxBlockBigX() {
+      return sectionToBlockCoord(this.getBigX(), 15);
+   }
+
+   public me.alphamode.mclong.math.BigInteger maxBlockBigY() {
+      return sectionToBlockCoord(this.getBigY(), 15);
+   }
+
+   public me.alphamode.mclong.math.BigInteger maxBlockBigZ() {
+      return sectionToBlockCoord(this.getBigZ(), 15);
    }
 
    public static long m_123235_(long p_123236_) {
-      return m_123209_(m_123171_(BlockPos.m_121983_(p_123236_)), m_123171_(BlockPos.m_122008_(p_123236_)), m_123171_(BlockPos.m_122015_(p_123236_)));
+      return asLong(blockToSectionCoord(BlockPos.getX(p_123236_)), blockToSectionCoord(BlockPos.getY(p_123236_)), blockToSectionCoord(BlockPos.getZ(p_123236_)));
    }
 
    public static long m_284454_(int p_285381_, int p_285068_) {
-      return m_123240_(m_123209_(p_285381_, 0, p_285068_));
+      return m_123240_(asLong(p_285381_, 0, p_285068_));
+   }
+
+   public static SectionPos getZeroNode(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pZ) {
+      return of(pX, me.alphamode.mclong.math.BigInteger.ZERO, pZ);
    }
 
    public static long m_123240_(long p_123241_) {
@@ -189,61 +_,61 @@
    }
 
    public BlockPos m_123249_() {
-      return new BlockPos(m_123223_(this.m_123170_()), m_123223_(this.m_123206_()), m_123223_(this.m_123222_()));
+      return new BlockPos(sectionToBlockCoord(this.getBigX()), sectionToBlockCoord(this.getBigY()), sectionToBlockCoord(this.getBigZ()));
    }
 
    public BlockPos m_123250_() {
       int i = 8;
-      return this.m_123249_().m_7918_(8, 8, 8);
+      return this.m_123249_().offset(8, 8, 8);
    }
 
    public ChunkPos m_123251_() {
-      return new ChunkPos(this.m_123170_(), this.m_123222_());
+      return new ChunkPos(this.getBigX(), this.getBigZ());
    }
 
    public static long m_175568_(BlockPos p_175569_) {
-      return m_123209_(m_123171_(p_175569_.m_123341_()), m_123171_(p_175569_.m_123342_()), m_123171_(p_175569_.m_123343_()));
+      return asLong(blockToSectionCoord(p_175569_.getBigX()).longValue(), blockToSectionCoord(p_175569_.getBigY()).longValue(), blockToSectionCoord(p_175569_.getBigZ()).longValue());
    }
 
-   public static long m_123209_(int p_123210_, int p_123211_, int p_123212_) {
+   public static long asLong(long pX, long pY, long pZ) {
       long i = 0L;
-      i |= ((long)p_123210_ & 4194303L) << 42;
-      i |= ((long)p_123211_ & 1048575L) << 0;
-      return i | ((long)p_123212_ & 4194303L) << 20;
+      i |= ((long)pX & 4194303L) << 42;
+      i |= ((long)pY & 1048575L) << 0;
+      return i | ((long)pZ & 4194303L) << 20;
    }
 
    public long m_123252_() {
-      return m_123209_(this.m_123170_(), this.m_123206_(), this.m_123222_());
+      return asLong(this.x(), this.y(), this.z());
    }
 
-   public SectionPos m_7918_(int p_175571_, int p_175572_, int p_175573_) {
-      return p_175571_ == 0 && p_175572_ == 0 && p_175573_ == 0 ? this : new SectionPos(this.m_123170_() + p_175571_, this.m_123206_() + p_175572_, this.m_123222_() + p_175573_);
+   public SectionPos offset(long pDx, long pDy, long pDz) {
+      return pDx == 0 && pDy == 0 && pDz == 0 ? this : new SectionPos(this.getBigX().add(pDx), this.getBigY().add(pDy), this.getBigZ().add(pDz));
    }
 
    public Stream<BlockPos> m_123253_() {
-      return BlockPos.m_121886_(this.m_123229_(), this.m_123234_(), this.m_123239_(), this.m_123244_(), this.m_123247_(), this.m_123248_());
+      return BlockPos.betweenClosedStream(this.minBlockBigX(), this.minBlockBigY(), this.minBlockBigZ(), this.maxBlockBigX(), this.maxBlockBigY(), this.maxBlockBigZ());
    }
 
    public static Stream<SectionPos> m_123201_(SectionPos p_123202_, int p_123203_) {
-      int i = p_123202_.m_123170_();
-      int j = p_123202_.m_123206_();
-      int k = p_123202_.m_123222_();
-      return m_123177_(i - p_123203_, j - p_123203_, k - p_123203_, i + p_123203_, j + p_123203_, k + p_123203_);
-   }
-
-   public static Stream<SectionPos> m_175557_(ChunkPos p_175558_, int p_175559_, int p_175560_, int p_175561_) {
-      int i = p_175558_.f_45578_;
-      int j = p_175558_.f_45579_;
-      return m_123177_(i - p_175559_, p_175560_, j - p_175559_, i + p_175559_, p_175561_ - 1, j + p_175559_);
-   }
-
-   public static Stream<SectionPos> m_123177_(final int p_123178_, final int p_123179_, final int p_123180_, final int p_123181_, final int p_123182_, final int p_123183_) {
-      return StreamSupport.stream(new Spliterators.AbstractSpliterator<SectionPos>((long)((p_123181_ - p_123178_ + 1) * (p_123182_ - p_123179_ + 1) * (p_123183_ - p_123180_ + 1)), 64) {
-         final Cursor3D f_123254_ = new Cursor3D(p_123178_, p_123179_, p_123180_, p_123181_, p_123182_, p_123183_);
+      me.alphamode.mclong.math.BigInteger i = p_123202_.getBigX();
+      me.alphamode.mclong.math.BigInteger j = p_123202_.getBigY();
+      me.alphamode.mclong.math.BigInteger k = p_123202_.getBigZ();
+      return betweenClosedStream(i.subtract(p_123203_), j.subtract(p_123203_), k.subtract(p_123203_), i.add(p_123203_), j.add(p_123203_), k.add(p_123203_));
+   }
+
+   public static Stream<SectionPos> aroundChunk(ChunkPos pChunkPos, long pX, long pY, long pZ) {
+      me.alphamode.mclong.math.BigInteger i = pChunkPos.getX();
+      me.alphamode.mclong.math.BigInteger j = pChunkPos.getZ();
+      return betweenClosedStream(i.subtract(pX), me.alphamode.mclong.math.BigInteger.valueOf(pY), j.subtract(pX), i.add(pX), me.alphamode.mclong.math.BigInteger.valueOf(pZ - 1), j.add(pX));
+   }
+
+   public static Stream<SectionPos> betweenClosedStream(final me.alphamode.mclong.math.BigInteger pX1, final me.alphamode.mclong.math.BigInteger pY1, final me.alphamode.mclong.math.BigInteger pZ1, final me.alphamode.mclong.math.BigInteger pX2, final me.alphamode.mclong.math.BigInteger pY2, final me.alphamode.mclong.math.BigInteger pZ2) {
+      return StreamSupport.stream(new Spliterators.AbstractSpliterator<SectionPos>((long)((pX2.subtract(pX1).add()).multiply((pY2.subtract(pY1).add())).multiply((pZ2.subtract(pZ1).add())).longValue()), 64) {
+         final Cursor3D f_123254_ = new Cursor3D(pX1, pY1, pZ1, pX2, pY2, pZ2);
 
          public boolean tryAdvance(Consumer<? super SectionPos> p_123271_) {
             if (this.f_123254_.m_122304_()) {
-               p_123271_.accept(new SectionPos(this.f_123254_.m_122305_(), this.f_123254_.m_122306_(), this.f_123254_.m_122307_()));
+               p_123271_.accept(new SectionPos(this.f_123254_.nextX(), this.f_123254_.nextY(), this.f_123254_.nextZ()));
                return true;
             } else {
                return false;
@@ -252,28 +_,28 @@
       }, false);
    }
 
-   public static void m_194642_(BlockPos p_194643_, LongConsumer p_194644_) {
-      m_194634_(p_194643_.m_123341_(), p_194643_.m_123342_(), p_194643_.m_123343_(), p_194644_);
-   }
-
-   public static void m_194639_(long p_194640_, LongConsumer p_194641_) {
-      m_194634_(BlockPos.m_121983_(p_194640_), BlockPos.m_122008_(p_194640_), BlockPos.m_122015_(p_194640_), p_194641_);
-   }
-
-   public static void m_194634_(int p_194635_, int p_194636_, int p_194637_, LongConsumer p_194638_) {
-      int i = m_123171_(p_194635_ - 1);
-      int j = m_123171_(p_194635_ + 1);
-      int k = m_123171_(p_194636_ - 1);
-      int l = m_123171_(p_194636_ + 1);
-      int i1 = m_123171_(p_194637_ - 1);
-      int j1 = m_123171_(p_194637_ + 1);
-      if (i == j && k == l && i1 == j1) {
-         p_194638_.accept(m_123209_(i, k, i1));
+   public static void aroundAndAtBlockPos(BlockPos pPos, java.util.function.Consumer<SectionPos> pConsumer) {
+      aroundAndAtBlockPos(pPos.getBigX(), pPos.getBigY(), pPos.getBigZ(), pConsumer);
+   }
+
+   public static void aroundAndAtBlockPos(SectionPos pPos, java.util.function.Consumer<SectionPos> pConsumer) {
+      aroundAndAtBlockPos(pPos.minBlockBigX(), pPos.minBlockBigY(), pPos.minBlockBigZ(), pConsumer);
+   }
+
+   public static void aroundAndAtBlockPos(me.alphamode.mclong.math.BigInteger pX, me.alphamode.mclong.math.BigInteger pY, me.alphamode.mclong.math.BigInteger pZ, java.util.function.Consumer<SectionPos> pConsumer) {
+      me.alphamode.mclong.math.BigInteger i = blockToSectionCoord(pX.subtract());
+      me.alphamode.mclong.math.BigInteger j = blockToSectionCoord(pX.add());
+      me.alphamode.mclong.math.BigInteger k = blockToSectionCoord(pY.subtract());
+      me.alphamode.mclong.math.BigInteger l = blockToSectionCoord(pY.add());
+      me.alphamode.mclong.math.BigInteger i1 = blockToSectionCoord(pZ.subtract());
+      me.alphamode.mclong.math.BigInteger j1 = blockToSectionCoord(pZ.add());
+      if (i.equals(j) && k.equals(l) && i1.equals(j1)) {
+         pConsumer.accept(of(i, k, i1));
       } else {
-         for(int k1 = i; k1 <= j; ++k1) {
-            for(int l1 = k; l1 <= l; ++l1) {
-               for(int i2 = i1; i2 <= j1; ++i2) {
-                  p_194638_.accept(m_123209_(k1, l1, i2));
+         for(me.alphamode.mclong.math.BigInteger k1 = i; k1.compareTo(j) <= 0; k1 = k1.add()) {
+            for(me.alphamode.mclong.math.BigInteger l1 = k; l1.compareTo(l) <= 0; l1 = l1.add()) {
+               for(me.alphamode.mclong.math.BigInteger i2 = i1; i2.compareTo(j1) <= 0; i2 = i2.add()) {
+                  pConsumer.accept(of(k1, l1, i2));
                }
             }
          }
